Domain,Technique ID,Technique Name,Sentences
Enterprise,T1543,Create or Modify System Process: Windows Service,Carbanak malware installs itself as a service to provide persistence and SYSTEM privileges.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Carbanak may use netsh to add local firewall rule exceptions.[7]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Carbanak has copied legitimate service names to use for malicious services.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Carbanak has named malware ""svchost.exe,"" which is the name of the Windows shared service host program.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,Carbanak has obtained and used open-source tools such as PsExec and Mimikatz.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Carbanak installs VNC server software that executes through rundll32.[1]
Enterprise,T1078,Valid Accounts,Carbanak actors used legitimate credentials of banking employees to perform operations that sent them millions of dollars.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,"Carbanak has used a VBScript named ""ggldr"" that uses Google Apps Script, Sheets, and Forms services for C2.[8]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,SilverTerrier uses HTTP for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,SilverTerrier uses FTP for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,SilverTerrier uses SMTP for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Frankenstein has used PowerShell to run a series of base64-encoded commands, that acted as a stager and enumerated hosts.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Frankenstein has run a command script to set up persistence as a scheduled task named ""WinUpdate"", as well as other encoded commands from the command-line.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Frankenstein has used Word documents that prompts the victim to enable macros and run a Visual Basic script.[1]
Enterprise,T1005,Data from Local System,"Frankenstein has enumerated hosts via Empire, gathering various local system information.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Frankenstein has deobfuscated base64-encoded commands following the execution of a malicious script, which revealed a small script designed to obtain an additional payload.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Frankenstein has communicated with a C2 via an encrypted RC4 byte stream and AES-CBC.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,"Frankenstein has collected information via Empire, which is automatically sent the data back to the adversary's C2.[1]"
Enterprise,T1105,Ingress Tool Transfer,Frankenstein has uploaded and downloaded files to utilize additional plugins.[1]
Enterprise,T1027,Obfuscated Files or Information,Frankenstein has run encoded commands from the command line.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Frankenstein has obtained and used Empire to deploy agents.[1]
Enterprise,T1003,OS Credential Dumping,Frankenstein has harvested credentials from the victim's machine using Empire.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Frankenstein has used spearphishing emails to send trojanized Microsoft Word documents.[1]
Enterprise,T1057,Process Discovery,"Frankenstein has enumerated hosts, looking to obtain a list of all currently running processes.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Frankenstein has established persistence through a scheduled task using the command: /Create /F /SC DAILY /ST 09:00 /TN WinUpdate /TR , named ""WinUpdate"".[1]"
Enterprise,T1518,Software Discovery: Security Software Discovery,Frankenstein has used WMI queries to detect if virtualization environments or analysis tools were running on the system.[1]
Enterprise,T1082,System Information Discovery,"Frankenstein has enumerated hosts, looking for the system's machine name.[1]"
Enterprise,T1016,System Network Configuration Discovery,"Frankenstein has enumerated hosts, looking for the public IP address of the system.[1]"
Enterprise,T1033,System Owner/User Discovery,"Frankenstein has enumerated hosts, gathering username, machine name, and administrative permissions information.[1]"
Enterprise,T1204,User Execution: Malicious File,"Frankenstein has used trojanized Microsoft Word documents sent via email, which prompted the victim to enable macros.[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"Frankenstein has used WMI queries to check if various security applications were running, including VMWare and Virtualbox.[1]"
Enterprise,T1047,Windows Management Instrumentation,"Frankenstein has used WMI queries to check if various security applications were running, as well as the operating system version.[1]"
Enterprise,T1087,Account Discovery: Local Account,"Ke3chang performs account discovery using commands such as net localgroup administrators and net group ""REDACTED"" /domain on specific permissions groups.[1]"
Enterprise,T1087,Account Discovery: Domain Account,"Ke3chang performs account discovery using commands such as net localgroup administrators and net group ""REDACTED"" /domain on specific permissions groups.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Ke3chang malware including RoyalCli and BS2005 have communicated over HTTP with the C2 server through Internet Explorer (IE) by using the COM interface IWebBrowser2.[2][4]
Enterprise,T1071,Application Layer Protocol: DNS,Ke3chang malware RoyalDNS has used DNS for C2.[2]
Enterprise,T1560,Archive Collected Data,The Ke3chang group has been known to compress data before exfiltration.[1]
Enterprise,T1560,Archive via Utility,Ke3chang is known to use 7Zip and RAR with passwords to encrypt data prior to exfiltration.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Several Ke3chang backdoors achieved persistence by adding a Run key.[2]
Enterprise,T1059,Command and Scripting Interpreter,Malware used by Ke3chang can run commands on the command-line interface.[1][2]
Enterprise,T1059,Windows Command Shell,Ke3chang has used batch scripts in its malware to install persistence mechanisms.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Ke3chang backdoor RoyalDNS established persistence through adding a service called Nwsapagent.[2]
Enterprise,T1005,Data from Local System,Ke3chang gathered information and files from local directories for exfiltration.[1][4]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Ke3chang has deobfuscated Base64-encoded shellcode strings prior to loading them.[4]
Enterprise,T1041,Exfiltration Over C2 Channel,Ke3chang transferred compressed and encrypted RAR files containing exfiltration through the established backdoor command and control channel during operations.[1]
Enterprise,T1083,File and Directory Discovery,Ke3chang uses command-line interaction to search files and directories.[1][4]
Enterprise,T1105,Ingress Tool Transfer,Ke3chang has used tools to download files to compromised machines.[4]
Enterprise,T1056,Input Capture: Keylogging,Ke3chang has used keyloggers.[2][4]
Enterprise,T1036,Masquerading: Right-to-Left Override,Ke3chang has used the right-to-left override character in spearphishing attachment names to trick targets into executing .scr and .exe files.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Ke3chang has dropped their malware into legitimate installed software paths including: C:\ProgramFiles\Realtek\Audio\HDA\AERTSr.exe, C:\Program Files (x86)\Foxit Software\Foxit Reader\FoxitRdr64.exe, C:\Program Files (x86)\Adobe\Flash Player\AddIns\airappinstaller\airappinstall.exe, and C:\Program Files (x86)\Adobe\Acrobat Reader DC\Reader\AcroRd64.exe.[4]"
Enterprise,T1027,Obfuscated Files or Information,Ke3chang has used Base64-encoded shellcode strings.[4]
Enterprise,T1588,Obtain Capabilities: Tool,Ke3chang has obtained and used tools such as Mimikatz.[2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"Ke3chang has dumped credentials, including by using Mimikatz.[1][2][4]"
Enterprise,T1003,OS Credential Dumping: Security Account Manager,"Ke3chang has dumped credentials, including by using gsecdump.[1][2]"
Enterprise,T1003,OS Credential Dumping: NTDS,Ke3chang has used NTDSDump and other password dumping tools to gather credentials.[4]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,"Ke3chang has dumped credentials, including by using gsecdump.[1][2]"
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Ke3chang performs discovery of permission groups net group /domain.[1]
Enterprise,T1057,Process Discovery,Ke3chang performs process discovery using tasklist commands.[1][2]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Ke3chang actors have been known to copy files to the network shares of other computers to move laterally.[1][2]
Enterprise,T1018,Remote System Discovery,"Ke3chang has used network scanning and enumeration tools, including Ping.[2]"
Enterprise,T1082,System Information Discovery,Ke3chang performs operating system information discovery using systeminfo and has used implants to identify the system language and computer name.[1][2][4]
Enterprise,T1016,System Network Configuration Discovery,Ke3chang has performed local network configuration discovery using ipconfig.[1][2][4]
Enterprise,T1049,System Network Connections Discovery,Ke3chang performs local network connection discovery using netstat.[1][2]
Enterprise,T1033,System Owner/User Discovery,Ke3chang has used implants capable of collecting the signed-in username.[4]
Enterprise,T1569,System Services: Service Execution,Ke3chang has used a tool known as RemoteExec (similar to PsExec) to remotely execute batch scripts and binaries.[2]
Enterprise,T1078,Valid Accounts,"Ke3chang has used credential dumpers or stealers to obtain legitimate credentials, which they used to gain access to victim accounts.[4]"
Enterprise,T1078,Cloud Accounts,Ke3chang has used compromised credentials to sign into victims’ Microsoft 365 accounts.[4]
Enterprise,T1588,Obtain Capabilities: Tool,PittyTiger has obtained and used tools such as Mimikatz and gsecdump.[1]
Enterprise,T1078,Valid Accounts,PittyTiger attempts to obtain legitimate credentials during operations.[1]
Enterprise,T1083,File and Directory Discovery,Winnti Group has used a program named ff.exe to search for specific documents on compromised hosts.[1]
Enterprise,T1105,Ingress Tool Transfer,Winnti Group has downloaded an auxiliary program named ff.exe to infected machines.[1]
Enterprise,T1057,Process Discovery,Winnti Group looked for a specific process running on infected servers.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Winnti Group used stolen certificates to sign its malware.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Molerats saved malicious files within the AppData and Startup folders to maintain persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Molerats used PowerShell implants on target machines.[3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,"Molerats used various implants, including those built with VBScript, on target machines.[3][6]"
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,"Molerats used various implants, including those built with JS, on target machines.[3]"
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Molerats used the public tool BrowserPasswordDump10 to dump passwords saved in browsers on victims.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Molerats decompresses ZIP files once on the victim machine.[3]
Enterprise,T1105,Ingress Tool Transfer,Molerats used executables to download malicious files from different sources.[3][6]
Enterprise,T1027,Obfuscated Files or Information,Molerats has delivered compressed executables within ZIP files to victims.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Molerats has sent phishing emails with malicious Microsoft Word and PDF attachments.[3][6][4]
Enterprise,T1566,Phishing: Spearphishing Link,Molerats has sent phishing emails with malicious links included.[3]
Enterprise,T1057,Process Discovery,Molerats actors obtained a list of active processes on the victim and sent them to C2 servers.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Molerats has created scheduled tasks to persistently run VBScripts.[6]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Molerats has used forged Microsoft code-signing certificates on malware.[5]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Molerats has used msiexec.exe to execute an MSI payload.[6]
Enterprise,T1204,User Execution: Malicious Link,Molerats has sent malicious links via email trick users into opening a RAR archive and running an executable.[3][6]
Enterprise,T1204,User Execution: Malicious File,Molerats has sent malicious files via email that tricked users into clicking Enable Content to run an embedded macro and to download malicious archives.[3][6][4]
Enterprise,T1087,Account Discovery: Local Account,"OilRig has run net user, net user /domain, net group ""domain admins"" /domain, and net group ""Exchange Trusted Subsystem"" /domain to get account listings on a victim.[3]"
Enterprise,T1087,Account Discovery: Domain Account,"OilRig has run net user, net user /domain, net group ""domain admins"" /domain, and net group ""Exchange Trusted Subsystem"" /domain to get account listings on a victim.[3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,OilRig has used HTTP for C2.[5][11][12]
Enterprise,T1071,Application Layer Protocol: DNS,OilRig has used DNS for C2 including the publicly available requestbin.net tunneling service.[5][11][12][10]
Enterprise,T1059,Command and Scripting Interpreter,OilRig has used various types of scripting for execution.[6][13][14][7][15]
Enterprise,T1059,PowerShell,"OilRig has used PowerShell scripts for execution, including use of a macro to run a PowerShell command to decode file contents.[6][16][9]"
Enterprise,T1059,Windows Command Shell,OilRig has used macros to deliver malware such as QUADAGENT and OopsIE.[6][13][14][7][15] OilRig has used batch scripts.[6][13][14][7][15]
Enterprise,T1059,Visual Basic,OilRig has used VBSscipt macros for execution on compromised hosts.[10]
Enterprise,T1555,Credentials from Password Stores,OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[5][11][17][12]
Enterprise,T1555,Credentials from Web Browsers,OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[5][11][17][12] OilRig has also used tool named PICKPOCKET to dump passwords from web browsers.[12]
Enterprise,T1555,Windows Credential Manager,OilRig has used credential dumping tool named VALUEVAULT to steal credentials from the Windows Credential Manager.[12]
Enterprise,T1140,Deobfuscate/Decode Files or Information,A OilRig macro has run a PowerShell command to decode file contents. OilRig has also used certutil to decode base64-encoded files on victims.[6][16][14][18]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,OilRig used the Plink utility and other tools to create tunnels to C2 servers.[11]
Enterprise,T1070,Indicator Removal on Host: File Deletion,OilRig has deleted files associated with their payload after execution.[6][14]
Enterprise,T1105,Ingress Tool Transfer,OilRig can download remote files onto victims.[6]
Enterprise,T1056,Input Capture: Keylogging,OilRig has used keylogging tools called KEYPUNCH and LONGWATCH.[11][12]
Enterprise,T1036,Masquerading,OilRig has used .doc file extensions to mask malicious executables.[10]
Enterprise,T1027,Obfuscated Files or Information,"OilRig has encrypted and encoded data in its malware, including by using base64.[6][7][5][9][15]"
Enterprise,T1027,Indicator Removal from Tools,OilRig has tested malware samples to determine AV detection and subsequently modified the samples to ensure AV evasion.[1][15]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,OilRig has used credential dumping tools such as Mimikatz to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[5][11][17][12]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[5][11][17][12]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,OilRig has used credential dumping tools such as LaZagne to steal credentials to accounts logged into the compromised system and to Outlook Web Access.[5][11][17][12]
Enterprise,T1069,Permission Groups Discovery: Local Groups,OilRig has used net localgroup administrators to find local administrators on compromised systems.[3]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,"OilRig has used net group /domain, net group ""domain admins"" /domain, and net group ""Exchange Trusted Subsystem"" /domain to find domain group permission settings.[3]"
Enterprise,T1566,Phishing: Spearphishing Attachment,OilRig has sent spearphising emails with malicious attachments to potential victims using compromised and/or spoofed email accounts.[14][7][9]
Enterprise,T1566,Phishing: Spearphishing Link,OilRig has sent spearphising emails with malicious links to potential victims.[14]
Enterprise,T1566,Phishing: Spearphishing via Service,OilRig has used LinkedIn to send spearphishing links.[12]
Enterprise,T1057,Process Discovery,OilRig has run tasklist on a victim's machine.[3]
Enterprise,T1012,Query Registry,"OilRig has used reg query ""HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default"" on a victim to query the Registry.[3]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,OilRig has used Remote Desktop Protocol for lateral movement. The group has also used tunneling tools to tunnel RDP into the environment.[5][11][18]
Enterprise,T1021,Remote Services: SSH,OilRig has used Putty to access compromised systems.[5]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,OilRig has created scheduled tasks that run a VBScript to execute a payload on victim machines.[14][7][12][10]
Enterprise,T1113,Screen Capture,OilRig has a tool called CANDYKING to capture a screenshot of user's desktop.[11]
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,OilRig has used a CHM payload to load and execute another malicious file once delivered to a victim.[3]
Enterprise,T1082,System Information Discovery,OilRig has run hostname and systeminfo on a victim.[3][4][12][10]
Enterprise,T1016,System Network Configuration Discovery,OilRig has run ipconfig /all on a victim.[3][4]
Enterprise,T1049,System Network Connections Discovery,OilRig has used netstat -an on a victim to get a listing of network connections.[3]
Enterprise,T1033,System Owner/User Discovery,OilRig has run whoami on a victim.[3][4][10]
Enterprise,T1204,User Execution: Malicious Link,OilRig has delivered malicious links to achieve execution on the target system.[14][7][9]
Enterprise,T1204,User Execution: Malicious File,"OilRig has delivered macro-enabled documents that required targets to click the ""enable content"" button to execute the payload on the system.[14][7][9][10]"
Enterprise,T1078,Valid Accounts,OilRig has used compromised credentials to access other systems on a victim network.[5][11][18]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,OilRig has used macros to verify if a mouse is connected to a compromised machine.[10]
Enterprise,T1047,Windows Management Instrumentation,OilRig has used WMI for execution.[11]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Silence has used HKCU\Software\Microsoft\Windows\CurrentVersion\Run, HKLM\Software\Microsoft\Windows\CurrentVersion\Run, and the Startup folder to establish persistence.[4]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Silence has used PowerShell to download and execute payloads.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Silence has used Windows command-line to run commands.[1][2][4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Silence has used VBS scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Silence has used JS scripts.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Silence has deleted artifacts, including scheduled tasks, communicates files from the C2 and other logs.[1][4]"
Enterprise,T1105,Ingress Tool Transfer,Silence has downloaded additional modules and malware to victim’s machines.[4]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Silence has named its backdoor ""WINWORD.exe"".[4]"
Enterprise,T1112,Modify Registry,"Silence can create, delete, or modify a specified Registry key or value.[4]"
Enterprise,T1106,Native API,"Silence has leveraged the Windows API, including using CreateProcess() or ShellExecute(), to perform a variety of tasks.[2][4]"
Enterprise,T1027,Obfuscated Files or Information,Silence has used environment variable string substitution for obfuscation.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Silence has obtained and modified versions of publicly-available tools like Empire and PsExec.[5] [2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Silence has used the Farse6.1 utility (based on Mimikatz) to extract credentials from lsass.exe.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,"Silence has sent emails with malicious DOCX, CHM, LNK and ZIP attachments. [1][2][4]"
Enterprise,T1055,Process Injection,Silence has injected a DLL library containing a Trojan into the fwmain32.exe process.[4]
Enterprise,T1090,Proxy: External Proxy,"Silence has used ProxyBot, which allows the attacker to redirect traffic from the current node to the backconnect server via Sock4\Socks5.[4]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Silence has used RDP for lateral movement.[4]
Enterprise,T1018,Remote System Discovery,"Silence has used Nmap to scan the corporate network, build a network topology, and identify vulnerable hosts.[4]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Silence has used scheduled tasks to stage its operation.[1]
Enterprise,T1113,Screen Capture,Silence can capture victim screen activity.[2][4]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Silence has used a valid certificate to sign their primary loader Silence.Downloader (aka TrueBot).[5]
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,Silence has weaponized CHM files in their phishing campaigns.[1][2][5][4]
Enterprise,T1569,System Services: Service Execution,Silence has used Winexe to install a service on the remote system.[2][4]
Enterprise,T1204,User Execution: Malicious File,Silence attempts to get users to launch malicious attachments delivered via spearphishing emails.[1][2][4]
Enterprise,T1078,Valid Accounts,Silence has used compromised credentials to log on to other systems and escalate privileges.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ZIRCONIUM has created a Registry Run key named Dropbox Update Setup to establish persistence for a malicious Python binary.[4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ZIRCONIUM has used a tool to open a Windows Command Shell on a remote host.[4]
Enterprise,T1059,Command and Scripting Interpreter: Python,ZIRCONIUM has used Python-based implants to interact with compromised hosts.[3][4]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,ZIRCONIUM has used a tool to steal credentials from installed web browsers including Microsoft Internet Explorer and Google Chrome.[4]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ZIRCONIUM has used the AES256 algorithm with a SHA1 derived key to decrypt exploit code.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,ZIRCONIUM has used AES encrypted communications in C2.[4]
Enterprise,T1041,Exfiltration Over C2 Channel,ZIRCONIUM has exfiltrated files via the Dropbox API C2.[4]
Enterprise,T1105,Ingress Tool Transfer,ZIRCONIUM has used tools to download malicious files to compromised hosts.[4]
Enterprise,T1036,Masquerading,ZIRCONIUM has spoofed legitimate applications in phishing lures and changed file extensions to conceal installation of malware.[3][4]
Enterprise,T1036,Masquerade Task or Service,ZIRCONIUM has created a run key named Dropbox Update Setup to mask a persistence mechanism for a malicious binary.[4]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,ZIRCONIUM has used multi-stage packers for exploit code.[2]
Enterprise,T1566,Phishing: Spearphishing Link,ZIRCONIUM has used malicious links and web beacons in e-mails for malware download and to track hits to attacker-controlled URL's.[1][3][4]
Enterprise,T1012,Query Registry,ZIRCONIUM has used a tool to query the Registry for proxy settings.[4]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,ZIRCONIUM has used the msiexec.exe command-line utility to download and execute malicious MSI files.[4]
Enterprise,T1082,System Information Discovery,ZIRCONIUM has used a tool to capture the processor architecture of a compromised host in order to register it with C2.[4]
Enterprise,T1016,System Network Configuration Discovery,ZIRCONIUM has used a tool to enumerate proxy settings in the target environment.[4]
Enterprise,T1033,System Owner/User Discovery,ZIRCONIUM has used a tool to capture the username on a compromised host in order to register it with C2.[4]
Enterprise,T1124,System Time Discovery,ZIRCONIUM has used a tool to capture the time on a compromised host in order to register it with C2.[4]
Enterprise,T1204,User Execution: Malicious Link,ZIRCONIUM has used malicious links in e-mails to lure victims into downloading malware.[3][4]
Enterprise,T1102,Web Service: Bidirectional Communication,ZIRCONIUM has used Dropbox for C2 allowing upload and download of files as well as execution of arbitrary commands.[3][4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Night Dragon has used HTTP for C2.[1]
Enterprise,T1074,Data Staged: Remote Data Staging,Night Dragon has copied files to company web servers and subsequently downloaded them.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Night Dragon has disabled anti-virus and anti-spyware tools in some instances on the victim’s machines. The actors have also disabled proxy settings to allow direct communication from victims to the Internet.[1]
Enterprise,T1027,Obfuscated Files or Information,A Night Dragon DLL included an XOR-encoded section.[1]
Enterprise,T1027,Software Packing,Night Dragon is known to use software packing in its tools.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Night Dragon has obtained and used tools such as gsecdump.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Night Dragon has dumped account hashes with Carbanak and cracked them with Cain & Abel.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Night Dragon sent spearphishing emails containing links to compromised websites where malware was downloaded.[1]
Enterprise,T1204,User Execution: Malicious Link,Night Dragon enticed users to click on links in spearphishing emails to download malware.[1]
Enterprise,T1078,Valid Accounts,Night Dragon has used compromised VPN accounts to gain access to victim systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Kimsuky has used HTTP GET and POST requests for C2.[13]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Kimsuky has used FTP to download additional malware to the target machine.[14]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Kimsuky has used e-mail to send exfiltrated data to C2 servers.[5]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Kimsuky has used QuickZip to archive stolen files before exfiltration.[13]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Kimsuky has used RC4 encryption before exfil.[15]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Kimsuky has placed scripts in the startup folder for persistence and modified the HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce Registry key.[15][5][16][13][11]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Kimsuky has executed a variety of PowerShell scripts.[1][5][13][11]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Kimsuky has executed Windows commands by using cmd and running batch scripts.[13][11]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Kimsuky has used Visual Basic to download malicious payloads.[10][14][16][13] Kimsuky has also used malicious VBA macros within maldocs disguised as forms that trigger when a victim types any content into the lure.[13]
Enterprise,T1059,Command and Scripting Interpreter: Python,Kimsuky has used a macOS Python implant to gather data as well as MailFetcher.py code to automatically collect email data.[5][11]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Kimsuky has used JScript for logging and downloading additional tools.[14][5]
Enterprise,T1543,Create or Modify System Process: Windows Service,Kimsuky has created new services for persistence.[15][5]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Kimsuky has used browser extensions including Google Chrome to steal passwords and cookies from browsers. Kimsuky has also used Nirsoft's WebBrowserPassView tool to dump the passwords obtained from victims.[9][5][6][13]
Enterprise,T1005,Data from Local System,"Kimsuky has collected Office, PDF, and HWP documents from its victims.[15][13]"
Enterprise,T1074,Data Staged: Local Data Staging,Kimsuky has staged collected data files under C:\Program Files\Common Files\System\Ole DB\.[5][13]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Kimsuky has decoded malicious VBScripts using Base64.[13]
Enterprise,T1041,Exfiltration Over C2 Channel,Kimsuky has exfiltrated data over its C2 channel.[15][13]
Enterprise,T1083,File and Directory Discovery,Kimsuky has the ability to enumerate all files and directories on an infected system.[15][13][11]
Enterprise,T1564,Hide Artifacts: Hidden Users,Kimsuky has run reg add ‘HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon\SpecialAccounts\UserList’ /v to hide a newly created user.[11]
Enterprise,T1564,Hide Artifacts: Hidden Window,Kimsuky has used an information gathering module that will hide an AV software window from the victim.[13]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Kimsuky has been observed turning off Windows Security Center and can hide the AV software window from the view of the infected user.[15][13]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Kimsuky has been observed disabling the system firewall.[15]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Kimsuky has deleted the exfiltrated data on disk after transmission. Kimsuky has also used an instrumentor script to terminate browser processes running on an infected system and then delete the cookie files on disk.[15][13][11]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Kimsuky has manipulated timestamps for creation or compilation dates to defeat anti-forensics.[3]
Enterprise,T1105,Ingress Tool Transfer,"Kimsuky has downloaded additional scripts, tools, and malware onto victim systems.[16][13]"
Enterprise,T1056,Input Capture: Keylogging,Kimsuky has used a PowerShell-based keylogger as well as a tool called MECHANICAL to log keystrokes.[1][15][5][6][13][11]
Enterprise,T1036,Masquerading,"Kimsuky has disguised its C2 addresses as the websites of shopping malls, governments, universities, and others.[11]"
Enterprise,T1036,Masquerade Task or Service,Kimsuky has disguised services to appear as benign software or related to operating system functions.[5]
Enterprise,T1036,Match Legitimate Name or Location,Kimsuky has renamed malware to legitimate names such as ESTCommon.dll or patch.dll.[11]
Enterprise,T1112,Modify Registry,Kimsuky has modified Registry settings for default file associations to enable all macros and for persistence.[5][16][13][11]
Enterprise,T1027,Obfuscated Files or Information,Kimsuky has obfuscated binary strings including the use of XOR encryption and Base64 encoding.[10][14] Kimsuky has also modified the first byte of DLL implants targeting victims to prevent recognition of the executable file format.[13]
Enterprise,T1027,Software Packing,Kimsuky has packed malware with UPX.[4]
Enterprise,T1588,Obtain Capabilities: Tool,"Kimsuky has obtained and used tools such as Nirsoft WebBrowserPassVIew, Mimikatz, and PsExec.[6][13]"
Enterprise,T1588,Obtain Capabilities: Exploits,Kimsuky has obtained exploit code for various CVEs.[11]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Kimsuky has gathered credentials using Mimikatz and ProcDump.[5][6][11]
Enterprise,T1566,Phishing: Spearphishing Attachment,"Kimsuky has used emails containing Word, Excel and/or HWP (Hangul Word Processor) documents in their spearphishing campaigns.[9][15][10][14][3][4][13][11]"
Enterprise,T1566,Phishing: Spearphishing Link,Kimsuky has sent spearphishing emails containing a link to a document that contained malicious macros or took the victim to an actor-controlled domain.[1][6][11]
Enterprise,T1057,Process Discovery,Kimsuky can gather a list of all processes running on a victim's machine.[13]
Enterprise,T1055,Process Injection,Kimsuky has used Win7Elevate to inject malicious code into explorer.exe.[15]
Enterprise,T1055,Process Hollowing,Kimsuky has used a file injector DLL to spawn a benign process on the victim's system and inject the malicious payload into it via process hollowing.[13]
Enterprise,T1012,Query Registry,Kimsuky has obtained specific Registry keys and values on a compromised host.[13]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Kimsuky has used RDP for direct remote point-and-click access.[6]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Kimsuky has downloaded additional malware with scheduled tasks.[11]
Enterprise,T1518,Software Discovery: Security Software Discovery,Kimsuky has checked for the presence of antivirus software with powershell Get-CimInstance -Namespace root/securityCenter2 – classname antivirusproduct.[11]
Enterprise,T1553,Subvert Trust Controls: Code Signing,"Kimsuky has signed files with the name EGIS CO,. Ltd..[10]"
Enterprise,T1218,System Binary Proxy Execution: Mshta,Kimsuky has used mshta.exe to run malicious scripts on the system.[1][5][16][11]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Kimsuky has executed malware with regsvr32s.[11]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Kimsuky has used rundll32.exe to execute malicious scripts and malware on a victim's network.[13]
Enterprise,T1082,System Information Discovery,"Kimsuky has enumerated drives, OS type, OS version, and other information using a script or the ""systeminfo"" command.[15][13]"
Enterprise,T1016,System Network Configuration Discovery,Kimsuky has used ipconfig/all to gather network configuration information.[13]
Enterprise,T1204,User Execution: Malicious Link,Kimsuky has lured victims into clicking malicious links.[11]
Enterprise,T1204,User Execution: Malicious File,Kimsuky has used attempted to lure victims into opening malicious e-mail attachments.[10][14][5][3][4][13]
Enterprise,T1078,Valid Accounts: Local Accounts,Kimsuky has used a tool called GREASE to add a Windows admin account in order to allow them continued access via RDP.[6]
Enterprise,T1102,Web Service: Bidirectional Communication,Kimsuky has used Blogspot pages for C2.[13]
Enterprise,T1087,Account Discovery: Local Account,Fox Kitten has accessed ntuser.dat and UserClass.dat on compromised hosts.[5]
Enterprise,T1087,Account Discovery: Domain Account,Fox Kitten has used the Softerra LDAP browser to browse documentation on service accounts.[5]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Fox Kitten has used 7-Zip to archive data.[5]
Enterprise,T1059,Command and Scripting Interpreter,Fox Kitten has used a Perl reverse shell to communicate with C2.[4]
Enterprise,T1059,PowerShell,Fox Kitten has used PowerShell scripts to access credential data.[5]
Enterprise,T1059,Windows Command Shell,Fox Kitten has used cmd.exe likely as a password changing mechanism.[5]
Enterprise,T1555,Credentials from Password Stores: Password Managers,Fox Kitten has used scripts to access credential information from the KeePass database.[5]
Enterprise,T1005,Data from Local System,Fox Kitten has searched local system resources to access sensitive documents.[5]
Enterprise,T1083,File and Directory Discovery,Fox Kitten has used WizTree to obtain network files and directory listings.[5]
Enterprise,T1105,Ingress Tool Transfer,Fox Kitten has downloaded additional tools including PsExec directly to endpoints.[5]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Fox Kitten has named the task for a reverse proxy lpupdate to appear legitimate.[5]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Fox Kitten has named binaries and configuration files svhost and dllhost respectively to appear legitimate.[5]
Enterprise,T1027,Obfuscated Files or Information,Fox Kitten has base64 encoded scripts and payloads to avoid detection.[5]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Fox Kitten has used prodump to dump credentials from LSASS.[5]
Enterprise,T1003,OS Credential Dumping: NTDS,Fox Kitten has used Volume Shadow Copy to access credential information from NTDS.[5]
Enterprise,T1090,Proxy,Fox Kitten has used the open source reverse proxy tools including FRPC and Go Proxy to establish connections from C2 to local servers.[5][4][6]
Enterprise,T1012,Query Registry,Fox Kitten has accessed Registry hives ntuser.dat and UserClass.dat.[5]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Fox Kitten has used RDP to log in and move laterally in the target environment.[5][4]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Fox Kitten has used valid accounts to access SMB shares.[5]
Enterprise,T1021,Remote Services: SSH,Fox Kitten has used the PuTTY and Plink tools for lateral movement.[5]
Enterprise,T1021,Remote Services: VNC,Fox Kitten has installed TightVNC server and client on compromised servers and endpoints for lateral movement.[5]
Enterprise,T1018,Remote System Discovery,Fox Kitten has used Angry IP Scanner to detect remote systems.[5]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Fox Kitten has used Scheduled Tasks for persistence and to load and execute a reverse proxy binary.[5][4]
Enterprise,T1078,Valid Accounts,Fox Kitten has used valid credentials with various services during lateral movement.[5]
Enterprise,T1102,Web Service,Fox Kitten has used Amazon Web Services to host C2.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Darkhotel has been known to establish persistence by adding programs to the Run Registry key.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Darkhotel has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Darkhotel has dropped an mspaint.lnk shortcut to disk which launches a shell script that downloads and executes a file.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Darkhotel has decrypted strings and imports using RC4 during execution.[2][6]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Darkhotel has used AES-256 and 3DES for C2 communications.[6]
Enterprise,T1083,File and Directory Discovery,Darkhotel has used malware that searched for files with specific patterns.[6]
Enterprise,T1105,Ingress Tool Transfer,Darkhotel has used first-stage payloads that download additional malware from C2 servers.[4]
Enterprise,T1056,Input Capture: Keylogging,Darkhotel has used a keylogger.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Darkhotel has used malware that is disguised as a Secure Shell (SSH) tool.[4]
Enterprise,T1027,Obfuscated Files or Information,"Darkhotel has obfuscated code using RC4, XOR, and RSA.[2][6]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Darkhotel has sent spearphishing emails with malicious RAR and .LNK attachments.[2][6]
Enterprise,T1057,Process Discovery,Darkhotel malware can collect a list of running processes on a system.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Darkhotel has searched for anti-malware strings and anti-virus processes running on the system.[2][4]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Darkhotel has used code-signing certificates on its malware that are either forged due to weak keys or stolen. Darkhotel has also stolen certificates and signed backdoors and downloaders with them.[1][2]
Enterprise,T1082,System Information Discovery,"Darkhotel has collected the hostname, OS version, service pack version, and the processor architecture from the victim’s machine.[2][6]"
Enterprise,T1016,System Network Configuration Discovery,Darkhotel has collected the IP address and network adapter information from the victim’s machine.[2][6]
Enterprise,T1124,System Time Discovery,Darkhotel malware can obtain system time from a compromised host.[7]
Enterprise,T1204,User Execution: Malicious File,Darkhotel has sent spearphishing emails in an attempt to lure users into clicking on a malicious attachments.[2][6]
Enterprise,T1497,Virtualization/Sandbox Evasion,Darkhotel malware has employed just-in-time decryption of strings to evade sandbox detection.[7]
Enterprise,T1497,System Checks,"Darkhotel malware has used a series of checks to determine if it's being analyzed; checks include the length of executable names, if a filename ends with .Md5.exe, and if the program is executed from the root of the C:\ drive, as well as checks for sandbox-related libraries.[7][4]"
Enterprise,T1497,User Activity Based Checks,Darkhotel has used malware that repeatedly checks the mouse cursor position to determine if a real user is on the system.[7]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,APT-C-36 has embedded a VBScript within a malicious Word document which is executed upon the document opening.[1]
Enterprise,T1105,Ingress Tool Transfer,APT-C-36 has downloaded binary data from a specified domain after the malicious document is opened.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,APT-C-36 has disguised its scheduled tasks as those used by Google.[1]
Enterprise,T1027,Obfuscated Files or Information,"APT-C-36 has used ConfuserEx to obfuscate its variant of Imminent Monitor, compressed payload and RAT packages, and password protected encrypted email attachments to avoid detection.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,APT-C-36 obtained and used a modified variant of Imminent Monitor.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT-C-36 has used spearphishing emails with password protected RAR attachment to avoid being detected by the email gateway.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"APT-C-36 has used a macro function to set scheduled tasks, disguised as those used by Google.[1]"
Enterprise,T1204,User Execution: Malicious File,APT-C-36 has prompted victims to accept macros in order to execute the subsequent payload.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"CopyKittens uses ZPP, a .NET console program, to compress files with ZIP.[2]"
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,CopyKittens encrypts data with a substitute cipher prior to exfiltration.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,CopyKittens has used PowerShell Empire.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,CopyKittens has used -w hidden and -windowstyle hidden to conceal PowerShell windows. [2]
Enterprise,T1588,Obtain Capabilities: Tool,CopyKittens has used Metasploit and Empire for post-exploitation activities.[4]
Enterprise,T1553,Subvert Trust Controls: Code Signing,CopyKittens digitally signed an executable with a stolen certificate from legitimate company AI Squared.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"CopyKittens uses rundll32 to load various tools on victims, including a lateral movement tool named Vminst, Cobalt Strike, and shellcode.[2]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,"APT38 used a backdoor, QUICKRIDE, to communicate to the C2 server over HTTP and HTTPS.[2]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,APT38 has used PowerShell to execute commands and other operational tasks.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"APT38 has used a command-line tunneler, NACHOCHEESE, to give them shell access to a victim’s machine.[2]"
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,APT38 has used VBScript to execute commands and other operational tasks.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,APT38 has installed a new Windows service to establish persistence.[1]
Enterprise,T1005,Data from Local System,APT38 has collected data from a compromised host.[1]
Enterprise,T1083,File and Directory Discovery,"APT38 have enumerated files and directories, or searched in specific locations within a compromised host.[1]"
Enterprise,T1562,Impair Defenses: Impair Command History Logging,APT38 has prepended a space to all of their terminal commands to operate without leaving traces in the HISTCONTROL environment.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,"APT38 have created firewall exemptions on specific ports, including ports 443, 6443, 8443, and 9443.[1]"
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,APT38 clears Window Event logs and Sysmon logs from the system.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"APT38 has used a utility called CLOSESHAVE that can securely delete a file from the system. They have also removed malware, tools, or other non-native files used during the intrusion to reduce their footprint or as part of the post-intrusion cleanup process.[2][1]"
Enterprise,T1070,Indicator Removal on Host: Timestomp,APT38 has modified data timestamps to mimic files that are in the same folder on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,"APT38 used a backdoor, NESTEGG, that has the capability to download and upload files to and from a victim’s machine.[2]"
Enterprise,T1056,Input Capture: Keylogging,APT38 used a Trojan called KEYLIME to capture keystrokes from the victim’s machine.[2]
Enterprise,T1112,Modify Registry,APT38 uses a tool called CLEANTOAD that has the capability to modify Registry keys.[2]
Enterprise,T1106,Native API,APT38 has used the Windows API to execute code within a victim's system.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,"APT38 has used several code packing methods such as Themida, Enigma, VMProtect, and Obsidium, to pack their implants.[2]"
Enterprise,T1588,Obtain Capabilities: Tool,APT38 has obtained and used open-source tools such as Mimikatz.[8]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT38 has conducted spearphishing campaigns using malicious email attachments.[1]
Enterprise,T1057,Process Discovery,"APT38 leveraged Sysmon to understand the processes, services in the organization.[2]"
Enterprise,T1053,Scheduled Task/Job: Cron,APT38 has used cron to create pre-scheduled and periodic background jobs on a Linux system.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT38 has used Task Scheduler to run programs at system startup or on a scheduled basis for persistence.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,"APT38 has identified security software, configurations, defensive tools, and sensors installed on a compromised system.[1]"
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,APT38 has used CHM files to move concealed payloads.[9]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"APT38 has used rundll32.exe to execute binaries, scripts, and Control Panel Item files and to execute code via proxy to avoid triggering security tools.[1]"
Enterprise,T1082,System Information Discovery,"APT38 has attempted to get detailed information about a compromised host, including the operating system, version, patches, hotfixes, and service packs.[1]"
Enterprise,T1049,System Network Connections Discovery,"APT38 installed a port monitoring tool, MAPMAKER, to print the active TCP connections on the local system.[2]"
Enterprise,T1033,System Owner/User Discovery,"APT38 has identified primary users, currently logged in users, sets of users that commonly use a system, or inactive users.[1]"
Enterprise,T1569,System Services: Service Execution,"APT38 has created new services or modified existing ones to run executables, commands, or scripts.[1]"
Enterprise,T1204,User Execution: Malicious File,APT38 has attempted to lure victims into enabling malicious macros within email attachments.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Orangeworm has used HTTP for C2.[2]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,"Orangeworm has copied its backdoor across open network shares, including ADMIN$, C$WINDOWS, D$WINDOWS, and E$WINDOWS.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Gorgon Group malware can create a .lnk file and add a Registry Run key to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Gorgon Group malware can use PowerShell commands to download and execute a payload and open a decoy document on the victim’s machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Gorgon Group malware can use cmd.exe to download and execute payloads and to execute commands on the system.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Gorgon Group has used macros in Spearphishing Attachments as well as executed VBScripts on victim machines.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Gorgon Group malware can decode contents from a payload that was Base64 encoded and write the contents to a file.[1]
Enterprise,T1564,Hide Artifacts: Hidden Window,Gorgon Group has used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Gorgon Group malware can attempt to disable security features in Microsoft Office and Windows Defender using the taskkill command.[1]
Enterprise,T1105,Ingress Tool Transfer,Gorgon Group malware can download additional files from C2 servers.[1]
Enterprise,T1112,Modify Registry,Gorgon Group malware can deactivate security mechanisms in Microsoft Office by editing several keys and values under HKCU\Software\Microsoft\Office\.[1]
Enterprise,T1106,Native API,"Gorgon Group malware can leverage the Windows API call, CreateProcessA(), for execution.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,Gorgon Group has obtained and used tools such as QuasarRAT and Remcos.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Gorgon Group sent emails to victims with malicious Microsoft Office documents attached.[1]
Enterprise,T1055,Process Injection: Portable Executable Injection,"Gorgon Group malware can download a remote access tool, ShiftyBug, and inject into another process.[1]"
Enterprise,T1055,Process Injection: Process Hollowing,Gorgon Group malware can use process hollowing to inject one of its trojans into another process.[1]
Enterprise,T1204,User Execution: Malicious File,Gorgon Group attempted to get users to launch malicious Microsoft Office attachments delivered via spearphishing emails.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FIN4 has used HTTP POST requests to transmit data.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,FIN4 has used VBA macros to display a dialog box and collect victim credentials.[1][3]
Enterprise,T1564,Hide Artifacts: Email Hiding Rules,"FIN4 has created rules in victims' Microsoft Outlook accounts to automatically delete emails containing words such as ""hacked,"" ""phish,"" and ""malware"" in a likely attempt to prevent organizations from communicating about their activities.[1]"
Enterprise,T1056,Input Capture: Keylogging,FIN4 has captured credentials via fake Outlook Web App (OWA) login pages and has also used a .NET based keylogger.[1][3]
Enterprise,T1056,Input Capture: GUI Input Capture,FIN4 has presented victims with spoofed Windows Authentication prompts to collect their credentials.[1][3]
Enterprise,T1566,Phishing: Spearphishing Attachment,"FIN4 has used spearphishing emails containing attachments (which are often stolen, legitimate documents sent from compromised accounts) with embedded malicious macros.[1][3]"
Enterprise,T1566,Phishing: Spearphishing Link,FIN4 has used spearphishing emails (often sent from compromised accounts) containing malicious links.[1][3]
Enterprise,T1090,Proxy: Multi-hop Proxy,FIN4 has used Tor to log in to victims' email accounts.[1]
Enterprise,T1204,User Execution: Malicious Link,FIN4 has lured victims to click malicious links delivered via spearphishing emails (often sent from compromised accounts).[1][3]
Enterprise,T1204,User Execution: Malicious File,FIN4 has lured victims to launch malicious attachments delivered via spearphishing emails (often sent from compromised accounts).[1][3]
Enterprise,T1078,Valid Accounts,FIN4 has used legitimate credentials to hijack email communications.[1][3]
Enterprise,T1087,Account Discovery: Local Account,"APT1 used the commands net localgroup,net user, and net group to find accounts on the system.[1]"
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT1 has used RAR to compress files before moving them outside of the victim network.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"APT1 has used the Windows command shell to execute commands, and batch scripting to automate execution.[1]"
Enterprise,T1005,Data from Local System,APT1 has collected files from a local victim.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"The file name AcroRD32.exe, a legitimate process name for Adobe's Acrobat Reader, was used by APT1 as a name for malware.[1][3]"
Enterprise,T1588,Obtain Capabilities: Malware,APT1 used publicly available malware for privilege escalation.[1]
Enterprise,T1588,Obtain Capabilities: Tool,APT1 has used various open-source tools for privilege escalation purposes.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,APT1 has been known to use credential dumping using Mimikatz.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT1 has sent spearphishing emails containing malicious attachments.[1]
Enterprise,T1566,Phishing: Spearphishing Link,APT1 has sent spearphishing emails containing hyperlinks to malicious files.[1]
Enterprise,T1057,Process Discovery,APT1 gathered a list of running processes on the system using tasklist /v.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,The APT1 group is known to have used RDP during operations.[4]
Enterprise,T1016,System Network Configuration Discovery,APT1 used the ipconfig /all command to gather network configuration information.[1]
Enterprise,T1049,System Network Connections Discovery,APT1 used the net use command to get a listing on network connections.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Cobalt Group has used HTTPS for C2.[1][3][4]
Enterprise,T1071,Application Layer Protocol: DNS,Cobalt Group has used DNS tunneling for C2.[1][3][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Cobalt Group has used Registry Run keys for persistence. The group has also set a Startup path to launch the PowerShell shell command and download Cobalt Strike.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Cobalt Group has used powershell.exe to download and execute scripts.[1][2][3][4][7][12]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Cobalt Group has used a JavaScript backdoor that is capable of launching cmd.exe to execute shell commands.[11] The group has used an exploit toolkit known as Threadkit that launches .bat files.[1][2][4][11][13][12]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Cobalt Group has sent Word OLE compound documents with malicious obfuscated VBA macros that will run upon user execution.[1][2][4][11][13][12]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Cobalt Group has executed JavaScript scriptlets on the victim's machine.[1][2][4][11][13][12]
Enterprise,T1543,Create or Modify System Process: Windows Service,Cobalt Group has created new services to establish persistence.[4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Cobalt Group has used the Plink utility to create SSH tunnels.[4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Cobalt Group deleted the DLL dropper from the victim’s machine to cover their tracks.[1]
Enterprise,T1105,Ingress Tool Transfer,Cobalt Group has used public sites such as github.com and sendspace.com to upload files and then download them to victim computers.[2][3] The group's JavaScript backdoor is also capable of downloading files.[11]
Enterprise,T1027,Obfuscated Files or Information,"Cobalt Group obfuscated several scriptlets and code used on the victim’s machine, including through use of XOR and RC4.[1][11]"
Enterprise,T1588,Obtain Capabilities: Tool,"Cobalt Group has obtained and used a variety of tools including Mimikatz, PsExec, Cobalt Strike, and SDelete.[3]"
Enterprise,T1566,Phishing: Spearphishing Attachment,"Cobalt Group has sent spearphishing emails with various attachment types to corporate and personal email accounts of victim organizations. Attachment types have included .rtf, .doc, .xls, archives containing LNK files, and password protected archives containing .exe and .scr executables.[1][2][3][4][5][6][13][12]"
Enterprise,T1566,Phishing: Spearphishing Link,Cobalt Group has sent emails with URLs pointing to malicious documents.[1][9]
Enterprise,T1055,Process Injection,Cobalt Group has injected code into trusted processes.[4]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Cobalt Group has used Remote Desktop Protocol to conduct lateral movement.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Cobalt Group has created Windows tasks to establish persistence.[4]
Enterprise,T1518,Software Discovery: Security Software Discovery,Cobalt Group used a JavaScript backdoor that is capable of collecting a list of the security solutions installed on the victim's machine.[11]
Enterprise,T1218,System Binary Proxy Execution: CMSTP,Cobalt Group has used the command cmstp.exe /s /ns C:\Users\ADMINI~W\AppData\Local\Temp\XKNqbpzl.txt to bypass AppLocker and launch a malicious script.[1][11][13]
Enterprise,T1218,System Binary Proxy Execution: Odbcconf,Cobalt Group has used odbcconf to proxy the execution of malicious DLL files.[12]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Cobalt Group has used regsvr32.exe to execute scripts.[1][11][12]
Enterprise,T1204,User Execution: Malicious Link,Cobalt Group has sent emails containing malicious links that require users to execute a file or macro to infect the victim machine.[1][13][9]
Enterprise,T1204,User Execution: Malicious File,Cobalt Group has sent emails containing malicious attachments that require users to execute a file or macro to infect the victim machine.[1][13]
Enterprise,T1087,Account Discovery: Local Account,Threat Group-3390 has used net user to conduct internal discovery of systems.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Threat Group-3390 malware has used HTTP for C2.[3]
Enterprise,T1560,Archive Collected Data: Archive via Library,"Threat Group-3390 has used RAR to compress, encrypt, and password-protect files prior to exfiltration.[2]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,A Threat Group-3390 tool can add the binary’s path to the Registry key Software\Microsoft\Windows\CurrentVersion\Run to add persistence.[6]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Threat Group-3390 has used PowerShell for execution.[2][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Threat Group-3390 has used command-line interfaces for execution.[2][9]
Enterprise,T1543,Create or Modify System Process: Windows Service,"A Threat Group-3390 tool can create a new service, naming it after the config information, to gain persistence.[6]"
Enterprise,T1555,Credentials from Password Stores: Password Managers,Threat Group-3390 obtained a KeePass database from a compromised host.[4]
Enterprise,T1005,Data from Local System,Threat Group-3390 ran a command to compile an archive of file types of interest from the victim user's directories.[2]
Enterprise,T1074,Data Staged: Local Data Staging,Threat Group-3390 has locally staged encrypted archives for later exfiltration efforts.[2]
Enterprise,T1074,Data Staged: Remote Data Staging,Threat Group-3390 has moved staged encrypted archives to Internet-facing servers that had previously been compromised with China Chopper prior to exfiltration.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"During execution, Threat Group-3390 malware deobfuscates and decompresses code that was encoded with Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.[3]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Threat Group-3390 has performed DLL search order hijacking to execute their payload.[6]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Threat Group-3390 has used DLL side-loading, including by using legitimate Kaspersky antivirus variants in which the DLL acts as a stub loader that loads and executes the shell code.[1][2][3][9]"
Enterprise,T1562,Impair Defenses: Disable Windows Event Logging,Threat Group-3390 has used appcmd.exe to disable logging on a victim server.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Threat Group-3390 has deleted existing logs and exfiltrated file archives from a victim.[2][4]
Enterprise,T1070,Indicator Removal on Host: Network Share Connection Removal,"Threat Group-3390 has detached network shares after exfiltrating files, likely to evade detection.[2]"
Enterprise,T1105,Ingress Tool Transfer,"Threat Group-3390 has downloaded additional malware and tools, including through the use of certutil, onto a compromised host .[1][4]"
Enterprise,T1056,Input Capture: Keylogging,"Threat Group-3390 actors installed a credential logger on Microsoft Exchange servers. Threat Group-3390 also leveraged the reconnaissance framework, ScanBox, to capture keystrokes.[1][7][3]"
Enterprise,T1112,Modify Registry,A Threat Group-3390 tool has created new Registry keys under HKEY_CURRENT_USER\Software\Classes\ and HKLM\SYSTEM\CurrentControlSet\services.[6][5]
Enterprise,T1027,Obfuscated Files or Information,A Threat Group-3390 tool can encrypt payloads using XOR. Threat Group-3390 malware is also obfuscated using Metasploit’s shikata_ga_nai encoder as well as compressed with LZNT1 compression.[6][3][9]
Enterprise,T1027,Software Packing,Threat Group-3390 has packed malware and tools.[4]
Enterprise,T1588,Obtain Capabilities: Tool,"Threat Group-3390 has obtained and used tools such as Impacket, pwdump, Mimikatz, gsecdump, NBTscan, and Windows Credential Editor.[9][1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Threat Group-3390 actors have used a modified version of Mimikatz called Wrapikatz to dump credentials. They have also dumped credentials from domain controllers.[1][2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.[1][2]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,Threat Group-3390 actors have used gsecdump to dump credentials. They have also dumped credentials from domain controllers.[1][2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Threat Group-3390 has used e-mail to deliver malicious attachments to victims.[4]
Enterprise,T1055,Process Injection: Process Hollowing,A Threat Group-3390 tool can spawn svchost.exe and inject the payload into that process.[6][3]
Enterprise,T1012,Query Registry,A Threat Group-3390 tool can read and decrypt stored Registry values.[6]
Enterprise,T1021,Remote Services: Windows Remote Management,Threat Group-3390 has used WinRM to enable remote execution.[2]
Enterprise,T1018,Remote System Discovery,Threat Group-3390 has used the net view command.[6]
Enterprise,T1053,Scheduled Task/Job: At,"Threat Group-3390 actors use at to schedule tasks to run self-extracting RAR archives, which install HTTPBrowser or PlugX on other victims on a network.[1]"
Enterprise,T1016,System Network Configuration Discovery,Threat Group-3390 actors use NBTscan to discover vulnerable systems.[1]
Enterprise,T1049,System Network Connections Discovery,Threat Group-3390 has used net use and netstat to conduct internal discovery of systems. The group has also used quser.exe to identify existing RDP sessions on a victim.[2]
Enterprise,T1033,System Owner/User Discovery,Threat Group-3390 has used whoami to collect system user information.[4]
Enterprise,T1204,User Execution: Malicious File,Threat Group-3390 has lured victims into opening malicious files containing malware.[4]
Enterprise,T1078,Valid Accounts,Threat Group-3390 actors obtain legitimate credentials using a variety of methods and use them to further lateral movement on victim networks.[1]
Enterprise,T1047,Windows Management Instrumentation,A Threat Group-3390 tool can use WMI to execute a binary.[6]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,Moafee has been known to employ binary padding.[1]
Enterprise,T1087,Account Discovery: Domain Account,BRONZE BUTLER has used net user /domain to identify account information.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BRONZE BUTLER malware has used HTTP for C2.[2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,BRONZE BUTLER has compressed data into password-protected RAR archives prior to exfiltration.[2][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BRONZE BUTLER has used a batch script that adds a Registry Run key to establish malware persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,BRONZE BUTLER has used PowerShell for execution.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BRONZE BUTLER has used batch scripts and the command-line interface for execution.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,BRONZE BUTLER has used VBS and VBE scripts for execution.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: Python,BRONZE BUTLER has made use of Python-based remote access tools.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,Several BRONZE BUTLER tools encode data with base64 when posting it to a C2 server.[2]
Enterprise,T1005,Data from Local System,BRONZE BUTLER has exfiltrated files stolen from local systems.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BRONZE BUTLER downloads encoded payloads and decodes them on the victim.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BRONZE BUTLER has used RC4 encryption (for Datper malware) and AES (for xxmm malware) to obfuscate HTTP traffic. BRONZE BUTLER has also used a tool called RarStar that encodes data with a custom XOR algorithm when posting it to a C2 server.[2]
Enterprise,T1083,File and Directory Discovery,"BRONZE BUTLER has collected a list of files from the victim and uploaded it to its C2 server, and then created a new list of specific files to steal.[2]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,BRONZE BUTLER has used legitimate applications to side-load malicious DLLs.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,BRONZE BUTLER has incorporated code into several tools that attempts to terminate anti-virus processes.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,The BRONZE BUTLER uploader or malware the uploader uses command to delete the RAR archives after they have been exfiltrated.[2]
Enterprise,T1105,Ingress Tool Transfer,"BRONZE BUTLER has used various tools to download files, including DGet (a similar tool to wget).[2]"
Enterprise,T1036,Masquerading,BRONZE BUTLER has masked executables with document file icons including Word and Adobe PDF.[3]
Enterprise,T1036,Right-to-Left Override,BRONZE BUTLER has used Right-to-Left Override to deceive victims into executing several strains of malware.[3]
Enterprise,T1036,Match Legitimate Name or Location,BRONZE BUTLER has given malware the same name as an existing file on the file share server to cause users to unwittingly launch and install the malware on additional systems.[2]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,"BRONZE BUTLER downloader code has included ""0"" characters at the end of the file to inflate the file size in a likely attempt to evade anti-virus detection.[2][3]"
Enterprise,T1027,Obfuscated Files or Information: Steganography,BRONZE BUTLER has used steganography in multiple operations to conceal malicious payloads.[3]
Enterprise,T1588,Obtain Capabilities: Tool,"BRONZE BUTLER has obtained and used open-source tools such as Mimikatz, gsecdump, and Windows Credential Editor.[4]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,BRONZE BUTLER has used various tools (such as Mimikatz and WCE) to perform credential dumping.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,BRONZE BUTLER used spearphishing emails with malicious Microsoft Word attachments to infect victims.[4][3]
Enterprise,T1018,Remote System Discovery,BRONZE BUTLER typically use ping and Net to enumerate systems.[2]
Enterprise,T1053,Scheduled Task/Job: At,BRONZE BUTLER has used at to register a scheduled task to execute malware during lateral movement.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,BRONZE BUTLER has used schtasks to register a scheduled task to execute malware during lateral movement.[2]
Enterprise,T1113,Screen Capture,BRONZE BUTLER has used a tool to capture screenshots.[2][3]
Enterprise,T1518,Software Discovery,BRONZE BUTLER has used tools to enumerate software installed on an infected host.[3]
Enterprise,T1124,System Time Discovery,BRONZE BUTLER has used net time to check the local time on a target system.[2]
Enterprise,T1204,User Execution: Malicious File,BRONZE BUTLER has attempted to get users to launch malicious Microsoft Word attachments delivered via spearphishing emails.[4][3]
Enterprise,T1102,Web Service: Dead Drop Resolver,BRONZE BUTLER's MSGET downloader uses a dead drop resolver to access malicious payloads.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Thrip leveraged PowerShell to run commands to download payloads, traverse the compromised networks, and carry out reconnaissance.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,Thrip has obtained and used tools such as Mimikatz and PsExec.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT39 has used HTTP in communications with C2.[8][3]
Enterprise,T1071,Application Layer Protocol: DNS,APT39 has used remote access tools that leverage DNS in communications with C2.[8]
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT39 has used WinRAR and 7-Zip to compress an archive stolen data.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT39 has maintained persistence using the startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,APT39 has modified LNK shortcuts.[1]
Enterprise,T1059,Command and Scripting Interpreter,APT39 has utilized AutoIt and custom scripts to perform internal reconnaissance.[1][3]
Enterprise,T1059,PowerShell,APT39 has used PowerShell to execute malicious code.[8][9]
Enterprise,T1059,Visual Basic,APT39 has utilized malicious VBS scripts in malware.[3]
Enterprise,T1059,Python,APT39 has used a command line utility and a network scanner written in python.[8][3]
Enterprise,T1555,Credentials from Password Stores,APT39 has used the Smartftp Password Decryptor tool to decrypt FTP passwords.[8]
Enterprise,T1005,Data from Local System,APT39 has used various tools to steal files from the compromised host.[9][3]
Enterprise,T1074,Data Staged: Local Data Staging,APT39 has utilized tools to aggregate data prior to exfiltration.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,APT39 has used malware to decrypt encrypted CAB files.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,APT39 has exfiltrated stolen victim data through C2 communications.[3]
Enterprise,T1083,File and Directory Discovery,APT39 has used tools with the ability to search for files on a compromised host.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,APT39 has used malware to delete files after they are deployed on a compromised host.[3]
Enterprise,T1105,Ingress Tool Transfer,APT39 has downloaded tools to compromised hosts.[9][3]
Enterprise,T1056,Input Capture,APT39 has utilized tools to capture mouse movements.[3]
Enterprise,T1056,Keylogging,APT39 has used tools for capturing keystrokes.[9][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"APT39 has used malware disguised as Mozilla Firefox and a tool named mfevtpse.exe to proxy C2 communications, closely mimicking a legitimate McAfee file mfevtps.exe.[8][3]"
Enterprise,T1027,Obfuscated Files or Information,APT39 has used malware to drop encrypted CAB files.[3]
Enterprise,T1027,Software Packing,"APT39 has packed tools with UPX, and has repacked a modified version of Mimikatz to thwart anti-virus detection.[1][8]"
Enterprise,T1588,Obtain Capabilities: Tool,APT39 has modified and used customized versions of publicly-available tools like PLINK and Mimikatz.[8][10]
Enterprise,T1003,OS Credential Dumping,APT39 has used different versions of Mimikatz to obtain credentials.[8]
Enterprise,T1003,LSASS Memory,"APT39 has used Mimikatz, Windows Credential Editor and ProcDump to dump credentials.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,APT39 leveraged spearphishing emails with malicious attachments to initially compromise victims.[1][9][3]
Enterprise,T1566,Phishing: Spearphishing Link,APT39 leveraged spearphishing emails with malicious links to initially compromise victims.[1][3]
Enterprise,T1090,Proxy: Internal Proxy,APT39 used custom tools to create SOCK5 and custom protocol proxies between infected hosts.[1][8]
Enterprise,T1090,Proxy: External Proxy,APT39 has used various tools to proxy C2 communications.[8]
Enterprise,T1012,Query Registry,APT39 has used various strains of malware to query the Registry.[3]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,"APT39 has been seen using RDP for lateral movement and persistence, in some cases employing the rdpwinst tool for mangement of multiple sessions.[1][8]"
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT39 has used SMB for lateral movement.[9]
Enterprise,T1021,Remote Services: SSH,APT39 used secure shell (SSH) to move laterally among their targets.[1]
Enterprise,T1018,Remote System Discovery,APT39 has used NBTscan and custom tools to discover remote systems.[1][8][9]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT39 has created scheduled tasks for persistence.[1][8][3]
Enterprise,T1113,Screen Capture,APT39 has used a screen capture utility to take screenshots on a compromised host.[9][3]
Enterprise,T1553,Subvert Trust Controls: Code Signing Policy Modification,APT39 has used malware to turn off the RequireSigned feature which ensures only signed DLLs can be run on Windows.[3]
Enterprise,T1033,System Owner/User Discovery,APT39 used Remexi to collect usernames from the system.[2]
Enterprise,T1569,System Services: Service Execution,APT39 has used post-exploitation tools including RemCom and the Non-sucking Service Manager (NSSM) to execute processes.[8][9]
Enterprise,T1204,User Execution: Malicious Link,APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious link.[1][3]
Enterprise,T1204,User Execution: Malicious File,APT39 has sent spearphishing emails in an attempt to lure users to click on a malicious attachment.[1][8][9][3]
Enterprise,T1078,Valid Accounts,APT39 has used stolen credentials to compromise Outlook Web Access (OWA).[1]
Enterprise,T1102,Web Service: Bidirectional Communication,APT39 has communicated with C2 through files uploaded to and downloaded from DropBox.[8]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,DarkHydrus leveraged PowerShell to download and execute additional scripts for execution.[1][2]
Enterprise,T1564,Hide Artifacts: Hidden Window,DarkHydrus has used -WindowStyle Hidden to conceal PowerShell windows. [1]
Enterprise,T1588,Obtain Capabilities: Tool,"DarkHydrus has obtained and used tools such as Mimikatz, Empire, and Cobalt Strike.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,"DarkHydrus has sent spearphishing emails with password-protected RAR archives containing malicious Excel Web Query files (.iqy). The group has also sent spearphishing emails that contained malicious Microsoft Office documents that use the ""attachedTemplate"" technique to load a template from a remote server.[1][3][2]"
Enterprise,T1204,User Execution: Malicious File,DarkHydrus has sent malware that required users to hit the enable button in Microsoft Excel to allow an .iqy file to be downloaded.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Gamaredon Group has used HTTP and HTTPS for C2 communications.[1][2][3][4][9][8]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Gamaredon Group tools have registered Run keys in the registry to give malicious VBS files persistence.[2][3][9]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Gamaredon Group has used obfuscated PowerShell scripts for staging.[5]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Gamaredon Group has used various batch scripts to establish C2 and download additional files. Gamaredon Group's backdoor malware has also been written to a batch file.[1][3][9][8]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,"Gamaredon Group has embedded malicious macros in document templates, which executed VBScript. Gamaredon Group has also delivered Microsoft Outlook VBA projects with embedded macros.[2][3][9][5][7]"
Enterprise,T1005,Data from Local System,Gamaredon Group has collected files from infected systems and uploaded them to a C2 server.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Gamaredon Group tools decrypted additional payloads from the C2. Gamaredon Group has also decoded base64-encoded source code of a downloader.[2][3]
Enterprise,T1041,Exfiltration Over C2 Channel,A Gamaredon Group file stealer can transfer collected files to a hardcoded C2 server.[1]
Enterprise,T1083,File and Directory Discovery,Gamaredon Group macros can scan for Microsoft Word and Excel files to inject with additional malicious macros. Gamaredon Group has also used its backdoors to automatically list interesting files (such as Office documents) found on a system.[3][8]
Enterprise,T1564,Hide Artifacts: Hidden Window,Gamaredon Group has used hidcon to run batch files in a hidden console window.[8]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Gamaredon Group has delivered macros which can tamper with Microsoft Office security settings.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Gamaredon Group tools can delete files used during an operation.[2][4][9]
Enterprise,T1105,Ingress Tool Transfer,Gamaredon Group has downloaded additional malware and tools onto a compromised host.[1][2][3][5]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Gamaredon Group has used legitimate process names to hide malware including svchosst.[8]
Enterprise,T1112,Modify Registry,Gamaredon Group has removed security settings for VBA macro execution by changing registry values HKCU\Software\Microsoft\Office\<version>\<product>\Security\VBAWarnings and HKCU\Software\Microsoft\Office\<version>\<product>\Security\AccessVBOM.[3][9]
Enterprise,T1106,Native API,Gamaredon Group malware has used CreateProcess to launch additional malicious components.[3]
Enterprise,T1027,Obfuscated Files or Information,"Gamaredon Group has delivered self-extracting 7z archive files within malicious document attachments, and used obfuscated or encrypted scripts.[3][4][9][5][8]"
Enterprise,T1027,Binary Padding,Gamaredon Group has obfuscated .NET executables by inserting junk code.[3]
Enterprise,T1027,Compile After Delivery,Gamaredon Group has compiled the source code for a downloader directly on the infected system using the built-in Microsoft.CSharp.CSharpCodeProvider class.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Gamaredon Group has delivered spearphishing emails with malicious attachments to targets.[2][3][9][5][8][7]
Enterprise,T1057,Process Discovery,Gamaredon Group has used tools to enumerate processes on target hosts including Process Explorer.[4][8]
Enterprise,T1021,Remote Services: VNC,"Gamaredon Group has used VNC tools, including UltraVNC, to remotely interact with compromised hosts.[4][5][8]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Gamaredon Group has created scheduled tasks to launch executables after a designated number of minutes have passed.[3][9][5]
Enterprise,T1113,Screen Capture,Gamaredon Group's malware can take screenshots of the compromised computer every minute.[3]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Gamaredon Group has used mshta.exe to execute malicious HTA files.[4]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Gamaredon Group malware has used rundll32 to launch additional malicious components.[3]
Enterprise,T1082,System Information Discovery,A Gamaredon Group file stealer can gather the victim's computer name and drive serial numbers to send to a C2 server.[1][2][9]
Enterprise,T1016,System Network Configuration Discovery: Internet Connection Discovery,Gamaredon Group has tested connectivity between a compromised machine and a C2 server using Ping with commands such as CSIDL_SYSTEM\cmd.exe /c ping -n 1.[4]
Enterprise,T1033,System Owner/User Discovery,A Gamaredon Group file stealer can gather the victim's username to send to a C2 server.[1]
Enterprise,T1204,User Execution: Malicious File,Gamaredon Group has attempted to get users to click on Office attachments with malicious macros embedded.[2][3][4][9][5][8][7]
Enterprise,T1102,Web Service,Gamaredon Group has used GitHub repositories for downloaders which will be obtained by the group's .NET executable on the compromised system.[3]
Enterprise,T1047,Windows Management Instrumentation,Gamaredon Group has used WMI to execute scripts used for discovery.[9]
Enterprise,T1059,Command and Scripting Interpreter,Whitefly has used a simple remote shell tool that will call back to the C2 server and wait for commands.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Whitefly has used search order hijacking to run the loader Vcrodat.[1]
Enterprise,T1105,Ingress Tool Transfer,Whitefly has the ability to download additional tools from the C2.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Whitefly has named the malicious DLL the same name as DLLs belonging to legitimate software from various security vendors.[1]
Enterprise,T1027,Obfuscated Files or Information,Whitefly has encrypted the payload used for C2.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Whitefly has obtained and used tools such as Mimikatz.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Whitefly has used Mimikatz to obtain credentials.[1]
Enterprise,T1204,User Execution: Malicious File,Whitefly has used malicious .exe or .dll files disguised as documents or images.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Higaisa used HTTP and HTTPS to send data back to its C2 server.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Higaisa added a spoofed binary to the start-up folder for persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Higaisa used cmd.exe for execution.[1][2][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Higaisa has used VBScript code on the victim's machine.[3]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Higaisa used JavaScript to execute additional files.[1][2][3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Higaisa used certutil to decode Base64 binaries at runtime and a 16-byte XOR key to decrypt data.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Higaisa used AES-128 to encrypt C2 traffic.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Higaisa exfiltrated data over its C2 channel.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,Higaisa used a payload that creates a hidden window.[3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Higaisa’s JavaScript file used a legitimate Microsoft Office 2007 package to side-load the OINFO12.OCX dynamic link library.[3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Higaisa named a shellcode loader binary svchast.exe to spoof the legitimate svchost.exe.[1][2]
Enterprise,T1106,Native API,Higaisa has called various native OS APIs.[2]
Enterprise,T1027,Obfuscated Files or Information,Higaisa used Base64 encoded compressed payloads.[1][2]
Enterprise,T1027,Binary Padding,Higaisa performed padding with null bytes before calculating its hash.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Higaisa has sent spearphishing emails containing malicious attachments.[1][2]
Enterprise,T1057,Process Discovery,Higaisa’s shellcode attempted to find the process ID of the current process.[2]
Enterprise,T1090,Proxy: Internal Proxy,Higaisa discovered system proxy settings and used them if available.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Higaisa dropped and added officeupdate.exe to scheduled tasks.[1][2]
Enterprise,T1082,System Information Discovery,"Higaisa collected the system volume serial number, GUID, and computer name.[3][1]"
Enterprise,T1016,System Network Configuration Discovery,Higaisa used ipconfig to gather network configuration information.[1][2]
Enterprise,T1124,System Time Discovery,Higaisa used a function to gather the current time.[2]
Enterprise,T1204,User Execution: Malicious File,Higaisa used malicious e-mail attachments to lure victims into executing LNK files.[1][2]
Enterprise,T1564,Hide Artifacts: Hidden File System,Strider has used a hidden file system that is stored as a file on disk.[3]
Enterprise,T1090,Proxy: Internal Proxy,Strider has used local servers with both local network and Internet access to act as internal proxy nodes to exfiltrate data from other parts of the network without direct Internet access.[2]
Enterprise,T1087,Account Discovery: Local Account,admin@338 actors used the following commands following exploitation of a machine with LOWBALL malware to enumerate user accounts: net user >> %temp%\download net user /domain >> %temp%\download[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Following exploitation with LOWBALL malware, admin@338 actors created a file containing a list of commands to be executed on the compromised computer.[1]"
Enterprise,T1083,File and Directory Discovery,"admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about files and directories: dir c:\ >> %temp%\download dir ""c:\Documents and Settings"" >> %temp%\download dir ""c:\Program Files\"" >> %temp%\download dir d:\ >> %temp%\download[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"admin@338 actors used the following command to rename one of their tools to a benign file name: ren ""%temp%\upload"" audiodg.exe[1]"
Enterprise,T1069,Permission Groups Discovery: Local Groups,admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to list local groups: net localgroup administrator >> %temp%\download[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,admin@338 has sent emails with malicious Microsoft Office documents attached.[1]
Enterprise,T1082,System Information Discovery,admin@338 actors used the following commands after exploiting a machine with LOWBALL malware to obtain information about the OS: ver >> %temp%\download systeminfo >> %temp%\download[1]
Enterprise,T1016,System Network Configuration Discovery,admin@338 actors used the following command after exploiting a machine with LOWBALL malware to acquire information about local networks: ipconfig /all >> %temp%\download[1]
Enterprise,T1049,System Network Connections Discovery,admin@338 actors used the following command following exploitation of a machine with LOWBALL malware to display network connections: netstat -ano >> %temp%\download[1]
Enterprise,T1204,User Execution: Malicious File,admin@338 has attempted to get victims to launch malicious Microsoft Word attachments delivered via spearphishing emails.[1]
Enterprise,T1588,Obtain Capabilities: Tool,CostaRicto has obtained open source tools to use in their operations.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,CostaRicto has used a layer of proxies to manage C2 communications.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,CostaRicto has used scheduled tasks to download backdoor tools.[1]
Enterprise,T1071,Application Layer Protocol: DNS,"FIN7 has performed C2 using DNS via A, OPT, and TXT records.[4]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"FIN7 malware has created Registry Run and RunOnce keys to establish persistence, and has also added items to the Startup folder.[2][4]"
Enterprise,T1059,Command and Scripting Interpreter,FIN7 used SQL scripts to help perform tasks on the victim's machine.[4][9][4]
Enterprise,T1059,PowerShell,FIN7 used a PowerShell script to launch shellcode that retrieved an additional payload.[2][10][11]
Enterprise,T1059,Windows Command Shell,FIN7 used the command prompt to launch commands on the victim’s machine.[4][9]
Enterprise,T1059,Visual Basic,FIN7 used VBS scripts to help perform tasks on the victim's machine.[4][9][5]
Enterprise,T1059,JavaScript,FIN7 used JavaScript scripts to help perform tasks on the victim's machine.[4][9][4]
Enterprise,T1543,Create or Modify System Process: Windows Service,FIN7 created new Windows services and added them to the startup directories for persistence.[4]
Enterprise,T1005,Data from Local System,FIN7 has collected files and other sensitive information from a compromised network.[5]
Enterprise,T1105,Ingress Tool Transfer,"FIN7 has downloaded additional malware to execute on the victim's machine, including by using a PowerShell script to launch shellcode that retrieves an additional payload.[2][15]"
Enterprise,T1036,Masquerading: Masquerade Task or Service,"FIN7 has created a scheduled task named ""AdobeFlashSync"" to establish persistence.[10]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,FIN7 has attempted to run Darkside ransomware with the filename sleep.exe.[5]
Enterprise,T1027,Obfuscated Files or Information,"FIN7 has used fragmented strings, environment variables, standard input (stdin), and native character-replacement functionalities to obfuscate commands.[17][4][5]"
Enterprise,T1566,Phishing: Spearphishing Attachment,FIN7 sent spearphishing emails with either malicious Microsoft Documents or RTF files attached.[2][15][9][8][5]
Enterprise,T1566,Phishing: Spearphishing Link,FIN7 has conducted broad phishing campaigns using malicious links.[5]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,FIN7 has used RDP to move laterally in victim environments.[5]
Enterprise,T1021,Remote Services: SSH,FIN7 has used SSH to move laterally through victim environments.[5]
Enterprise,T1021,Remote Services: VNC,FIN7 has used TightVNC to control compromised hosts.[5]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,FIN7 malware has created scheduled tasks to establish persistence.[2][10][4][9]
Enterprise,T1113,Screen Capture,FIN7 captured screenshots and desktop video recordings.[15]
Enterprise,T1553,Subvert Trust Controls: Code Signing,"FIN7 has signed Carbanak payloads with legally purchased code signing certificates. FIN7 has also digitally signed their phishing documents, backdoors and other staging tools to bypass security controls.[3][4]"
Enterprise,T1218,System Binary Proxy Execution: Mshta,FIN7 has used mshta.exe to execute VBScript to execute malicious code on victim systems.[2]
Enterprise,T1204,User Execution: Malicious Link,FIN7 has used malicious links to lure victims into downloading malware.[5]
Enterprise,T1204,User Execution: Malicious File,FIN7 lured victims to double-click on images in the attachments they sent which would then execute the hidden LNK file.[2][8][5]
Enterprise,T1078,Valid Accounts,FIN7 has harvested valid administrative credentials for lateral movement.[5]
Enterprise,T1497,Virtualization/Sandbox Evasion: User Activity Based Checks,FIN7 used images embedded into document lures that only activate the payload when a user double clicks to avoid sandboxes.[2]
Enterprise,T1102,Web Service: Bidirectional Communication,"FIN7 used legitimate services like Google Docs, Google Scripts, and Pastebin for C2.[4]"
Enterprise,T1047,Windows Management Instrumentation,FIN7 has used WMI to install malware on targeted systems.[8]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"Ajax Security Team has used FireMalv custom-developed malware, which collected passwords from the Firefox browser storage.[2]"
Enterprise,T1105,Ingress Tool Transfer,"Ajax Security Team has used Wrapper/Gholee, custom-developed malware, which downloaded additional malware to the infected system.[2]"
Enterprise,T1056,Input Capture: Keylogging,"Ajax Security Team has used CWoolger and MPK, custom-developed malware, which recorded all keystrokes on an infected system.[2]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Ajax Security Team has used personalized spearphishing attachments.[2]
Enterprise,T1566,Phishing: Spearphishing via Service,Ajax Security Team has used various social media channels to spearphish victims.[1]
Enterprise,T1204,User Execution: Malicious File,Ajax Security Team has lured victims into executing malicious files.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT30 has used spearphishing emails with malicious DOC attachments.[1]
Enterprise,T1204,User Execution: Malicious File,APT30 has relied on users to execute malicious file attachments delivered via spearphishing emails.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"Gallmaker has used WinZip, likely to archive data prior to exfiltration.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Gallmaker used PowerShell to download additional payloads and for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,Gallmaker obfuscated shellcode used during execution.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Gallmaker sent emails with malicious Microsoft Office documents attached.[1]
Enterprise,T1204,User Execution: Malicious File,"Gallmaker sent victims a lure document with a warning that asked victims to ""enable content"" for execution.[1]"
Enterprise,T1071,Application Layer Protocol,TeamTNT has used an IRC bot for C2 communications.[6]
Enterprise,T1071,Web Protocols,TeamTNT has the curl command to send credentials over HTTP and download new software.[3][4] TeamTNT has also used a custom user agent HTTP header in shell scripts.[6]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,TeamTNT has added batch scripts to the startup folder.[7]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,TeamTNT has executed PowerShell commands in batch scripts.[7]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TeamTNT has used batch scripts to download tools and executing cryptocurrency miners.[7]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,TeamTNT has used shell scripts for execution.[6]
Enterprise,T1543,Create or Modify System Process: Systemd Service,TeamTNT has established persistence through the creation of a cryptocurrency mining system service.[6]
Enterprise,T1543,Create or Modify System Process: Windows Service,TeamTNT uses malware that adds cryptocurrency miners as a service.[7]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,TeamTNT has disabled and uninstalled security tools.[7]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,TeamTNT has disabled iptables.[8]
Enterprise,T1070,Indicator Removal on Host: Clear Linux or Mac System Logs,TeamTNT has removed system logs from /var/log/syslog.[8]
Enterprise,T1070,Indicator Removal on Host: Clear Command History,TeamTNT has cleared command history with history -c.[6]
Enterprise,T1070,Indicator Removal on Host: File Deletion,TeamTNT uses a payload that removes itself after running.[7]
Enterprise,T1105,Ingress Tool Transfer,TeamTNT has the curl command and batch scripts to download new tools.[3]
Enterprise,T1027,Obfuscated Files or Information,TeamTNT has encrypted its binaries via AES.[6] TeamTNT has also encoded files using Base64.[8]
Enterprise,T1027,Software Packing,TeamTNT has used UPX and Ezuri packer to pack its binaries.[6]
Enterprise,T1057,Process Discovery,TeamTNT searches for rival malware and removes them if found.[6]
Enterprise,T1021,Remote Services: SSH,TeamTNT has used SSH to connect back to victim machines.[3]
Enterprise,T1518,Software Discovery: Security Software Discovery,TeamTNT has searched for security products on infected machines.[7]
Enterprise,T1082,System Information Discovery,TeamTNT has searched for system version and architecture information.[7]
Enterprise,T1016,System Network Configuration Discovery,TeamTNT looks for the host machine’s IP address.[6]
Enterprise,T1049,System Network Connections Discovery,TeamTNT runs netstat -anp to search for rival malware connections.[6] TeamTNT has also used libprocesshider to modify /etc/ld.so.preload.[7]
Enterprise,T1204,User Execution: Malicious Image,TeamTNT relies on users to download and execute malicious Docker images.[2]
Enterprise,T1102,Web Service,TeamTNT has leveraged iplogger.org to send collected data back to C2.[8]
Enterprise,T1071,Application Layer Protocol: Web Protocols,TA551 has used HTTP for C2 communications.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TA551 has used cmd.exe to execute commands.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,TA551 has used encoded ASCII text for initial C2 communications.[3]
Enterprise,T1105,Ingress Tool Transfer,TA551 has retrieved DLLs and installer binaries for malware execution from C2.[2]
Enterprise,T1036,Masquerading,TA551 has masked malware DLLs as dat and jpg files.[2]
Enterprise,T1027,Obfuscated Files or Information,TA551 has used obfuscated variable names in a JavaScript configuration file.[3]
Enterprise,T1027,Steganography,TA551 has hidden encoded data for malware DLLs in a PNG.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,TA551 has sent spearphishing attachments with password protected ZIP files.[3][2][1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,TA551 has used mshta.exe to execute malicious payloads.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,TA551 has used regsvr32.exe to load malicious DLLs.[3]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,TA551 has used rundll32.exe to load malicious DLLs.[2]
Enterprise,T1204,User Execution: Malicious File,TA551 has prompted users to enable macros within spearphishing attachments to install malware.[2]
Enterprise,T1087,Account Discovery: Domain Account,MuddyWater has used cmd.exe net user /domain to enumerate domain users.[6]
Enterprise,T1071,Application Layer Protocol: Web Protocols,MuddyWater has used HTTP for C2 communications.[4][6]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"MuddyWater has used the native Windows cabinet creation tool, makecab.exe, likely to compress stolen data to be uploaded.[2]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,MuddyWater has added Registry Run key KCU\Software\Microsoft\Windows\CurrentVersion\Run\SystemTextEncoding to establish persistence.[8][9][10][5][6]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,MuddyWater has used PowerShell for execution.[8][11][9][2][3][10][5][6]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MuddyWater has used a custom tool for creating reverse shells.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,"MuddyWater has used VBScript files to execute its POWERSTATS payload, as well as macros.[8][11][9][2][3][4][5][6]"
Enterprise,T1059,Command and Scripting Interpreter: Python,MuddyWater has used developed tools in Python including Out1.[6]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,MuddyWater has used JavaScript files to execute its POWERSTATS payload.[3][8]
Enterprise,T1555,Credentials from Password Stores,"MuddyWater has performed credential dumping with LaZagne and other tools, including by dumping passwords saved in victim email.[1][2][6]"
Enterprise,T1555,Credentials from Web Browsers,MuddyWater has run tools including Browser64 to steal passwords saved in victim web browsers.[2][6]
Enterprise,T1132,Data Encoding: Standard Encoding,MuddyWater has used tools to encode C2 communications including Base64 encoding.[4][6]
Enterprise,T1140,Deobfuscate/Decode Files or Information,MuddyWater decoded base64-encoded PowerShell commands using a VBS file.[8][11][3]
Enterprise,T1041,Exfiltration Over C2 Channel,MuddyWater has used C2 infrastructure to receive exfiltrated data.[5]
Enterprise,T1083,File and Directory Discovery,"MuddyWater has used malware that checked if the ProgramData folder had folders or files with the keywords ""Kasper,"" ""Panda,"" or ""ESET.""[9]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,MuddyWater can disable the system's local proxy settings.[6]
Enterprise,T1105,Ingress Tool Transfer,MuddyWater has used malware that can upload additional files to the victim’s machine.[9][3][5][6]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,MuddyWater has disguised malicious executables and used filenames and Registry key names associated with Windows Defender.[8][10][7]
Enterprise,T1027,Obfuscated Files or Information,"MuddyWater has used Daniel Bohannon’s Invoke-Obfuscation framework and obfuscated PowerShell scripts.[1][12] The group has also used other obfuscation methods, including Base64 obfuscation of VBScripts and PowerShell commands.[1][8][9][10][4][6]"
Enterprise,T1027,Steganography,MuddyWater has stored obfuscated JavaScript code in an image file named temp.jpg.[3]
Enterprise,T1027,Compile After Delivery,MuddyWater has used the .NET csc.exe tool to compile executables from downloaded C# code.[3]
Enterprise,T1588,Obtain Capabilities: Tool,MuddyWater has made use of legitimate tools ConnectWise and RemoteUtilities for access to target environments.[7]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,MuddyWater has performed credential dumping with Mimikatz and procdump64.exe.[1][2][6]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,MuddyWater has performed credential dumping with LaZagne.[1][2]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,MuddyWater has performed credential dumping with LaZagne.[1][2]
Enterprise,T1566,Phishing: Spearphishing Attachment,MuddyWater has compromised third parties and used compromised accounts to send spearphishing emails with targeted attachments to recipients.[1][8][9][4][7][6]
Enterprise,T1566,Phishing: Spearphishing Link,MuddyWater has sent targeted spearphishing e-mails with malicious links.[7][6]
Enterprise,T1057,Process Discovery,MuddyWater has used malware to obtain a list of running processes on the system.[9][4]
Enterprise,T1090,Proxy: External Proxy,MuddyWater has controlled POWERSTATS from behind a proxy network to obfuscate the C2 location.[2] MuddyWater has used a series of compromised websites that victims connected to randomly to relay information to command and control (C2).[5][6]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,MuddyWater has used scheduled tasks to establish persistence.[5]
Enterprise,T1113,Screen Capture,MuddyWater has used malware that can capture screenshots of the victim’s machine.[9]
Enterprise,T1518,Software Discovery,MuddyWater has used a PowerShell backdoor to check for Skype connectivity on the target machine.[6]
Enterprise,T1518,Security Software Discovery,MuddyWater has used malware to check running processes against a hard-coded list of security tools often used by malware researchers.[9]
Enterprise,T1218,System Binary Proxy Execution: CMSTP,MuddyWater has used CMSTP.exe and a malicious INF to execute its POWERSTATS payload.[8]
Enterprise,T1218,System Binary Proxy Execution: Mshta,MuddyWater has used mshta.exe to execute its POWERSTATS payload and to pass a PowerShell one-liner for execution.[8][9]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,MuddyWater has used malware that leveraged rundll32.exe in a Registry Run key to execute a .dll.[9]
Enterprise,T1082,System Information Discovery,MuddyWater has used malware that can collect the victim’s OS version and machine name.[9][10][5][6]
Enterprise,T1016,System Network Configuration Discovery,MuddyWater has used malware to collect the victim’s IP address and domain name.[9]
Enterprise,T1049,System Network Connections Discovery,MuddyWater has used a PowerShell backdoor to check for Skype connections on the target machine.[6]
Enterprise,T1033,System Owner/User Discovery,MuddyWater has used malware that can collect the victim’s username.[9][6]
Enterprise,T1204,User Execution: Malicious Link,MuddyWater has distributed URLs in phishing e-mails that link to lure documents.[7][6]
Enterprise,T1204,User Execution: Malicious File,MuddyWater has attempted to get users to enable macros and launch malicious Microsoft Word documents delivered via spearphishing emails.[1][8][9][10][4][5][7][6]
Enterprise,T1102,Web Service: Bidirectional Communication,MuddyWater has used web services including OneHub to distribute remote access tools.[7]
Enterprise,T1047,Windows Management Instrumentation,MuddyWater has used malware that leveraged WMI for execution and querying host information.[9][3][10]
Enterprise,T1087,Account Discovery: Local Account,Turla has used net user to enumerate local accounts on the system.[12][13]
Enterprise,T1087,Account Discovery: Domain Account,Turla has used net user /domain to enumerate domain accounts.[12]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Turla has used HTTP and HTTPS for C2 communications.[4][14]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Turla has used multiple backdoors which communicate with a C2 server via email attachments.[15]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Turla has encrypted files stolen from connected USB drives into a RAR file before exfiltration.[16]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"A Turla Javascript backdoor added a local_update_check value under the Registry key HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to establish persistence. Additionally, a Turla custom executable containing Metasploit shellcode is saved to the Startup folder to gain persistence.[4][14]"
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Turla established persistence by adding a Shell value under the Registry key HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Turla has used PowerShell to execute commands/scripts, in some cases via a custom executable or code from Empire's PSInject.[14][11][16] Turla has also used PowerShell scripts to load and execute malware in memory."
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Turla RPC backdoors have used cmd.exe to execute commands.[11][16]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Turla has used VBS scripts throughout its operations.[16]
Enterprise,T1059,Command and Scripting Interpreter: Python,Turla has used IronPython scripts as part of the IronNetInjector toolchain to drop payloads.[17]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Turla has used various JavaScript-based backdoors.[4]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,Turla has gathered credentials from the Windows Credential Manager tool.[16]
Enterprise,T1005,Data from Local System,Turla RPC backdoors can upload files from victim machines.[11]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Turla has used a custom decryption routine, which pulls key and salt values from other artifacts such as a WMI filter or PowerShell Profile, to decode encrypted PowerShell payloads.[11]"
Enterprise,T1083,File and Directory Discovery,"Turla surveys a system upon check-in to discover files in specific locations on the hard disk %TEMP% directory, the current user's desktop, the Program Files directory, and Recent.[1][12] Turla RPC backdoors have also searched for files matching the lPH*.dll pattern.[11]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Turla has used a AMSI bypass, which patches the in-memory amsi.dll, in PowerShell scripts to bypass Windows antimalware products.[11]"
Enterprise,T1105,Ingress Tool Transfer,Turla has used shellcode to download Meterpreter after compromising a victim.[14]
Enterprise,T1112,Modify Registry,Turla has used the Registry to store encrypted payloads.[11][16]
Enterprise,T1106,Native API,Turla and its RPC backdoors have used APIs calls for various tasks related to subverting AMSI and accessing then executing commands through RPC and/or named pipes.[11]
Enterprise,T1027,Obfuscated Files or Information,"Turla has used encryption (including salted 3DES via PowerSploit's Out-EncryptedScript.ps1), random variable names, and base64 encoding to obfuscate PowerShell commands and payloads.[11]"
Enterprise,T1027,Indicator Removal from Tools,"Based on comparison of Gazer versions, Turla made an effort to obfuscate strings in the malware that could be used as IoCs, including the mutex name and named pipe.[2]"
Enterprise,T1588,Obtain Capabilities: Malware,"Turla has used malware obtained after compromising other threat actors, such as OilRig.[18][19]"
Enterprise,T1588,Obtain Capabilities: Tool,Turla has obtained and customized publicly-available tools like Mimikatz.[16]
Enterprise,T1069,Permission Groups Discovery: Local Groups,"Turla has used net localgroup and net localgroup Administrators to enumerate group information, including members of the local administrators group.[12]"
Enterprise,T1069,Permission Groups Discovery: Domain Groups,"Turla has used net group ""Domain Admins"" /domain to identify domain administrators.[12]"
Enterprise,T1566,Phishing: Spearphishing Link,Turla attempted to trick targets into clicking on a link featuring a seemingly legitimate domain from Adobe.com to download their malware and gain initial access.[4]
Enterprise,T1057,Process Discovery,Turla surveys a system upon check-in to discover running processes using the tasklist /v command.[1] Turla RPC backdoors have also enumerated processes associated with specific open ports or named pipes.[11]
Enterprise,T1055,Process Injection,Turla has also used PowerSploit's Invoke-ReflectivePEInjection.ps1 to reflectively load a PowerShell payload into a random process on the victim system.[11]
Enterprise,T1055,Dynamic-link Library Injection,Turla has used Metasploit to perform reflective DLL injection in order to escalate privileges.[14][21]
Enterprise,T1090,Proxy,Turla RPC backdoors have included local UPnP RPC proxies.[11]
Enterprise,T1090,Internal Proxy,Turla has compromised internal network systems to act as a proxy to forward traffic to C2.[10]
Enterprise,T1012,Query Registry,Turla surveys a system upon check-in to discover information in the Windows Registry with the reg query command.[1] Turla has also retrieved PowerShell payloads hidden in Registry keys as well as checking keys associated with null session named pipes .[11]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Turla used net use commands to connect to lateral systems within a network.[1]
Enterprise,T1018,Remote System Discovery,"Turla surveys a system upon check-in to discover remote systems on a local network using the net view and net view /DOMAIN commands. Turla has also used net group ""Domain Computers"" /domain, net group ""Domain Controllers"" /domain, and net group ""Exchange Servers"" /domain to enumerate domain computers, including the organization's DC and Exchange Server.[1][12]"
Enterprise,T1518,Software Discovery: Security Software Discovery,"Turla has obtained information on security software, including security logging information that may indicate whether their malware has been detected.[12]"
Enterprise,T1553,Subvert Trust Controls: Code Signing Policy Modification,Turla has modified variables in kernel memory to turn off Driver Signature Enforcement after exploiting vulnerabilities that obtained kernel mode privileges.[20][22]
Enterprise,T1082,System Information Discovery,Turla surveys a system upon check-in to discover operating system configuration details using the systeminfo and set commands.[1][12]
Enterprise,T1016,System Network Configuration Discovery,"Turla surveys a system upon check-in to discover network configuration details using the arp -a, nbtstat -n, net config, ipconfig /all, and route commands, as well as NBTscan.[1][16][12] Turla RPC backdoors have also retrieved registered RPC interface information from process memory.[11]"
Enterprise,T1016,Internet Connection Discovery,Turla has used tracert to check internet connectivity.[12]
Enterprise,T1049,System Network Connections Discovery,"Turla surveys a system upon check-in to discover active local network connections using the netstat -an, net use, net file, and net session commands.[1][12] Turla RPC backdoors have also enumerated the IPv4 TCP connection table via the GetTcpTable2 API call.[11]"
Enterprise,T1124,System Time Discovery,Turla surveys a system upon check-in to discover the system time by using the net time command.[1]
Enterprise,T1204,User Execution: Malicious Link,Turla has used spearphishing via a link to get users to download and run their malware.[4]
Enterprise,T1078,Valid Accounts: Local Accounts,Turla has abused local accounts that have the same password across the victim’s network.[13]
Enterprise,T1102,Web Service,"Turla has used legitimate web services including Pastebin, Dropbox, and GitHub for C2 communications.[7][13]"
Enterprise,T1102,Bidirectional Communication,A Turla JavaScript backdoor has used Google Apps Script as its C2 server.[4][14]
Enterprise,T1021,Remote Services: SSH,GCMAN uses Putty for lateral movement.[1]
Enterprise,T1021,Remote Services: VNC,GCMAN uses VNC for lateral movement.[1]
Enterprise,T1564,Hide Artifacts: Hidden File System,Equation has used an encrypted virtual file system stored in the Windows Registry.[1]
Enterprise,T1087,Account Discovery: Local Account,"APT3 has used a tool that can obtain info about local and global group users, power users, and administrators.[4]"
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT3 has used tools to compress data before exfilling it.[7]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT3 places scripts in the startup folder for persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,APT3 has used PowerShell on victim systems to download and run payloads after exploitation.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"An APT3 downloader uses the Windows command ""cmd.exe"" /C whoami. The group also uses a tool to execute commands on remote computers.[3][4]"
Enterprise,T1543,Create or Modify System Process: Windows Service,APT3 has a tool that creates a new service for persistence.[3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,APT3 has used tools to dump passwords from browsers.[4]
Enterprise,T1005,Data from Local System,APT3 will identify Microsoft Office documents on the victim's computer.[7]
Enterprise,T1074,Data Staged: Local Data Staging,APT3 has been known to stage files for exfiltration in a single location.[7]
Enterprise,T1041,Exfiltration Over C2 Channel,APT3 has a tool that exfiltrates data over the C2 channel.[8]
Enterprise,T1083,File and Directory Discovery,APT3 has a tool that looks for files and directories on the local file system.[8][9]
Enterprise,T1564,Hide Artifacts: Hidden Window,APT3 has been known to use -WindowStyle Hidden to conceal PowerShell windows.[3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,APT3 has been known to side load DLLs with a valid version of Chrome with one of their tools.[8][10]
Enterprise,T1070,Indicator Removal on Host: File Deletion,APT3 has a tool that can delete files.[8]
Enterprise,T1105,Ingress Tool Transfer,APT3 has a tool that can copy files to remote machines.[8]
Enterprise,T1056,Input Capture: Keylogging,APT3 has used a keylogging tool that records keystrokes in encrypted files.[4]
Enterprise,T1027,Obfuscated Files or Information,APT3 obfuscates files or information to help evade defensive measures.[4]
Enterprise,T1027,Software Packing,APT3 has been known to pack their tools.[5][1]
Enterprise,T1027,Indicator Removal from Tools,APT3 has been known to remove indicators of compromise from tools.[5]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"APT3 has used a tool to dump credentials by injecting itself into lsass.exe and triggering with the argument ""dig.""[4]"
Enterprise,T1069,Permission Groups Discovery,APT3 has a tool that can enumerate the permissions associated with Windows groups.[4]
Enterprise,T1566,Phishing: Spearphishing Link,APT3 has sent spearphishing emails containing malicious links.[1]
Enterprise,T1057,Process Discovery,APT3 has a tool that can list out currently running processes.[8][9]
Enterprise,T1090,Proxy: External Proxy,An APT3 downloader establishes SOCKS5 connections for its initial C2.[3]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,APT3 enables the Remote Desktop Protocol for persistence.[7] APT3 has also interacted with compromised systems to browse and copy files through RDP sessions.[11]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT3 will copy files over to Windows Admin Shares (like ADMIN$) as part of lateral movement.[4]
Enterprise,T1018,Remote System Discovery,APT3 has a tool that can detect the existence of remote systems.[4][8]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"An APT3 downloader creates persistence by creating the following scheduled task: schtasks /create /tn ""mysc"" /tr C:\Users\Public\test.exe /sc ONLOGON /ru ""System"".[3]"
Enterprise,T1218,System Binary Proxy Execution: Rundll32,APT3 has a tool that can run DLLs.[8]
Enterprise,T1082,System Information Discovery,APT3 has a tool that can obtain information about the local system.[4][9]
Enterprise,T1016,System Network Configuration Discovery,"A keylogging tool used by APT3 gathers network information from the victim, including the MAC address, IP address, WINS, DHCP server, and gateway.[4][9]"
Enterprise,T1049,System Network Connections Discovery,APT3 has a tool that can enumerate current network connections.[4][8][9]
Enterprise,T1033,System Owner/User Discovery,"An APT3 downloader uses the Windows command ""cmd.exe"" /C whoami to verify that it is running with the elevated privileges of ""System.""[3]"
Enterprise,T1204,User Execution: Malicious Link,APT3 has lured victims into clicking malicious links delivered through spearphishing.[1]
Enterprise,T1078,Valid Accounts: Domain Accounts,APT3 leverages valid accounts after gaining credentials for use within the victim domain.[4]
Enterprise,T1087,Account Discovery: Domain Account,Operation Wocao has used the net command to retrieve information about domain accounts.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"Operation Wocao has archived collected files with WinRAR, prior to exfiltration.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Operation Wocao has used PowerShell on compromised systems.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Operation Wocao has spawned a new cmd.exe process to execute commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Operation Wocao has used a VBScript to conduct reconnaissance on targeted systems.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Operation Wocao's backdoors have been written in Python and compiled with py2exe.[1]
Enterprise,T1555,Credentials from Password Stores: Password Managers,Operation Wocao has accessed and collected credentials from password managers.[1]
Enterprise,T1005,Data from Local System,Operation Wocao has exfiltrated files and directories of interest from the targeted system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Operation Wocao has staged archived files in a temporary directory prior to exfiltration.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Operation Wocao's proxy implementation ""Agent"" can upgrade the socket in use to a TLS socket.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Operation Wocao has used the Xserver backdoor to exfiltrate data.[1]
Enterprise,T1083,File and Directory Discovery,Operation Wocao has gathered a recursive directory listing to find files and directories of interest.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Operation Wocao has used PowerShell to add and delete rules in the Windows firewall.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Operation Wocao has deleted Windows Event Logs to hinder forensic investigation.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Operation Wocao has deleted logs and executable files used during an intrusion.[1]
Enterprise,T1105,Ingress Tool Transfer,Operation Wocao can download additional files to the infected system.[1]
Enterprise,T1056,Input Capture: Keylogging,Operation Wocao has obtained the password for the victim's password manager via a custom keylogger.[1]
Enterprise,T1112,Modify Registry,Operation Wocao has enabled Wdigest by changing the registry value from 0 to 1.[1]
Enterprise,T1106,Native API,Operation Wocao has used the CreateProcessA and ShellExecute API function to launch commands after being injected into a selected process.[1]
Enterprise,T1027,Obfuscated Files or Information,"Operation Wocao has executed PowerShell commands which were encoded or compressed using Base64, zlib, and XOR.[1]"
Enterprise,T1027,Indicator Removal from Tools,Operation Wocao has edited variable names within the Impacket suite to avoid automated detection.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Operation Wocao has used ProcDump to dump credentials from memory.[1]
Enterprise,T1003,OS Credential Dumping: DCSync,Operation Wocao has used Mimikatz's DCSync to dump credentials from the memory of the targeted system.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Operation Wocao has used the command net localgroup administrators to list all administrators part of a local group.[1]
Enterprise,T1057,Process Discovery,Operation Wocao has collected a list of running processes on the infected system.[1]
Enterprise,T1055,Process Injection,"Operation Wocao has injected code into a selected process, which in turn launches a command as a child process of the original.[1]"
Enterprise,T1090,Proxy,"Operation Wocao has used a custom proxy tool called ""Agent"" which has support for multiple hops.[1]"
Enterprise,T1090,Internal Proxy,Operation Wocao can proxy traffic through multiple infected systems.[1]
Enterprise,T1090,Multi-hop Proxy,Operation Wocao has executed commands through the installed web shell via Tor exit nodes.[1]
Enterprise,T1012,Query Registry,Operation Wocao has queried the registry to detect recent PuTTY sessions.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Operation Wocao has used Impacket's smbexec.py as well as accessing the C$ and IPC$ shares to move laterally.[1]
Enterprise,T1018,Remote System Discovery,Operation Wocao can use the ping command to discover remote systems.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Operation Wocao has used scheduled tasks to execute malicious PowerShell code on remote systems.[1]
Enterprise,T1518,Software Discovery,Operation Wocao has collected a list of installed software on the infected system.[1]
Enterprise,T1518,Security Software Discovery,Operation Wocao has used scripts to detect security software.[1]
Enterprise,T1082,System Information Discovery,"Operation Wocao has discovered the local disks attached to the system and their hardware information including manufacturer and model, as well as the OS versions of systems connected to a targeted network.[1]"
Enterprise,T1016,System Network Configuration Discovery,Operation Wocao has discovered the local network configuration with ipconfig.[1]
Enterprise,T1049,System Network Connections Discovery,Operation Wocao has collected a list of open connections on the infected system using netstat and checks whether it has an internet connection.[1]
Enterprise,T1033,System Owner/User Discovery,"Operation Wocao has enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.[1]"
Enterprise,T1569,System Services: Service Execution,Operation Wocao has created services on remote systems for execution purposes.[1]
Enterprise,T1124,System Time Discovery,Operation Wocao has used the time command to retrieve the current time of a compromised system.[1]
Enterprise,T1078,Valid Accounts,Operation Wocao has used valid VPN credentials to gain initial access.[1]
Enterprise,T1078,Domain Accounts,"Operation Wocao has used domain credentials, including domain admin, for lateral movement and privilege escalation.[1]"
Enterprise,T1078,Local Accounts,Operation Wocao has used local account credentials found during the intrusion for lateral movement and privilege escalation.[1]
Enterprise,T1047,Windows Management Instrumentation,Operation Wocao has used WMI to execute commands.[1]
Enterprise,T1087,Account Discovery: Domain Account,Operation Wocao has used the net command to retrieve information about domain accounts.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"Operation Wocao has archived collected files with WinRAR, prior to exfiltration.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Operation Wocao has used PowerShell on compromised systems.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Operation Wocao has spawned a new cmd.exe process to execute commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Operation Wocao has used a VBScript to conduct reconnaissance on targeted systems.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Operation Wocao's backdoors have been written in Python and compiled with py2exe.[1]
Enterprise,T1555,Credentials from Password Stores: Password Managers,Operation Wocao has accessed and collected credentials from password managers.[1]
Enterprise,T1005,Data from Local System,Operation Wocao has exfiltrated files and directories of interest from the targeted system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Operation Wocao has staged archived files in a temporary directory prior to exfiltration.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Operation Wocao's proxy implementation ""Agent"" can upgrade the socket in use to a TLS socket.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Operation Wocao has used the Xserver backdoor to exfiltrate data.[1]
Enterprise,T1083,File and Directory Discovery,Operation Wocao has gathered a recursive directory listing to find files and directories of interest.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Operation Wocao has used PowerShell to add and delete rules in the Windows firewall.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Operation Wocao has deleted Windows Event Logs to hinder forensic investigation.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Operation Wocao has deleted logs and executable files used during an intrusion.[1]
Enterprise,T1105,Ingress Tool Transfer,Operation Wocao can download additional files to the infected system.[1]
Enterprise,T1056,Input Capture: Keylogging,Operation Wocao has obtained the password for the victim's password manager via a custom keylogger.[1]
Enterprise,T1112,Modify Registry,Operation Wocao has enabled Wdigest by changing the registry value from 0 to 1.[1]
Enterprise,T1106,Native API,Operation Wocao has used the CreateProcessA and ShellExecute API function to launch commands after being injected into a selected process.[1]
Enterprise,T1027,Obfuscated Files or Information,"Operation Wocao has executed PowerShell commands which were encoded or compressed using Base64, zlib, and XOR.[1]"
Enterprise,T1027,Indicator Removal from Tools,Operation Wocao has edited variable names within the Impacket suite to avoid automated detection.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Operation Wocao has used ProcDump to dump credentials from memory.[1]
Enterprise,T1003,OS Credential Dumping: DCSync,Operation Wocao has used Mimikatz's DCSync to dump credentials from the memory of the targeted system.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Operation Wocao has used the command net localgroup administrators to list all administrators part of a local group.[1]
Enterprise,T1057,Process Discovery,Operation Wocao has collected a list of running processes on the infected system.[1]
Enterprise,T1055,Process Injection,"Operation Wocao has injected code into a selected process, which in turn launches a command as a child process of the original.[1]"
Enterprise,T1090,Proxy,"Operation Wocao has used a custom proxy tool called ""Agent"" which has support for multiple hops.[1]"
Enterprise,T1090,Internal Proxy,Operation Wocao can proxy traffic through multiple infected systems.[1]
Enterprise,T1090,Multi-hop Proxy,Operation Wocao has executed commands through the installed web shell via Tor exit nodes.[1]
Enterprise,T1012,Query Registry,Operation Wocao has queried the registry to detect recent PuTTY sessions.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Operation Wocao has used Impacket's smbexec.py as well as accessing the C$ and IPC$ shares to move laterally.[1]
Enterprise,T1018,Remote System Discovery,Operation Wocao can use the ping command to discover remote systems.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Operation Wocao has used scheduled tasks to execute malicious PowerShell code on remote systems.[1]
Enterprise,T1518,Software Discovery,Operation Wocao has collected a list of installed software on the infected system.[1]
Enterprise,T1518,Security Software Discovery,Operation Wocao has used scripts to detect security software.[1]
Enterprise,T1082,System Information Discovery,"Operation Wocao has discovered the local disks attached to the system and their hardware information including manufacturer and model, as well as the OS versions of systems connected to a targeted network.[1]"
Enterprise,T1016,System Network Configuration Discovery,Operation Wocao has discovered the local network configuration with ipconfig.[1]
Enterprise,T1049,System Network Connections Discovery,Operation Wocao has collected a list of open connections on the infected system using netstat and checks whether it has an internet connection.[1]
Enterprise,T1033,System Owner/User Discovery,"Operation Wocao has enumerated sessions and users on a remote host, and identified privileged users logged into a targeted system.[1]"
Enterprise,T1569,System Services: Service Execution,Operation Wocao has created services on remote systems for execution purposes.[1]
Enterprise,T1124,System Time Discovery,Operation Wocao has used the time command to retrieve the current time of a compromised system.[1]
Enterprise,T1078,Valid Accounts,Operation Wocao has used valid VPN credentials to gain initial access.[1]
Enterprise,T1078,Domain Accounts,"Operation Wocao has used domain credentials, including domain admin, for lateral movement and privilege escalation.[1]"
Enterprise,T1078,Local Accounts,Operation Wocao has used local account credentials found during the intrusion for lateral movement and privilege escalation.[1]
Enterprise,T1047,Windows Management Instrumentation,Operation Wocao has used WMI to execute commands.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sidewinder has used HTTP in C2 communications.[1][4][5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Sidewinder has added paths to executables in the Registry to establish persistence.[4][5][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Sidewinder has used PowerShell to drop and execute malware loaders.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Sidewinder has used VBScript to drop and execute malware loaders.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Sidewinder has used JavaScript to drop and execute malware loaders.[1][5]
Enterprise,T1074,Data Staged: Local Data Staging,Sidewinder has collected stolen files in a temporary folder in preparation for exfiltration.[1]
Enterprise,T1083,File and Directory Discovery,Sidewinder has used malware to collect information on files and directories.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Sidewinder has used DLL side-loading to drop and execute malicious payloads including the hijacking of the legitimate Windows application file rekeywiz.exe.[1]
Enterprise,T1105,Ingress Tool Transfer,Sidewinder has used LNK files to download remote files to the victim's network.[1][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Sidewinder has named malicious files rekeywiz.exe to match the name of a legitimate Windows executable.[5]
Enterprise,T1027,Obfuscated Files or Information,Sidewinder has used base64 encoding and ECDH-P256 encryption for scripts and files.[1][4][3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Sidewinder has sent e-mails with malicious attachments often crafted for specific targets.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Sidewinder has sent e-mails with malicious links often crafted for specific targets.[1][3]
Enterprise,T1057,Process Discovery,Sidewinder has used tools to identify running processes on the victim's machine.[1]
Enterprise,T1518,Software Discovery,Sidewinder has used tools to enumerate software installed on an infected host.[1][4]
Enterprise,T1518,Security Software Discovery,Sidewinder has used the Windows service winmgmts:\.\root\SecurityCenter2 to check installed antivirus products.[4]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Sidewinder has used mshta.exe to execute malicious payloads.[4][5]
Enterprise,T1082,System Information Discovery,"Sidewinder has used tools to collect the computer name, OS version, installed hotfixes, as well as information regarding the memory and processor on a compromised host.[1][5]"
Enterprise,T1016,System Network Configuration Discovery,"Sidewinder has used malware to collect information on network interfaces, including the MAC address.[1]"
Enterprise,T1033,System Owner/User Discovery,Sidewinder has used tools to identify the user of a compromised host.[1]
Enterprise,T1124,System Time Discovery,Sidewinder has used tools to obtain the current system time.[1]
Enterprise,T1204,User Execution: Malicious Link,Sidewinder has lured targets to click on malicious links to gain execution in the target environment.[1][4][5][3]
Enterprise,T1204,User Execution: Malicious File,Sidewinder has lured targets to click on malicious files to gain execution in the target environment.[1][4][5][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"Dark Caracal's version of Bandook communicates with their server over a TCP port using HTTP payloads Base64 encoded and suffixed with the string ""&&&"".[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Dark Caracal's version of Bandook adds a registry key to HKEY_USERS\Software\Microsoft\Windows\CurrentVersion\Run for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Dark Caracal has used macros in Word documents that would download a second stage if executed.[1]
Enterprise,T1005,Data from Local System,Dark Caracal collected complete contents of the 'Pictures' folder from compromised Windows systems.[1]
Enterprise,T1083,File and Directory Discovery,Dark Caracal collected file listings of all default Windows directories.[1]
Enterprise,T1027,Obfuscated Files or Information,"Dark Caracal has obfuscated strings in Bandook by base64 encoding, and then encrypting them.[1]"
Enterprise,T1027,Software Packing,Dark Caracal has used UPX to pack Bandook.[1]
Enterprise,T1566,Phishing: Spearphishing via Service,Dark Caracal spearphished victims via Facebook and Whatsapp.[1]
Enterprise,T1113,Screen Capture,Dark Caracal took screenshots using their Windows malware.[1]
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,Dark Caracal leveraged a compiled HTML file that contained a command to download and run an executable.[1]
Enterprise,T1204,User Execution: Malicious File,"Dark Caracal makes their malware look like Flash Player, Office, or PDF documents in order to entice a user to click on it.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,A dropper used by Putter Panda installs itself into the ASEP Registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run with a value named McUpdate.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Malware used by Putter Panda attempts to terminate processes corresponding to two components of Sophos Anti-Virus (SAVAdminService.exe and SavService.exe).[1]
Enterprise,T1027,Obfuscated Files or Information,Droppers used by Putter Panda use RC4 or a 16-byte XOR key consisting of the bytes 0xA0 – 0xAF to obfuscate payloads.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"An executable dropped onto victims by Putter Panda aims to inject the specified DLL into a process that would normally be accessing the network, including Outlook Express (msinm.exe), Outlook (outlook.exe), Internet Explorer (iexplore.exe), and Firefox (firefox.exe).[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PROMETHIUM has used Registry run keys to establish persistence.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,PROMETHIUM has created new services and modified existing services for persistence.[4]
Enterprise,T1036,Masquerading: Masquerade Task or Service,PROMETHIUM has named services to appear legitimate.[3][4]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,PROMETHIUM has disguised malicious installer files by bundling them with legitimate software installers.[3][4]
Enterprise,T1553,Subvert Trust Controls: Code Signing,PROMETHIUM has signed code with self-signed certificates.[4]
Enterprise,T1204,User Execution: Malicious File,"PROMETHIUM has attempted to get users to execute compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.[3][4]"
Enterprise,T1078,Valid Accounts: Local Accounts,PROMETHIUM has created admin accounts on a compromised host.[4]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Sowbug extracted documents and bundled them into a RAR archive.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Sowbug has used command line during its intrusions.[1]
Enterprise,T1083,File and Directory Discovery,Sowbug identified and extracted all Word documents on a server by using a command containing * .doc and *.docx. The actors also searched for documents based on a specific date range and attempted to identify all installed software on a victim.[1]
Enterprise,T1056,Input Capture: Keylogging,Sowbug has used keylogging tools.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Sowbug named its tools to masquerade as Windows or Adobe Reader software, such as by using the file name adobecms.exe and the directory CSIDL_APPDATA\microsoft\security.[1]"
Enterprise,T1003,OS Credential Dumping,Sowbug has used credential dumping tools.[1]
Enterprise,T1082,System Information Discovery,Sowbug obtained OS version and hardware configuration from a victim.[1]
Enterprise,T1087,Account Discovery: Domain Account,Dragonfly has used batch scripts to enumerate users on a victim domain controller.[14]
Enterprise,T1071,Application Layer Protocol,Dragonfly has used SMB for C2.[14]
Enterprise,T1560,Archive Collected Data,Dragonfly has compressed data into .zip files prior to exfiltration.[14]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Dragonfly has added the registry value ntdll to the Registry Run key to establish persistence.[14]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Dragonfly has manipulated .lnk files to gather user credentials in conjunction with Forced Authentication.[14]
Enterprise,T1059,Command and Scripting Interpreter,Dragonfly has used the command line for execution.[14]
Enterprise,T1059,PowerShell,Dragonfly has used PowerShell scripts for execution.[14][5]
Enterprise,T1059,Windows Command Shell,"Dragonfly has used various types of scripting to perform operations, including batch scripts.[14]"
Enterprise,T1059,Python,"Dragonfly has used various types of scripting to perform operations, including Python scripts. The group was observed installing Python 2.7 on a victim.[14]"
Enterprise,T1005,Data from Local System,Dragonfly has collected data from local victim systems.[14]
Enterprise,T1074,Data Staged: Local Data Staging,"Dragonfly has created a directory named ""out"" in the user's %AppData% folder and copied files to it.[14]"
Enterprise,T1083,File and Directory Discovery,Dragonfly has used a batch script to gather folder and file names from victim hosts.[14][7][8]
Enterprise,T1564,Hide Artifacts: Hidden Users,Dragonfly has modified the Registry to hide created user accounts.[14]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Dragonfly has disabled host-based firewalls. The group has also globally opened port 3389.[14]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,"Dragonfly has cleared Windows event logs and other logs produced by tools they used, including system, security, terminal services, remote services, and audit logs. The actors also deleted specific Registry keys.[14]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Dragonfly has deleted many of its files used during operations as part of cleanup, including removing applications and deleting screenshots.[14]"
Enterprise,T1105,Ingress Tool Transfer,Dragonfly has copied and installed tools for operations once in the victim environment.[14]
Enterprise,T1036,Masquerading,Dragonfly has created accounts disguised as legitimate backup and service accounts as well as an email administration account.[14]
Enterprise,T1112,Modify Registry,Dragonfly has modified the Registry to perform multiple techniques through the use of Reg.[14]
Enterprise,T1588,Obtain Capabilities: Tool,"Dragonfly has obtained and used tools such as Mimikatz, CrackMapExec, and PsExec.[4]"
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Dragonfly has dropped and executed SecretsDump to dump password hashes.[14]
Enterprise,T1003,OS Credential Dumping: NTDS,Dragonfly has dropped and executed SecretsDump to dump password hashes. They also obtained ntds.dit from domain controllers.[14][16]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,Dragonfly has dropped and executed SecretsDump to dump password hashes.[14][16]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Dragonfly has used batch scripts to enumerate administrators and users in the domain.[14]
Enterprise,T1566,Phishing: Spearphishing Attachment,Dragonfly has sent emails with malicious attachments to gain initial access.[7]
Enterprise,T1012,Query Registry,Dragonfly has queried the Registry to identify victim information.[14]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Dragonfly has moved laterally via RDP.[14]
Enterprise,T1018,Remote System Discovery,Dragonfly has likely obtained a list of hosts in the victim environment.[14]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Dragonfly has used scheduled tasks to automatically log out of created accounts every 8 hours as well as to execute malicious files.[14]
Enterprise,T1113,Screen Capture,"Dragonfly has performed screen captures of victims, including by using a tool, scr.exe (which matched the hash of ScreenUtil).[14][5][7]"
Enterprise,T1016,System Network Configuration Discovery,"Dragonfly has used batch scripts to enumerate network information, including information about trusts, zones, and the domain.[14]"
Enterprise,T1033,System Owner/User Discovery,Dragonfly used the command query user on victim hosts.[14]
Enterprise,T1204,User Execution: Malicious File,Dragonfly has used various forms of spearphishing in attempts to get users to open malicious attachments.[7]
Enterprise,T1078,Valid Accounts,Dragonfly has compromised user credentials and used valid accounts for operations.[14][7][8]
Enterprise,T1087,Account Discovery: Domain Account,FIN6 has used Metasploit’s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database.[1]
Enterprise,T1560,Archive Collected Data,"Following data collection, FIN6 has compressed log files into a ZIP archive prior to staging and exfiltration.[1]"
Enterprise,T1560,Archive via Custom Method,"FIN6 has encoded data gathered from the victim with a simple substitution cipher and single-byte XOR using the 0xAA key, and Base64 with character permutation.[1][6]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FIN6 has used Registry Run keys to establish persistence for its downloader tools known as HARDTACK and SHIPBREAD.[1]
Enterprise,T1059,Command and Scripting Interpreter,"FIN6 has used scripting to iterate through a list of compromised PoS systems, copy data to a log file, and remove the original data files.[1][2]"
Enterprise,T1059,PowerShell,"FIN6 has used PowerShell to gain access to merchant's networks, and a Metasploit PowerShell module to download and execute shellcode and to set up a local listener.[1][2][7]"
Enterprise,T1059,Windows Command Shell,FIN6 has used kill.bat script to disable security tools.[2]
Enterprise,T1059,JavaScript,FIN6 has used malicious JavaScript to steal payment card data from e-commerce sites.[6]
Enterprise,T1555,Credentials from Password Stores,FIN6 has used the Stealer One credential stealer to target e-mail and file transfer utilities including FTP.[7]
Enterprise,T1555,Credentials from Web Browsers,FIN6 has used the Stealer One credential stealer to target web browsers.[7]
Enterprise,T1005,Data from Local System,FIN6 has collected and exfiltrated payment card data from compromised systems.[6][8][9]
Enterprise,T1074,Data Staged: Remote Data Staging,FIN6 actors have compressed data from remote systems and moved it to another staging system before exfiltration.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,FIN6 used the Plink command-line utility to create SSH tunnels to C2 servers.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,FIN6 has deployed a utility script named kill.bat to disable anti-virus.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FIN6 has removed files from victim machines.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"FIN6 has renamed the ""psexec"" service name to ""mstdc"" to masquerade as a legitimate Windows service.[2]"
Enterprise,T1027,Obfuscated Files or Information,FIN6 has used encoded PowerShell commands.[7]
Enterprise,T1588,Obtain Capabilities: Tool,"FIN6 has obtained and used tools such as Mimikatz, Cobalt Strike, and AdFind.[5][2]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,FIN6 has used Windows Credential Editor for credential dumping.[1][2]
Enterprise,T1003,OS Credential Dumping: NTDS,FIN6 has used Metasploit’s PsExec NTDSGRAB module to obtain a copy of the victim's Active Directory database.[1][2]
Enterprise,T1566,Phishing: Spearphishing Attachment,FIN6 has targeted victims with e-mails containing malicious attachments.[7]
Enterprise,T1566,Phishing: Spearphishing via Service,FIN6 has used fake job advertisements sent via LinkedIn to spearphish targets.[5]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,FIN6 used RDP to move laterally in victim networks.[1][2]
Enterprise,T1018,Remote System Discovery,"FIN6 used publicly available tools (including Microsoft's built-in SQL querying tool, osql.exe) to map the internal network and conduct reconnaissance against Active Directory, Structured Query Language (SQL) servers, and NetBIOS.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"FIN6 has used scheduled tasks to establish persistence for various malware it uses, including downloaders known as HARDTACK and SHIPBREAD and FrameworkPOS.[1]"
Enterprise,T1553,Subvert Trust Controls: Code Signing,FIN6 has used Comodo code-signing certificates.[5]
Enterprise,T1569,System Services: Service Execution,FIN6 has created Windows services to execute encoded PowerShell commands.[2]
Enterprise,T1204,User Execution: Malicious File,FIN6 has used malicious documents to lure victims into allowing execution of PowerShell scripts.[7]
Enterprise,T1078,Valid Accounts,"To move laterally on a victim network, FIN6 has used credentials stolen from various systems on which it gathered usernames and password hashes.[1][2][7]"
Enterprise,T1102,Web Service,FIN6 has used Pastebin and Google Storage to host content for their operations.[2]
Enterprise,T1047,Windows Management Instrumentation,FIN6 has used WMI to automate the remote execution of PowerShell scripts.[5]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Evilnum has used malicious JavaScript files on the victim's machine.[1]
Enterprise,T1555,Credentials from Password Stores,Evilnum can collect email credentials from victims.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"Evilnum has used the malware variant, TerraTV, to load a malicious DLL placed in the TeamViewer directory, instead of the original Windows DLL located in a system folder.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Evilnum has deleted files used during infection.[1]
Enterprise,T1105,Ingress Tool Transfer,Evilnum can deploy additional components or tools as needed.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Evilnum has sent spearphishing emails containing a link to a zip file hosted on Google Drive.[1]
Enterprise,T1204,User Execution: Malicious Link,Evilnum has sent spearphishing emails designed to trick the recipient into opening malicious shortcut links which downloads a .LNK file.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Evilnum has used a component called TerraLoader to check certain hardware and file information to detect sandboxed environments. [1]
Enterprise,T1560,Archive Collected Data,Axiom has compressed and encrypted data prior to exfiltration.[5]
Enterprise,T1005,Data from Local System,Axiom has collected data from a compromised network.[5]
Enterprise,T1003,OS Credential Dumping,Axiom has been known to dump credentials.[5]
Enterprise,T1566,Phishing,Axiom has used spear phishing to initially compromise victims.[4][5]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Axiom has used RDP during operations.[5]
Enterprise,T1553,Subvert Trust Controls,Axiom has used digital certificates to deliver malware.[5]
Enterprise,T1078,Valid Accounts,Axiom has used previously compromised administrative accounts to escalate privileges.[5]
Enterprise,T1005,Data from Local System,Andariel has collected large numbers of files from compromised network systems for later extraction.[1]
Enterprise,T1105,Ingress Tool Transfer,Andariel has downloaded additional tools and malware onto compromised hosts.[3]
Enterprise,T1027,Obfuscated Files or Information: Steganography,Andariel has hidden malicious executables within PNG files.[7][8]
Enterprise,T1588,Obtain Capabilities: Malware,Andariel has used a variety of publicly-available remote access Trojans (RATs) for its operations.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Andariel has conducted spearphishing campaigns that included malicious Word or Excel attachments.[3][7]
Enterprise,T1057,Process Discovery,Andariel has used tasklist to enumerate processes and find a specific string.[8]
Enterprise,T1049,System Network Connections Discovery,Andariel has used the netstat -naop tcp command to display TCP connections on a victim's machine.[8]
Enterprise,T1204,User Execution: Malicious File,Andariel has attempted to lure victims into enabling malicious macros within email attachments.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,WIRTE has used HTTP for network communication.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,WIRTE has used PowerShell for script execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,WIRTE has used VBScript in its operations.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WIRTE has used Base64 to decode malicious VBS script.[1]
Enterprise,T1105,Ingress Tool Transfer,WIRTE has downloaded PowerShell code from the C2 server to be executed.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,WIRTE has named a first stage dropper Kaspersky Update Agent in order to appear legitimate.[2]
Enterprise,T1588,Obtain Capabilities: Tool,WIRTE has obtained and used Empire for post-exploitation activities.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,WIRTE has sent emails to intended victims with malicious MS Word and Excel attachments.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,WIRTE has used regsvr32.exe to trigger the execution of a malicious script.[1]
Enterprise,T1204,User Execution: Malicious File,WIRTE has attempted to lure users into opening malicious MS Word and Excel files to execute malicious payloads.[2]
Enterprise,T1087,Account Discovery: Local Account,Chimera has used net user for account discovery.[2]
Enterprise,T1087,Account Discovery: Domain Account,Chimera has has used net user /dom and net user Administrator to enumerate domain accounts including administrator accounts.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Chimera has used HTTPS for C2 communications.[2]
Enterprise,T1071,Application Layer Protocol: DNS,Chimera has used Cobalt Strike to encapsulate C2 in DNS traffic.[2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Chimera has used gzip for Linux OS and a modified RAR software to archive data on Windows hosts.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Chimera has used PowerShell scripts to execute malicious payloads and the DSInternals PowerShell module to make use of Active Directory features.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Chimera has used the Windows Command Shell and batch scripts for execution on compromised hosts.[2]
Enterprise,T1074,Data Staged: Local Data Staging,Chimera has staged stolen data locally on compromised hosts.[2]
Enterprise,T1074,Data Staged: Remote Data Staging,Chimera has staged stolen data on designated servers in the target environment.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Chimera has used Cobalt Strike C2 beacons for data exfiltration.[2]
Enterprise,T1083,File and Directory Discovery,Chimera has utilized multiple commands to identify data of interest in file and directory listings.[2]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Chimera has used side loading to place malicious DLLs in memory.[2]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Chimera has cleared event logs on compromised hosts.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Chimera has performed file deletion to evade detection.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Chimera has used a Windows version of the Linux touch command to modify the date and time stamp on DLLs.[2]
Enterprise,T1105,Ingress Tool Transfer,Chimera has remotely copied tools and malware onto targeted systems.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Chimera has renamed malware to GoogleUpdate.exe and WinRAR to jucheck.exe, RecordedTV.ms, teredo.tmp, update.exe, and msadcs1.exe.[1]"
Enterprise,T1106,Native API,Chimera has used direct Windows system calls by leveraging Dumpert.[1]
Enterprise,T1027,Obfuscated Files or Information,Chimera has encoded PowerShell commands.[1]
Enterprise,T1588,Obtain Capabilities: Tool,"Chimera has obtained and used tools such as BloodHound, Cobalt Strike, Mimikatz, and PsExec.[1][2]"
Enterprise,T1003,OS Credential Dumping: NTDS,"Chimera has gathered the SYSTEM registry and ntds.dit files from target systems.[1] Chimera specifically has used the NtdsAudit tool to dump the password hashes of domain users via cmsadcs.exe ""NTDS.dit"" -s ""SYSTEM"" -p RecordedTV_pdmp.txt --users-csv RecordedTV_users.csv and used ntdsutil to copy the Active Directory database.[2]"
Enterprise,T1069,Permission Groups Discovery: Local Groups,Chimera has used net localgroup administrators to identify accounts with local administrative rights.[2]
Enterprise,T1057,Process Discovery,Chimera has used tasklist to enumerate processes.[2]
Enterprise,T1012,Query Registry,Chimera has queried Registry keys using reg query \\HKU\\SOFTWARE\Microsoft\Terminal Server Client\Servers and reg query \\HKU\\Software\Microsoft\Windows\CurrentVersion\Internet Settings.[2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Chimera has used RDP to access targeted systems.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Chimera has used Windows admin shares to move laterally.[1][2]
Enterprise,T1021,Remote Services: Windows Remote Management,Chimera has used WinRM for lateral movement.[2]
Enterprise,T1018,Remote System Discovery,Chimera has utilized various scans and queries to find domain controllers and remote services in the target environment.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Chimera has used scheduled tasks to invoke Cobalt Strike including through batch script schtasks /create /ru ""SYSTEM"" /tn ""update"" /tr ""cmd /c c:\windows\temp\update.bat"" /sc once /f /st and to maintain persistence.[1][2]"
Enterprise,T1082,System Information Discovery,"Chimera has used fsutil fsinfo drives, systeminfo, and vssadmin list shadows for system information including shadow volumes and drive information.[2]"
Enterprise,T1016,System Network Configuration Discovery,"Chimera has used ipconfig, Ping, and tracert to enumerate the IP address and network environment and settings of the local host.[2]"
Enterprise,T1049,System Network Connections Discovery,Chimera has used netstat -ano | findstr EST to discover network connections.[2]
Enterprise,T1033,System Owner/User Discovery,Chimera has used the quser command to show currently logged on users.[2]
Enterprise,T1569,System Services: Service Execution,Chimera has used PsExec to deploy beacons on compromised systems.[2]
Enterprise,T1124,System Time Discovery,Chimera has used time /t and net time \ip/hostname for system time discovery.[2]
Enterprise,T1078,Valid Accounts,Chimera has used a valid account to maintain persistence via scheduled task.[1]
Enterprise,T1078,Domain Accounts,Chimera has used compromised domain accounts to gain access to the target environment.[2]
Enterprise,T1047,Windows Management Instrumentation,Chimera has used WMIC to execute remote commands.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT37 uses HTTPS to conceal C2 communications.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT37's has added persistence via the Registry key HKCU\Software\Microsoft\CurrentVersion\Run\.[1][3]
Enterprise,T1059,Command and Scripting Interpreter,APT37 has used Ruby scripts to execute payloads.[7]
Enterprise,T1059,Windows Command Shell,APT37 has used the command-line interface.[1][3]
Enterprise,T1059,Visual Basic,APT37 executes shellcode and a VBA script to decode Base64 strings.[3]
Enterprise,T1059,Python,APT37 has used Python scripts to execute payloads.[7]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,APT37 has used a credential stealer known as ZUMKONG that can harvest usernames and passwords stored in browsers.[1]
Enterprise,T1005,Data from Local System,APT37 has collected data from victims' local systems.[1]
Enterprise,T1105,Ingress Tool Transfer,APT37 has downloaded second stage malware from compromised websites.[1][6][5][7]
Enterprise,T1036,Masquerading: Invalid Code Signature,"APT37 has signed its malware with an invalid digital certificates listed as ""Tencent Technology (Shenzhen) Company Limited.""[2]"
Enterprise,T1106,Native API,"APT37 leverages the Windows API calls: VirtualAlloc(), WriteProcessMemory(), and CreateRemoteThread() for process injection.[3]"
Enterprise,T1027,Obfuscated Files or Information,APT37 obfuscates strings and payloads.[3][6][7]
Enterprise,T1027,Steganography,APT37 uses steganography to send images to users that are embedded with shellcode.[3][6]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT37 delivers malware using spearphishing emails with malicious HWP attachments.[1][3][6]
Enterprise,T1057,Process Discovery,APT37's Freenki malware lists running processes using the Microsoft Windows API.[3]
Enterprise,T1055,Process Injection,"APT37 injects its malware variant, ROKRAT, into the cmd.exe process.[3]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT37 has created scheduled tasks to run malicious scripts on a compromised host.[7]
Enterprise,T1082,System Information Discovery,"APT37 collects the computer name, the BIOS model, and execution path.[3]"
Enterprise,T1033,System Owner/User Discovery,APT37 identifies the victim username.[3]
Enterprise,T1204,User Execution: Malicious File,APT37 has sent spearphishing attachments attempting to get a user to open them.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,"APT37 leverages social networking sites and cloud platforms (AOL, Twitter, Yandex, Mediafire, pCloud, Dropbox, and Box) for C2.[1][3]"
Enterprise,T1566,Phishing: Spearphishing Attachment,APT12 has sent emails with malicious Microsoft Office documents and PDFs attached.[2][3]
Enterprise,T1204,User Execution: Malicious File,APT12 has attempted to get victims to open malicious Microsoft Word and PDF attachment sent via spearphishing.[2][3]
Enterprise,T1102,Web Service: Bidirectional Communication,APT12 has used blogs and WordPress for C2 infrastructure.[1]
Enterprise,T1087,Account Discovery: Domain Account,menuPass has used the Microsoft administration tool csvde.exe to export Active Directory data.[11]
Enterprise,T1560,Archive Collected Data,menuPass has encrypted files and information before exfiltration.[1][2]
Enterprise,T1560,Archive via Utility,menuPass has compressed files before exfiltration using TAR and RAR.[6][11][8]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,menuPass uses PowerSploit to inject shellcode into PowerShell.[11][8]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,menuPass executes commands using a command-line interface and reverse shell. The group has used a modified version of pentesting script wmiexec.vbs to execute commands.[6][11][12][10] menuPass has used malicious macros embedded inside Office documents to execute files.[9][10]
Enterprise,T1005,Data from Local System,menuPass has collected various files from the compromised computers.[1][8]
Enterprise,T1074,Data Staged: Local Data Staging,"menuPass stages data prior to exfiltration in multi-part archives, often saved in the Recycle Bin.[6]"
Enterprise,T1074,Data Staged: Remote Data Staging,menuPass has staged data on remote MSP systems or other victim networks prior to exfiltration.[6][8]
Enterprise,T1140,Deobfuscate/Decode Files or Information,menuPass has used certutil in a macro to decode base64-encoded content contained in a dropper document attached to an email. The group has also used certutil -decode to decode files on the victim’s machine when dropping UPPERCUT.[9][10]
Enterprise,T1083,File and Directory Discovery,"menuPass has searched compromised systems for folders of interest including those related to HR, audit and expense, and meeting memos.[8]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,menuPass has used DLL search order hijacking.[6]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,menuPass has used DLL side-loading to launch versions of Mimikatz and PwDump6 as well as UPPERCUT.[11][10][8]
Enterprise,T1070,Indicator Removal on Host: Clear Command History,menuPass has used Wevtutil to remove PowerShell execution logs.[13]
Enterprise,T1070,Indicator Removal on Host: File Deletion,A menuPass macro deletes files after it has decoded and decompressed them.[9][2]
Enterprise,T1105,Ingress Tool Transfer,menuPass has installed updates and new malware on victims.[6][2]
Enterprise,T1056,Input Capture: Keylogging,menuPass has used key loggers to steal usernames and passwords.[2]
Enterprise,T1036,Masquerading,menuPass has used esentutl to change file extensions to their true type that were masquerading as .txt files.[10]
Enterprise,T1036,Rename System Utilities,menuPass has renamed certutil and moved it to a different location on the system to avoid detection based on use of the tool.[10]
Enterprise,T1036,Match Legitimate Name or Location,menuPass has been seen changing malicious files to appear legitimate.[2]
Enterprise,T1106,Native API,"menuPass has used native APIs including GetModuleFileName, lstrcat, CreateFile, and ReadFile.[8]"
Enterprise,T1027,Obfuscated Files or Information,"menuPass has encoded strings in its malware with base64 as well as with a simple, single-byte XOR obfuscation using key 0x40.[9][10][8]"
Enterprise,T1588,Obtain Capabilities: Tool,"menuPass has used and modified open-source tools like Impacket, Mimikatz, and pwdump.[11]"
Enterprise,T1003,OS Credential Dumping: Security Account Manager,menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[11][12]
Enterprise,T1003,OS Credential Dumping: NTDS,menuPass has used Ntdsutil to dump credentials.[8]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,menuPass has used a modified version of pentesting tools wmiexec.vbs and secretsdump.py to dump credentials.[11][12]
Enterprise,T1566,Phishing: Spearphishing Attachment,menuPass has sent malicious Office documents via email as part of spearphishing campaigns as well as executables disguised as documents.[11][7][10][2]
Enterprise,T1055,Process Injection: Process Hollowing,menuPass has used process hollowing in iexplore.exe to load the RedLeaves implant.[9]
Enterprise,T1090,Proxy: External Proxy,menuPass has used a global service provider's IP as a proxy for C2 traffic from a victim.[7][10]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,menuPass has used RDP connections to move across the victim network.[6][2]
Enterprise,T1021,Remote Services: SSH,menuPass has used Putty Secure Copy Client (PSCP) to transfer data.[6]
Enterprise,T1018,Remote System Discovery,menuPass uses scripts to enumerate IP ranges on the victim network. menuPass has also issued the command net view /domain to a PlugX implant to gather information about remote systems on the network.[11][7]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,menuPass has used a script (atexec.py) to execute a command on a target machine via Task Scheduler.[11]
Enterprise,T1553,Subvert Trust Controls: Code Signing,menuPass has resized and added data to the certificate table to enable the signing of modified files with legitimate signatures.[13]
Enterprise,T1218,System Binary Proxy Execution: InstallUtil,menuPass has used InstallUtil.exe to execute malicious software.[11]
Enterprise,T1016,System Network Configuration Discovery,menuPass has used several tools to scan for open NetBIOS nameservers and enumerate NetBIOS sessions.[11]
Enterprise,T1049,System Network Connections Discovery,menuPass has used net use to conduct connectivity checks to machines.[6]
Enterprise,T1204,User Execution: Malicious File,"menuPass has attempted to get victims to open malicious files such as Windows Shortcuts (.lnk) and/or Microsoft Office documents, sent via email as part of spearphishing campaigns.[11][7][9][10][2]"
Enterprise,T1078,Valid Accounts,menuPass has used valid accounts including shared between Managed Service Providers and clients to move between the two environments.[6][8][2][13]
Enterprise,T1047,Windows Management Instrumentation,"menuPass has used a modified version of pentesting script wmiexec.vbs, which logs into a remote machine using WMI.[11][12][8]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,FIN8 has used HTTPS for command and control.[3]
Enterprise,T1560,Archive Collected Data: Archive via Utility,FIN8 has used RAR to compress collected data before exfiltration.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,FIN8's malicious spearphishing payloads are executed as PowerShell. FIN8 has also used PowerShell for lateral movement and credential access.[1][3][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,FIN8 has used a Batch file to automate frequently executed post compromise cleanup activities.[4] FIN8 has also executed commands remotely via cmd.[1][3]
Enterprise,T1074,Data Staged: Remote Data Staging,FIN8 aggregates staged data from a network into a single location.[4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,FIN8 has used the Plink utility to tunnel RDP back to C2 infrastructure.[4]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,FIN8 has cleared logs during post compromise cleanup activities.[4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FIN8 has deleted tmp and prefetch files during post compromise cleanup activities.[4]
Enterprise,T1105,Ingress Tool Transfer,FIN8 has used remote code execution to download subsequent payloads.[2][3]
Enterprise,T1112,Modify Registry,FIN8 has deleted Registry keys during post compromise cleanup activities.[4]
Enterprise,T1027,Obfuscated Files or Information,FIN8 has used environment variables and standard input (stdin) to obfuscate command-line arguments. FIN8 also obfuscates malicious macros delivered as payloads.[1][4][3]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,FIN8 harvests credentials using Invoke-Mimikatz or Windows Credentials Editor (WCE).[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,FIN8 has distributed targeted emails containing Word documents with embedded malicious macros.[1][2][4]
Enterprise,T1566,Phishing: Spearphishing Link,FIN8 has distributed targeted emails containing links to malicious documents with embedded macros.[4]
Enterprise,T1055,Process Injection: Asynchronous Procedure Call,FIN8 has injected malicious code into a new svchost.exe process.[3]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,FIN8 has used RDP for lateral movement.[4]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,FIN8 has attempted to map to C$ on enumerated hosts to test the scope of their current credentials/context.[4]
Enterprise,T1018,Remote System Discovery,FIN8 has used dsquery and other Active Directory utilities to enumerate hosts; they have also used nltest.exe /dclist to retrieve a list of domain controllers.[4][3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,FIN8 has used scheduled tasks to maintain RDP backdoors.[4]
Enterprise,T1518,Software Discovery: Security Software Discovery,FIN8 has used Registry keys to detect and avoid executing in potential sandboxes.[4]
Enterprise,T1204,User Execution: Malicious Link,FIN8 has used emails with malicious links to lure victims into installing malware.[1][2][4]
Enterprise,T1204,User Execution: Malicious File,FIN8 has used malicious e-mail attachments to lure victims into executing malware.[1][2][4]
Enterprise,T1078,Valid Accounts,FIN8 has used valid accounts for persistence and lateral movement.[4]
Enterprise,T1102,Web Service,"FIN8 has used sslip.io, a free IP to domain mapping service that also makes SSL certificate generation easier for traffic encryption, as part of their command and control.[3]"
Enterprise,T1047,Windows Management Instrumentation,FIN8's malicious spearphishing payloads use WMI to launch malware and spawn cmd.exe execution. FIN8 has also used WMIC for lateral movement as well as during and post compromise cleanup activities.[1][3][4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"Later implants used by APT28, such as CHOPSTICK, use a blend of HTTP, HTTPS, and other legitimate channels for C2, depending on module configuration.[6][2]"
Enterprise,T1071,Application Layer Protocol: Mail Protocols,"APT28 has used IMAP, POP3, and SMTP for a communication channel in various implants, including using self-registered Google Mail accounts and later compromised email servers of its victims.[6][2]"
Enterprise,T1560,Archive Collected Data,APT28 used a publicly available tool to gather and compress multiple documents on the DCCC and DNC networks.[3]
Enterprise,T1560,Archive via Utility,"APT28 has used a variety of utilities, including WinRAR, to archive collected data with password protection.[2]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT28 has deployed malware that has copied itself to the startup directory for persistence.[21]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,APT28 downloads and executes PowerShell scripts and performs PowerShell commands.[11][21][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,An APT28 loader Trojan uses a cmd.exe and batch script to run its payload.[28] The group has also used macros to execute payloads.[18][30][17][21]
Enterprise,T1005,Data from Local System,"APT28 has retrieved internal documents from machines inside victim environments, including by using Forfiles to stage documents before exfiltration.[33][3][27][2]"
Enterprise,T1074,Data Staged: Local Data Staging,APT28 has stored captured credential information in a file named pi.log.[31]
Enterprise,T1074,Data Staged: Remote Data Staging,APT28 has staged archives of collected data on a target's Outlook Web Access (OWA) server.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,An APT28 macro uses the command certutil -decode to decode contents of a .txt file storing the base64 encoded payload.[34][11]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,APT28 installed a Delphi backdoor that used a custom algorithm for C2 communications.[13]
Enterprise,T1083,File and Directory Discovery,"APT28 has used Forfiles to locate PDF, Excel, and Word documents during collection. The group also searched a compromised DCCC computer for specific terms.[33][3]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,APT28 has saved files with hidden file attributes.[18][18]
Enterprise,T1564,Hide Artifacts: Hidden Window,APT28 has used the WindowStyle parameter to conceal PowerShell windows.[11] [39]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,"APT28 has cleared event logs, including by using the commands wevtutil cl System and wevtutil cl Security.[5][3]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,"APT28 has intentionally deleted computer files to cover their tracks, including with use of the program CCleaner.[3]"
Enterprise,T1070,Indicator Removal on Host: Timestomp,APT28 has performed timestomping on victim files.[5]
Enterprise,T1105,Ingress Tool Transfer,"APT28 has downloaded additional files, including by using a first-stage downloader to contact the C2 server to obtain the second-stage implant.[36][28][17][21][2]"
Enterprise,T1056,Input Capture: Keylogging,APT28 has used tools to perform keylogging.[31][3][21]
Enterprise,T1036,Masquerading,APT28 has renamed the WinRAR utility to avoid detection.[2]
Enterprise,T1036,Match Legitimate Name or Location,"APT28 has changed extensions on files containing exfiltrated data to make them appear benign, and renamed a web shell instance to appear as a legitimate OWA page.[2]"
Enterprise,T1027,Obfuscated Files or Information,"APT28 encrypted a .dll payload using RTL and a custom encryption algorithm. APT28 has also obfuscated payloads with base64, XOR, and RC4.[36][34][11][18][17]"
Enterprise,T1588,Obtain Capabilities: Tool,"APT28 has obtained and used open-source tools like Koadic, Mimikatz, and Responder.[11][22][37]"
Enterprise,T1003,OS Credential Dumping,APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims.[42][3][14]
Enterprise,T1003,LSASS Memory,APT28 regularly deploys both publicly available (ex: Mimikatz) and custom password retrieval tools on victims.[42][3] They have also dumped the LSASS process memory using the MiniDump function.[2]
Enterprise,T1003,NTDS,APT28 has used the ntdsutil.exe utility to export the Active Directory database for credential access.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT28 sent spearphishing emails containing malicious Microsoft Office and RAR attachments.[34][10][11][3][22][17][21][16]
Enterprise,T1566,Phishing: Spearphishing Link,APT28 sent spearphishing emails which used a URL-shortener service to masquerade as a legitimate service and to redirect targets to credential harvesting sites.[3][13][14][16]
Enterprise,T1057,Process Discovery,An APT28 loader Trojan will enumerate the victim's processes searching for explorer.exe if its current process does not have necessary permissions.[28]
Enterprise,T1090,Proxy: External Proxy,"APT28 used other victims as proxies to relay command traffic, for instance using a compromised Georgian military email server as a hop point to NATO victims. The group has also used a tool that acts as a proxy to allow C2 even if the victim is behind a router. APT28 has also used a machine to relay and obscure communications between CHOPSTICK and their server.[6][36][3]"
Enterprise,T1090,Proxy: Multi-hop Proxy,APT28 has routed traffic over Tor and VPN servers to obfuscate their activities.[21]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT28 has mapped network drives using Net and administrator credentials.[2]
Enterprise,T1113,Screen Capture,APT28 has used tools to take screenshots from victims.[42][44][3][16]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"APT28 executed CHOPSTICK by using rundll32 commands such as rundll32.exe ""C:\Windows\twain_64.dll"". APT28 also executed a .dll for a first stage dropper using rundll32.exe. An APT28 loader Trojan saved a batch script that uses rundll32 to execute a DLL payload.[5][36][11][28][13][2]"
Enterprise,T1204,User Execution: Malicious Link,APT28 has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[14][16]
Enterprise,T1204,User Execution: Malicious File,APT28 attempted to get users to click on Microsoft Office attachments containing malicious macro scripts.[34][17][16]
Enterprise,T1078,Valid Accounts,"APT28 has used legitimate credentials to gain initial access, maintain access, and exfiltrate data from a victim network. The group has specifically used credentials stolen through a spearphishing email to login to the DCCC network. The group has also leveraged default manufacturer's passwords to gain initial access to corporate networks via IoT devices such as a VOIP phone, printer, and video decoder.[47][3][23][2]"
Enterprise,T1078,Cloud Accounts,APT28 has used compromised Office 365 service accounts with Global Administrator privileges to collect email from user inboxes.[2]
Enterprise,T1102,Web Service: Bidirectional Communication,APT28 has used Google Drive for C2.[21]
Enterprise,T1074,Data Staged: Local Data Staging,BackdoorDiplomacy has copied files of interest to the main drive's recycle bin.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,BackdoorDiplomacy has executed DLL search order hijacking.[1]
Enterprise,T1105,Ingress Tool Transfer,BackdoorDiplomacy has downloaded additional files and tools onto a compromised host.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,BackdoorDiplomacy has disguised their backdoor droppers with naming conventions designed to blend into normal operations.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,BackdoorDiplomacy has dropped implants in folders named for legitimate software.[1]
Enterprise,T1027,Obfuscated Files or Information,BackdoorDiplomacy has obfuscated tools and malware it uses with VMProtect.[1]
Enterprise,T1588,Obtain Capabilities: Malware,"BackdoorDiplomacy has obtained and used leaked malware, including DoublePulsar, EternalBlue, EternalRocks, and EternalSynergy, in its operations.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,BackdoorDiplomacy has obtained a variety of open-source reconnaissance and red team tools for discovery and lateral movement.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,BackdoorDiplomacy has dropped legitimate software onto a compromised host and used it to execute malicious DLLs.[1]
Enterprise,T1049,System Network Connections Discovery,BackdoorDiplomacy has used NetCat and PortQry to enumerate network connections and display the status of related TCP and UDP ports.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Nomadic Octopus has used PowerShell for execution.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Nomadic Octopus used cmd.exe /c within a malicious macro.[3]
Enterprise,T1564,Hide Artifacts: Hidden Window,Nomadic Octopus executed PowerShell in a hidden window.[3]
Enterprise,T1105,Ingress Tool Transfer,Nomadic Octopus has used malicious macros to download additional files to the victim's machine.[3]
Enterprise,T1036,Masquerading,Nomadic Octopus attempted to make Octopus appear as a Telegram Messenger with a Russian interface.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Nomadic Octopus has targeted victims with spearphishing emails containing malicious attachments.[1][3]
Enterprise,T1204,User Execution: Malicious File,Nomadic Octopus as attempted to lure victims into clicking on malicious attachments within spearphishing emails.[2][3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,BlackTech has used DLL side loading by giving DLLs hardcoded names and placing them in searched directories.[5]
Enterprise,T1036,Masquerading: Right-to-Left Override,BlackTech has used right-to-left-override to obfuscate the filenames of malicious e-mail attachments.[1]
Enterprise,T1106,Native API,BlackTech has used built-in API functions.[4]
Enterprise,T1588,Obtain Capabilities: Tool,"BlackTech has obtained and used tools such as Putty, SNScan, and PsExec for its operations.[2]"
Enterprise,T1588,Obtain Capabilities: Code Signing Certificates,BlackTech has used stolen code-signing certificates for its malicious payloads.[2]
Enterprise,T1588,Obtain Capabilities: Digital Certificates,"BlackTech has used valid, stolen digital certificates for some of their malware and tools.[6]"
Enterprise,T1566,Phishing: Spearphishing Attachment,BlackTech has used spearphishing e-mails with malicious password-protected archived files (ZIP or RAR) to deliver malware.[1][7]
Enterprise,T1566,Phishing: Spearphishing Link,BlackTech has used spearphishing e-mails with links to cloud services to deliver malware.[1]
Enterprise,T1021,Remote Services: SSH,BlackTech has used Putty for remote access.[2]
Enterprise,T1204,User Execution: Malicious Link,BlackTech has used e-mails with malicious links to lure victims into installing malware.[1]
Enterprise,T1204,User Execution: Malicious File,BlackTech has used e-mails with malicious documents to lure victims into installing malware.[1][7]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Rancor has used HTTP for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Rancor has used cmd.exe to execute commmands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Rancor has used VBS scripts as well as embedded macros for execution.[1]
Enterprise,T1105,Ingress Tool Transfer,"Rancor has downloaded additional malware, including by using certutil.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Rancor has attached a malicious document to an email to gain initial access.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Rancor launched a scheduled task to gain persistence using the schtasks /create /sc command.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Rancor has used msiexec to download and execute malicious installer files over HTTP.[1]
Enterprise,T1204,User Execution: Malicious File,Rancor attempted to get users to click on an embedded macro within a Microsoft Office Excel document to launch their malware.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,GOLD SOUTHFIELD has staged and executed PowerShell scripts on compromised hosts.[4]
Enterprise,T1027,Obfuscated Files or Information,GOLD SOUTHFIELD has executed base64 encoded PowerShell scripts on compromised hosts.[4]
Enterprise,T1566,Phishing,GOLD SOUTHFIELD has conducted malicious spam (malspam) campaigns to gain access to victim's machines.[1]
Enterprise,T1113,Screen Capture,GOLD SOUTHFIELD has used the remote monitoring and management tool ConnectWise to obtain screen captures from victim's machines.[4]
Enterprise,T1588,Obtain Capabilities: Tool,Silent Librarian has obtained free and publicly available tools including SingleFile and HTTrack to copy login pages of targeted organizations.[4][6]
Enterprise,T1588,Obtain Capabilities: Digital Certificates,Silent Librarian has obtained free Let's Encrypt SSL certificates for use on their phishing pages.[2][6]
Enterprise,T1078,Valid Accounts,Silent Librarian has used compromised credentials to obtain unauthorized access to online accounts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Machete has used batch files to initiate additional downloads of malicious files.[4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Machete has embedded malicious macros within spearphishing attachments to download additional files.[4]
Enterprise,T1059,Command and Scripting Interpreter: Python,Machete used multiple compiled Python scripts on the victim’s system. Machete's main backdoor Machete is also written in Python.[1][3][4]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Machete's Machete MSI installer has masqueraded as a legitimate Adobe Acrobat Reader installer.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,Machete has delivered spearphishing emails that contain a zipped file with malicious contents.[2][3][4]
Enterprise,T1566,Phishing: Spearphishing Link,Machete has sent phishing emails that contain a link to an external server with ZIP and RAR archives.[1][3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Machete has created scheduled tasks to maintain Machete's persistence.[4]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Machete has used msiexec to install the Machete malware.[4]
Enterprise,T1204,User Execution: Malicious Link,Machete has has relied on users opening malicious links delivered through spearphishing to execute malware.[1][2][3]
Enterprise,T1204,User Execution: Malicious File,Machete has relied on users opening malicious attachments delivered through spearphishing to execute malware.[1][2][3][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Naikon has modified a victim's Windows Run registry to establish persistence.[4]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Naikon has used DLL side-loading to load malicious DLL's into legitimate executables.[5]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Naikon renamed a malicious service taskmgr to appear to be a legitimate version of Task Manager.[4]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Naikon has disguised malicious programs as Google Chrome, Adobe, and VMware executables.[4]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Naikon has used malicious e-mail attachments to deliver malware.[5]
Enterprise,T1018,Remote System Discovery,Naikon has used a netbios scanner for remote machine identification.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Naikon has used schtasks.exe for lateral movement in compromised networks.[4]
Enterprise,T1518,Software Discovery: Security Software Discovery,Naikon uses commands such as netsh advfirewall firewall to discover local firewall settings.[2]
Enterprise,T1016,System Network Configuration Discovery,Naikon uses commands such as netsh interface show to discover network interface settings.[2]
Enterprise,T1204,User Execution: Malicious File,Naikon has convinced victims to open malicious attachments to execute malware.[5]
Enterprise,T1078,Valid Accounts: Domain Accounts,Naikon has used administrator credentials for lateral movement in compromised networks.[4]
Enterprise,T1047,Windows Management Instrumentation,Naikon has used WMIC.exe for lateral movement.[4]
Enterprise,T1560,Archive Collected Data: Archive via Utility,GALLIUM used WinRAR to compress and encrypt stolen data prior to exfiltration.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,GALLIUM used PowerShell for execution to assist in lateral movement as well as for dumping credentials stored on compromised machines.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,GALLIUM used the Windows command shell to execute commands.[1]
Enterprise,T1005,Data from Local System,"GALLIUM collected data from the victim's local system, including password hashes from the SAM hive in the Registry.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,GALLIUM compressed and staged files in multi-part archives in the Recycle Bin prior to exfiltration.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,GALLIUM used Web shells and HTRAN for C2 and to exfiltrate data.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,GALLIUM used DLL side-loading to covertly load PoisonIvy into memory on the victim machine.[1]
Enterprise,T1105,Ingress Tool Transfer,"GALLIUM dropped additional tools to victims during their operation, including portqry.exe, a renamed cmd.exe file, winrar, and HTRAN.[1][2]"
Enterprise,T1036,Masquerading: Rename System Utilities,GALLIUM used a renamed cmd.exe file to evade detection.[1]
Enterprise,T1027,Obfuscated Files or Information,GALLIUM used a modified version of HTRAN in which they obfuscated strings such as debug messages in an apparent attempt to evade detection.[1]
Enterprise,T1027,Software Packing,"GALLIUM packed some payloads using different types of packers, both known and custom.[1]"
Enterprise,T1027,Indicator Removal from Tools,"GALLIUM ensured each payload had a unique hash, including by using different types of packers.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,"GALLIUM has used a variety of widely-available tools, which in some cases they modified to add functionality and/or subvert antimalware solutions.[2]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,GALLIUM used a modified version of Mimikatz along with a PowerShell-based Mimikatz to dump credentials on the victim machines.[1][2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,"GALLIUM used reg commands to dump specific hives from the Windows Registry, such as the SAM hive, and obtain password hashes.[1]"
Enterprise,T1090,Proxy: External Proxy,GALLIUM used a modified version of HTRAN to redirect connections between networks.[1]
Enterprise,T1018,Remote System Discovery,GALLIUM used a modified version of NBTscan to identify available NetBIOS name servers over the network as well as ping to identify remote systems.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,GALLIUM established persistence for PoisonIvy by created a scheduled task.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,GALLIUM has used stolen certificates to sign its tools including those from Whizzimo LLC.[2]
Enterprise,T1016,System Network Configuration Discovery,GALLIUM used ipconfig /all to obtain information about the victim network configuration. The group also ran a modified version of NBTscan to identify available NetBIOS name servers.[1]
Enterprise,T1049,System Network Connections Discovery,GALLIUM used netstat -oan to obtain information about the victim network connections.[1]
Enterprise,T1033,System Owner/User Discovery,GALLIUM used whoami and query user to obtain information about the victim user.[1]
Enterprise,T1078,Valid Accounts,GALLIUM leveraged valid accounts to maintain access to a victim network.[1]
Enterprise,T1047,Windows Management Instrumentation,GALLIUM used WMI for execution to assist in lateral movement as well as for installing tools across multiple assets.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"TEMP.Veles has used a publicly-available PowerShell-based tool, WMImplant.[2] The group has also used PowerShell to perform Timestomping.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,TEMP.Veles has created staging folders in directories that were infrequently used by legitimate users or processes.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"TEMP.Veles routinely deleted tools, logs, and other files after they were finished with them.[1]"
Enterprise,T1070,Indicator Removal on Host: Timestomp,TEMP.Veles used timestomping to modify the $STANDARD_INFORMATION attribute on tools.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"TEMP.Veles has renamed files to look like legitimate files, such as Windows update files or Schneider Electric application files.[1]"
Enterprise,T1027,Obfuscated Files or Information: Indicator Removal from Tools,TEMP.Veles has modified files based on the open-source project cryptcat in an apparent attempt to decrease AV detection rates.[2]
Enterprise,T1588,Obtain Capabilities: Tool,TEMP.Veles has obtained and used tools such as Mimikatz and PsExec.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"TEMP.Veles has used Mimikatz and a custom tool, SecHack, to harvest credentials. [1]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,TEMP.Veles utilized RDP throughout an operation.[1]
Enterprise,T1021,Remote Services: SSH,TEMP.Veles has relied on encrypted SSH-based tunnels to transfer tools and for remote command/program execution.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,TEMP.Veles has used scheduled task XML triggers.[1]
Enterprise,T1078,Valid Accounts,TEMP.Veles has used compromised VPN accounts.[1]
Enterprise,T1105,Ingress Tool Transfer,IndigoZebra has downloaded additional files and tools from its C2 server.[2]
Enterprise,T1588,Obtain Capabilities: Tool,IndigoZebra has acquired open source tools such as NBTscan and Meterpreter for their operations.[2][3]
Enterprise,T1566,Phishing: Spearphishing Attachment,IndigoZebra sent spearphishing emails containing malicious password-protected RAR attachments.[1][2]
Enterprise,T1204,User Execution: Malicious File,IndigoZebra sent spearphishing emails containing malicious attachments that urged recipients to review modifications in the file which would trigger the attack.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Tropic Trooper has used HTTP in communication with the C2.[5][3]
Enterprise,T1071,Application Layer Protocol: DNS,Tropic Trooper's backdoor has communicated to the C2 over the DNS protocol.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Tropic Trooper has created shortcuts in the Startup folder to establish persistence.[5][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Tropic Trooper has created the Registry key HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell and sets the value to establish persistence.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Tropic Trooper has used Windows command scripts.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Tropic Trooper has installed a service pointing to a malicious DLL dropped to disk.[6]
Enterprise,T1132,Data Encoding: Standard Encoding,Tropic Trooper has used base64 encoding to hide command strings delivered from the C2.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Tropic Trooper used shellcode with an XOR algorithm to decrypt a payload. Tropic Trooper also decrypted image files which contained a payload.[2][3]
Enterprise,T1573,Encrypted Channel,Tropic Trooper has encrypted traffic with the C2 to prevent network detection.[3]
Enterprise,T1573,Asymmetric Cryptography,Tropic Trooper has used SSL to connect to C2 servers.[1][3]
Enterprise,T1083,File and Directory Discovery,Tropic Trooper has monitored files' modified time.[3]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Tropic Trooper has created a hidden directory under C:\ProgramData\Apple\Updates\ and C:\Users\Public\Documents\Flash\.[1][3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Tropic Trooper has been known to side-load DLLs using a valid version of a Windows Address Book and Windows Defender executable with one of their tools.[7][5]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Tropic Trooper has deleted dropper files on an infected system using command scripts.[3]
Enterprise,T1105,Ingress Tool Transfer,Tropic Trooper has used a delivered trojan to download additional files.[3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Tropic Trooper has hidden payloads in Flash directories and fake installer files.[3]
Enterprise,T1106,Native API,"Tropic Trooper has used multiple Windows APIs including HttpInitialize, HttpCreateHttpHandle, and HttpAddUrl.[3]"
Enterprise,T1027,Obfuscated Files or Information,Tropic Trooper has encrypted configuration files.[1][3]
Enterprise,T1027,Steganography,Tropic Trooper has used JPG files with encrypted payloads to mask their backdoor routines and evade detection.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Tropic Trooper sent spearphishing emails that contained malicious Microsoft Office and fake installer file attachments.[2][8][9][5][3]
Enterprise,T1057,Process Discovery,Tropic Trooper is capable of enumerating the running processes on the system using pslist.[2][3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Tropic Trooper has injected a DLL backdoor into dllhost.exe and svchost.exe.[1][3]
Enterprise,T1518,Software Discovery,Tropic Trooper's backdoor could list the infected system's installed software.[3]
Enterprise,T1518,Security Software Discovery,Tropic Trooper can search for anti-virus software running on the system.[2]
Enterprise,T1082,System Information Discovery,Tropic Trooper has detected a target system’s OS version and system volume information.[8][3]
Enterprise,T1016,System Network Configuration Discovery,Tropic Trooper has used scripts to collect the host's network topology.[3]
Enterprise,T1049,System Network Connections Discovery,Tropic Trooper has tested if the localhost network is available and other connection capability on an infected system using command scripts.[3]
Enterprise,T1033,System Owner/User Discovery,Tropic Trooper used letmein to scan for saved usernames on the target system.[8]
Enterprise,T1204,User Execution: Malicious File,Tropic Trooper has lured victims into executing malware via malicious e-mail attachments.[5]
Enterprise,T1078,Valid Accounts: Local Accounts,Tropic Trooper has used known administrator account credentials to execute the backdoor directly.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Tonto Team has used PowerShell to download additional payloads.[2]
Enterprise,T1059,Command and Scripting Interpreter: Python,Tonto Team has used Python-based tools for execution.[7]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Tonto Team abuses a legitimate and signed Microsoft executable to launch a malicious DLL.[2]
Enterprise,T1105,Ingress Tool Transfer,Tonto Team has downloaded malicious DLLs which served as a ShadowPad loader.[2]
Enterprise,T1056,Input Capture: Keylogging,Tonto Team has used keylogging tools in their operations.[7]
Enterprise,T1003,OS Credential Dumping,Tonto Team has used a variety of credential dumping tools.[7]
Enterprise,T1069,Permission Groups Discovery: Local Groups,"Tonto Team has used the ShowLocalGroupDetails command to identify administrator, user, and guest accounts on a compromised host.[7]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Tonto Team has delivered payloads via spearphishing attachments.[7]
Enterprise,T1090,Proxy: External Proxy,Tonto Team has routed their traffic through an external server in order to obfuscate their location.[7]
Enterprise,T1204,User Execution: Malicious File,Tonto Team has relied on user interaction to open their malicious RTF documents.[7][10]
Enterprise,T1027,Obfuscated Files or Information,Mofang has compressed the ShimRat executable within malicious email attachments. Mofang has also encrypted payloads before they are downloaded to victims.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,"Mofang delivered spearphishing emails with malicious documents, PDFs, or Excel files attached.[1]"
Enterprise,T1566,Phishing: Spearphishing Link,Mofang delivered spearphishing emails with malicious links included.[1]
Enterprise,T1204,User Execution: Malicious Link,Mofang's spearphishing emails required a user to click the link to connect to a compromised website.[1]
Enterprise,T1204,User Execution: Malicious File,Mofang's malicious spearphishing attachments required a user to open the file after receiving.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,DarkVishnya used PowerShell to create shellcode loaders.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,DarkVishnya created new services for shellcode loaders distribution.[1]
Enterprise,T1588,Obtain Capabilities: Tool,"DarkVishnya has obtained and used tools such as Impacket, Winexe, and PsExec.[1]"
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Leafminer infected victims using JavaScript code.[1]
Enterprise,T1555,Credentials from Password Stores,"Leafminer used several tools for retrieving login and password information, including LaZagne.[1]"
Enterprise,T1555,Credentials from Web Browsers,"Leafminer used several tools for retrieving login and password information, including LaZagne.[1]"
Enterprise,T1083,File and Directory Discovery,Leafminer used a tool called MailSniper to search for files on the desktop and another utility called Sobolsoft to extract attachments from EML files.[1]
Enterprise,T1027,Obfuscated Files or Information,Leafminer obfuscated scripts that were used on victim machines.[1]
Enterprise,T1588,Obtain Capabilities: Tool,"Leafminer has obtained and used tools such as LaZagne, Mimikatz, PsExec, and MailSniper.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"Leafminer used several tools for retrieving login and password information, including LaZagne and Mimikatz.[1]"
Enterprise,T1003,OS Credential Dumping: LSA Secrets,"Leafminer used several tools for retrieving login and password information, including LaZagne.[1]"
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,"Leafminer used several tools for retrieving login and password information, including LaZagne.[1]"
Enterprise,T1055,Process Injection: Process Doppelgänging,Leafminer has used Process Doppelgänging to evade security software while deploying tools on compromised systems.[1]
Enterprise,T1018,Remote System Discovery,Leafminer used Microsoft’s Sysinternals tools to gather detailed information about remote systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"Inception has used HTTP, HTTPS, and WebDav in network communications.[3][1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Inception has maintained persistence by modifying Registry run key value HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run\.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Inception has used PowerShell to execute malicious commands and payloads.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Inception has used VBScript to execute malicious commands and payloads.[1][3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"Inception used a browser plugin to steal passwords and sessions from Internet Explorer, Chrome, Opera, Firefox, Torch, and Yandex.[2]"
Enterprise,T1005,Data from Local System,"Inception used a file hunting plugin to collect .txt, .pdf, .xls or .doc files from the infected host.[4]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Inception has encrypted network communications with AES.[3]
Enterprise,T1083,File and Directory Discovery,Inception used a file listing plugin to collect information about file and directories both on local and remote drives.[2]
Enterprise,T1027,Obfuscated Files or Information,Inception has encrypted malware payloads dropped on victim machines with AES and RC4 encryption.[3]
Enterprise,T1588,Obtain Capabilities: Tool,Inception has obtained and used open-source tools such as LaZagne.[4]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Inception has used specific malware modules to gather domain membership.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Inception has used weaponized documents attached to spearphishing emails for reconnaissance and initial compromise.[3][2][1][4]
Enterprise,T1057,Process Discovery,Inception has used a reconnaissance module to identify active processes and other associated loaded modules.[2]
Enterprise,T1090,Proxy: Multi-hop Proxy,Inception used chains of compromised routers to proxy C2 communications between them and cloud service providers.[2]
Enterprise,T1518,Software Discovery,Inception has enumerated installed software on compromised systems.[2]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Inception has used malicious HTA files to drop and execute malware.[4]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Inception has ensured persistence at system boot by setting the value regsvr32 %path%\ctfmonrn.dll /s.[3]
Enterprise,T1082,System Information Discovery,Inception has used a reconnaissance module to gather information about the operating system and hardware on the infected host.[2]
Enterprise,T1204,User Execution: Malicious File,Inception lured victims into clicking malicious files for machine reconnaissance and to execute malware.[3][4][2][1]
Enterprise,T1102,Web Service,Inception has incorporated at least five different cloud service providers into their C2 infrastructure including CloudMe.[3][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Malware used by Group5 is capable of remotely deleting files from victims.[1]
Enterprise,T1056,Input Capture: Keylogging,Malware used by Group5 is capable of capturing keystrokes.[1]
Enterprise,T1027,Obfuscated Files or Information,"Group5 disguised its malicious binaries with several layers of obfuscation, including encrypting the files.[1]"
Enterprise,T1113,Screen Capture,Malware used by Group5 is capable of watching the victim's screen.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Sharpshooter's first-stage downloader installed Rising Sun to the startup folder %Startup%\mssync.exe.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Sharpshooter's first-stage downloader was a VBA macro.[1]
Enterprise,T1105,Ingress Tool Transfer,Sharpshooter downloaded additional payloads after a target was infected with a first-stage downloader.[1]
Enterprise,T1106,Native API,"Sharpshooter's first-stage downloader resolved various Windows libraries and APIs, including LoadLibraryA(), GetProcAddress(), and CreateProcessA().[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Sharpshooter has sent malicious attachments via emails to targets.[1]
Enterprise,T1055,Process Injection,Sharpshooter has leveraged embedded shellcode to inject a downloader into the memory of Word.[1]
Enterprise,T1204,User Execution: Malicious File,Sharpshooter has sent malicious DOC and PDF files to targets so that they can be opened by a user.[1]
Enterprise,T1588,Obtain Capabilities: Tool,"Cleaver has obtained and used open-source tools such as PsExec, Windows Credential Editor, and Mimikatz.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Cleaver has been known to dump credentials using Mimikatz and Windows Credential Editor.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT19 used HTTP for C2 communications. APT19 also used an HTTP malware variant to communicate over HTTP for C2.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,An APT19 HTTP malware variant establishes persistence by setting the Registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run\Windows Debug Tools-%LOCALAPPDATA%\.[4]
Enterprise,T1059,Command and Scripting Interpreter,APT19 downloaded and launched code within a SCT file.[1]
Enterprise,T1059,PowerShell,APT19 used PowerShell commands to execute payloads.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,An APT19 Port 22 malware variant registers itself as a service.[4]
Enterprise,T1132,Data Encoding: Standard Encoding,An APT19 HTTP malware variant used Base64 to encode communications to the C2 server.[4]
Enterprise,T1140,Deobfuscate/Decode Files or Information,An APT19 HTTP malware variant decrypts strings using single-byte XOR keys.[4]
Enterprise,T1564,Hide Artifacts: Hidden Window,APT19 used -W Hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,APT19 launched an HTTP malware variant and a Port 22 malware variant using a legitimate executable that loaded the malicious DLL.[4]
Enterprise,T1112,Modify Registry,APT19 uses a Port 22 malware variant to modify several Registry keys.[4]
Enterprise,T1027,Obfuscated Files or Information,APT19 used Base64 to obfuscate commands and the payload.[1]
Enterprise,T1588,Obtain Capabilities: Tool,APT19 has obtained and used publicly-available tools like Empire.[6][1]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT19 sent spearphishing emails with malicious attachments in RTF and XLSM formats to deliver initial exploits.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,APT19 used Regsvr32 to bypass application control techniques.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,APT19 configured its payload to inject into the rundll32.exe.[1]
Enterprise,T1082,System Information Discovery,APT19 collected system architecture information. APT19 used an HTTP malware variant and a Port 22 malware variant to gather the hostname and CPU information from the victim’s machine.[1][4]
Enterprise,T1016,System Network Configuration Discovery,APT19 used an HTTP malware variant and a Port 22 malware variant to collect the MAC address and IP address from the victim’s machine.[4]
Enterprise,T1033,System Owner/User Discovery,APT19 used an HTTP malware variant and a Port 22 malware variant to collect the victim’s username.[4]
Enterprise,T1204,User Execution: Malicious File,APT19 attempted to get users to launch malicious attachments delivered via spearphishing emails.[1]
Enterprise,T1036,Masquerading: Right-to-Left Override,Scarlet Mimic has used the left-to-right override character in self-extracting RAR archive spearphishing attachment file names.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT33 has used HTTP for command and control.[4]
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT33 has used WinRAR to compress data prior to exfil.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"APT33 has deployed a tool known as DarkComet to the Startup folder of a victim, and used Registry run keys to gain persistence.[4][3]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,APT33 has utilized PowerShell to download files from the C2 server and run various scripts. [4][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,APT33 has used VBScript to initiate the delivery of payloads.[3]
Enterprise,T1555,Credentials from Password Stores,APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][5]
Enterprise,T1555,Credentials from Web Browsers,APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][5]
Enterprise,T1132,Data Encoding: Standard Encoding,APT33 has used base64 to encode command and control traffic.[5]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,APT33 has used AES for encryption of command and control traffic.[5]
Enterprise,T1105,Ingress Tool Transfer,APT33 has downloaded additional files and programs from its C2 server.[4][3]
Enterprise,T1027,Obfuscated Files or Information,APT33 has used base64 to encode payloads.[5]
Enterprise,T1588,Obtain Capabilities: Tool,APT33 has obtained and leveraged publicly-available tools for early intrusion activities.[5][4]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"APT33 has used a variety of publicly available tools like LaZagne, Mimikatz, and ProcDump to dump credentials.[4][5]"
Enterprise,T1003,OS Credential Dumping: LSA Secrets,APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][5]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,APT33 has used a variety of publicly available tools like LaZagne to gather credentials.[4][5]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT33 has sent spearphishing e-mails with archive attachments.[3]
Enterprise,T1566,Phishing: Spearphishing Link,APT33 has sent spearphishing emails containing links to .hta files.[1][4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT33 has created a scheduled task to execute a .vbe file multiple times a day.[4]
Enterprise,T1204,User Execution: Malicious Link,APT33 has lured users to click links to malicious HTML applications delivered via spearphishing emails.[1][4]
Enterprise,T1204,User Execution: Malicious File,APT33 has used malicious e-mail attachments to lure victims into executing malware.[3]
Enterprise,T1078,Valid Accounts,APT33 has used valid accounts for initial access and privilege escalation.[2][5]
Enterprise,T1078,Cloud Accounts,APT33 has used compromised Office 365 accounts in tandem with Ruler in an attempt to gain control of endpoints.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,The White Company has the ability to delete its malware entirely from the target system.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,The White Company has obfuscated their payloads through packing.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,The White Company has sent phishing emails with malicious Microsoft Word attachments to victims.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,"The White Company has checked for specific antivirus products on the target’s computer, including Kaspersky, Quick Heal, AVG, BitDefender, Avira, Sophos, Avast!, and ESET.[1]"
Enterprise,T1124,System Time Discovery,The White Company has checked the current date on the victim system.[1]
Enterprise,T1204,User Execution: Malicious File,The White Company has used phishing lure documents that trick users into opening them and infecting their computers.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Deep Panda has used PowerShell scripts to download and execute programs in memory, without writing to disk.[1]"
Enterprise,T1564,Hide Artifacts: Hidden Window,Deep Panda has used -w hidden to conceal PowerShell windows by setting the WindowStyle parameter to hidden. [1]
Enterprise,T1027,Obfuscated Files or Information: Indicator Removal from Tools,"Deep Panda has updated and modified its malware, resulting in different hash values that evade detection.[4]"
Enterprise,T1057,Process Discovery,Deep Panda uses the Microsoft Tasklist utility to list processes running on systems.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Deep Panda uses net.exe to connect to network shares using net use commands with compromised credentials.[1]
Enterprise,T1018,Remote System Discovery,Deep Panda has used ping to identify other machines of interest.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Deep Panda has used regsvr32.exe to execute a server variant of Derusbi in victim networks.[3]
Enterprise,T1047,Windows Management Instrumentation,The Deep Panda group is known to utilize WMI for lateral movement.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Honeybee uses FTP for command and control.[1]
Enterprise,T1560,Archive Collected Data,"Honeybee adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Honeybee uses a batch file that configures the ComSysApp service to autostart in order to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Several commands are supported by the Honeybee's implant via the command-line interface and there’s also a utility to execute any custom command on an infected endpoint.[1] Honeybee used batch scripting.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Honeybee embeds a Visual Basic script within a malicious Word document as part of initial access; the script is executed when the Word document is opened.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Honeybee has batch files that modify the system service COMSysApp to load a malicious DLL.[1]
Enterprise,T1005,Data from Local System,Honeybee collects data from the local victim system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"Honeybee adds collected files to a temp.zip file saved in the %temp% folder, then base64 encodes it and uploads it to control server.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Honeybee drops a Word file containing a Base64-encoded file in it that is read, decoded, and dropped to the disk by the macro.[1]"
Enterprise,T1083,File and Directory Discovery,Honeybee's service-based DLL implant traverses the FTP server’s directories looking for files with keyword matches for computer names or certain keywords.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Honeybee removes batch files to reduce fingerprint on the system as well as deletes the CAB file that gets encoded upon infection.[1]
Enterprise,T1112,Modify Registry,Honeybee uses a batch file that modifies Registry keys to launch a DLL into the svchost.exe process.[1]
Enterprise,T1027,Obfuscated Files or Information,Honeybee drops files with base64-encoded data.[1]
Enterprise,T1057,Process Discovery,Honeybee gathers a list of processes using the tasklist command and then is sent back to the control server.[1]
Enterprise,T1055,Process Injection,Honeybee uses a batch file to load a DLL into the svchost.exe process.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Honeybee uses a dropper called MaoCheng that harvests a stolen digital signature from Adobe Systems.[1]
Enterprise,T1082,System Information Discovery,Honeybee gathers computer name and information using the systeminfo command.[1]
Enterprise,T1569,System Services: Service Execution,Honeybee launches a DLL file that gets executed as a service using svchost.exe[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT41 used HTTP to download payloads for CVE-2019-19781 and CVE-2020-10189 exploits.[4]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,APT41 used exploit payloads that initiate download via ftp.[4]
Enterprise,T1071,Application Layer Protocol: DNS,APT41 used DNS for C2 communications.[1][2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT41 created a RAR archive of targeted files for exfiltration.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT41 created and modified startup files for persistence.[1][2] APT41 added a registry key in HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Svchost to establish persistence for Cobalt Strike.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,APT41 leveraged PowerShell to deploy malware families in victims’ environments.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,APT41 used cmd.exe /c to execute commands on remote machines.[1]APT41 used a batch file to install persistence for the Cobalt Strike BEACON loader.[4]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,APT41 executed file /bin/pwd in activity exploiting CVE-2019-19781 against Citrix devices.[4]
Enterprise,T1543,Create or Modify System Process: Windows Service,APT41 modified legitimate Windows services to install malware backdoors.[1][2] APT41 created the StorSyncSvc service to provide persistence for Cobalt Strike.[4]
Enterprise,T1005,Data from Local System,APT41 has uploaded files and data from a compromised host.[2]
Enterprise,T1083,File and Directory Discovery,"APT41 has executed file /bin/pwd on exploited victims, perhaps to return architecture related information.[4]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"APT41 has used search order hijacking to execute malicious payloads, such as Winnti RAT.[3]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,APT41 used legitimate executables to perform DLL side-loading of their malware.[1]
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,APT41 has configured payloads to load via LD_PRELOAD.[3]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,APT41 attempted to remove evidence of some of its activity by clearing Windows security and system events.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Command History,APT41 attempted to remove evidence of some of its activity by deleting Bash histories.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,APT41 deleted files from the system.[1]
Enterprise,T1105,Ingress Tool Transfer,APT41 used certutil to download additional files.[4][3][2]
Enterprise,T1056,Input Capture: Keylogging,APT41 used a keylogger called GEARSHIFT on a target system.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,APT41 has created services to appear as benign system tools.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,APT41 attempted to masquerade their files as popular anti-virus software.[1][2]
Enterprise,T1112,Modify Registry,APT41 used a malware variant called GOODLUCK to modify the registry in order to steal credentials.[1][2]
Enterprise,T1027,Obfuscated Files or Information,APT41 used VMProtected binaries in multiple intrusions.[4]
Enterprise,T1588,Obtain Capabilities: Tool,"APT41 has obtained and used tools such as Mimikatz, pwdump, PowerSploit, and Windows Credential Editor.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"APT41 has used hashdump, Mimikatz, and the Windows Credential Editor to dump password hashes from memory and authenticate to other user accounts.[1][2]"
Enterprise,T1566,Phishing: Spearphishing Attachment,APT41 sent spearphishing emails with attachments such as compiled HTML (.chm) files to initially compromise their victims.[1]
Enterprise,T1055,Process Injection,APT41 malware TIDYELF loaded the main WINTERLOVE component by injecting it into the iexplore.exe process.[1]
Enterprise,T1090,Proxy,APT41 used a tool called CLASSFON to covertly proxy network communications.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,APT41 used RDP for lateral movement.[1][3]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT41 has transferred implant files using Windows Admin Shares.[3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT41 used a compromised account to create a scheduled task on a system.[1][3]
Enterprise,T1553,Subvert Trust Controls: Code Signing,APT41 leveraged code-signing certificates to sign malware when targeting both gaming and non-gaming organizations.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,APT41 used compiled HTML (.chm) files for targeting.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,APT41 has used rundll32.exe to execute a loader.[3]
Enterprise,T1016,System Network Configuration Discovery,APT41 collected MAC addresses from victim machines.[1][2]
Enterprise,T1049,System Network Connections Discovery,"APT41 has enumerated IP addresses of network resources and used the netstat command as part of network reconnaissance. The group has also used a malware variant, HIGHNOON, to enumerate active RDP sessions.[1][2]"
Enterprise,T1033,System Owner/User Discovery,APT41 used the WMIEXEC utility to execute whoami commands on remote machines.[1]
Enterprise,T1569,System Services: Service Execution,APT41 used svchost.exe and Net to execute a system service installed to launch a Cobalt Strike BEACON loader.[4][2]
Enterprise,T1078,Valid Accounts,APT41 used compromised credentials to log on to other systems.[1][3]
Enterprise,T1102,Web Service: Dead Drop Resolver,"APT41 used legitimate websites for C2 through dead drop resolvers (DDR), including GitHub, Pastebin, and Microsoft TechNet.[1]"
Enterprise,T1047,Windows Management Instrumentation,"APT41 used WMI in several ways, including for execution of commands via WMIEXEC as well as for persistence via PowerSploit.[1][2]"
Enterprise,T1087,Account Discovery: Domain Account,"Lazarus Group has queried an active directory server to obtain the list of accounts, including administrator accounts.[9]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Lazarus Group has conducted C2 over HTTP and HTTPS.[15][16][17][18][19][20][21]
Enterprise,T1560,Archive Collected Data,"Lazarus Group has compressed exfiltrated data with RAR and used RomeoDelta malware to archive specified directories in .zip format, encrypt the .zip file, and upload it to C2. [22][23][15][9]"
Enterprise,T1560,Archive via Library,"Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is compressed with Zlib, encrypted, and uploaded to a C2 server.[23][15]"
Enterprise,T1560,Archive via Custom Method,A Lazarus Group malware sample encrypts data using a simple byte based XOR operation prior to exfiltration.[3][22][23][15]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Lazarus Group has maintained persistence by loading malicious code into a startup folder or by adding a Registry Run key.[3][23][15][18][19]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Lazarus Group malware has maintained persistence on a system by creating a LNK shortcut in the user’s Startup folder.[15][13]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Lazarus Group has used PowerShell to execute commands and malicious code.[9][12]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Lazarus Group malware uses cmd.exe to execute commands on a compromised host.[3][10][15][24][20] A Destover-like variant used by Lazarus Group uses a batch file mechanism to delete its binaries from the system.[25]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Lazarus Group has used VBA and embedded macros in Word documents to execute malicious code.[18][13][19][20]
Enterprise,T1543,Create or Modify System Process: Windows Service,Several Lazarus Group malware families install themselves as new services.[3][10]
Enterprise,T1132,Data Encoding: Standard Encoding,A Lazarus Group malware sample encodes data with base64.[15]
Enterprise,T1005,Data from Local System,Lazarus Group has collected data and files from compromised networks.[3][22][23][14][13][18]
Enterprise,T1074,Data Staged: Local Data Staging,"Lazarus Group malware IndiaIndia saves information gathered about the victim to a file that is saved in the %TEMP% directory, then compressed, encrypted, and uploaded to a C2 server.[3][22]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,Lazarus Group has used shellcode within macros to decrypt and manually map DLLs and shellcode into memory at runtime.[19][20]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Several Lazarus Group malware families encrypt C2 traffic using custom code that uses XOR with an ADD operation and XOR with a SUB operation. Another Lazarus Group malware sample XORs C2 traffic. Other Lazarus Group malware uses Caracachs encryption to encrypt C2 payloads. Lazarus Group has also used AES to encrypt C2 traffic.[3][10][15][25][18]
Enterprise,T1041,Exfiltration Over C2 Channel,Lazarus Group has exfiltrated data and files over a C2 channel through its various tools and malware.[3][22][15][26]
Enterprise,T1083,File and Directory Discovery,"Several Lazarus Group has conducted word searches on compromised machines to identify specific documents of interest. Lazarus Group malware can use a common function to identify target files by their extension, and some also enumerate files and directories, including a Destover-like variant that lists files and gathers information for all drives.[3][25][13][19][20]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Lazarus Group has used a VBA Macro to set its file attributes to System and Hidden and has named files with a dot prefix to hide them from the Finder application.[15][16][17][19]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Lazarus Group has replaced win_fw.dll, an internal component that is executed during IDA Pro installation, with a malicious DLL to download and execute a payload.[21]"
Enterprise,T1574,Hijack Execution Flow: KernelCallbackTable,Lazarus Group has abused the KernelCallbackTable to hijack process control flow and execute shellcode.[19][20]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Lazarus Group malware TangoDelta attempts to terminate various processes associated with McAfee. Additionally, Lazarus Group malware SHARPKNOT disables the Microsoft Windows System Event Notification and Alerter services.[3][22][8][24]."
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Various Lazarus Group malware modifies the Windows firewall to allow incoming connections or disable it entirely using netsh. [3][22][8]
Enterprise,T1070,Indicator Removal on Host,Lazarus Group has restored malicious KernelCallbackTable code to its original state after the process execution flow has been hijacked.[19]
Enterprise,T1070,Clear Command History,"Lazarus Group has routinely deleted log files on a compromised router, including automatic log deletion through the use of the logrotate utility.[14]"
Enterprise,T1070,File Deletion,"Lazarus Group malware has deleted files in various ways, including ""suicide scripts"" to delete malware binaries from the victim. Lazarus Group also uses secure file deletion to delete files from the victim.[3][25]"
Enterprise,T1070,Timestomp,"Several Lazarus Group malware families use timestomping, including modifying the last write timestamp of a specified Registry key to a random date, as well as copying the timestamp for legitimate .exe files (such as calc.exe or mspaint.exe) to its dropped files.[3][10][22][25]"
Enterprise,T1105,Ingress Tool Transfer,"Lazarus Group has downloaded files, malware, and tools from its C2 onto a compromised host.[3][10][22][16][17][13][14][18][9][12][19][20][21]"
Enterprise,T1056,Input Capture: Keylogging,Lazarus Group malware KiloAlfa contains keylogging functionality.[3][8]
Enterprise,T1036,Masquerading,Lazarus Group has disguised malicious template files as JPEG files to avoid detection.[18]
Enterprise,T1036,Rename System Utilities,Lazarus Group has renamed system utilities such as wscript.exe and mshta.exe.[20]
Enterprise,T1036,Masquerade Task or Service,Lazarus Group has used a scheduled task named SRCheck to mask the execution of a malicious .dll.[21]
Enterprise,T1036,Match Legitimate Name or Location,Lazarus Group has renamed malicious code to disguise it as Microsoft's narrator and other legitimate files.[29][9][20]
Enterprise,T1106,Native API,"Lazarus Group has used the Windows API ObtainUserAgentString to obtain the User-Agent from a compromised host to connect to a C2 server.[18] Lazarus Group has also used various, often lesser known, functions to perform various types of Discovery and Process Injection.[19][20]"
Enterprise,T1027,Obfuscated Files or Information,"Lazarus Group has used multiple types of encryption and encoding for their payloads, including AES, Caracachs, RC4, XOR, Base64, and other tricks such as creating aliases in code for Native API function names.[3][22][23][15][17][9][18][26][13][19][20]"
Enterprise,T1027,Software Packing,Lazarus Group has used Themida to pack malicious DLLs and other files.[13][26]
Enterprise,T1588,Obtain Capabilities: Tool,"Lazarus Group has obtained a variety of tools for their operations, including Responder, PuTTy PSCP, Wake-On-Lan, ChromePass, and dbxcli.[9][13][14]"
Enterprise,T1588,Obtain Capabilities: Code Signing Certificates,Lazarus Group has used code signing certificates issued by Sectigo RSA for some of its malware and tools.[9]
Enterprise,T1588,Obtain Capabilities: Digital Certificates,Lazarus Group has obtained SSL certificates for their C2 domains.[11]
Enterprise,T1566,Phishing: Spearphishing Attachment,Lazarus Group has targeted victims with spearphishing emails containing malicious Microsoft Word documents.[28][14][18][19][20]
Enterprise,T1566,Phishing: Spearphishing Link,Lazarus Group has sent malicious links to victims via email.[14][13][9]
Enterprise,T1566,Phishing: Spearphishing via Service,"Lazarus Group has used social media platforms, including LinkedIn and Twitter, to send spearphishing messages.[12][13][9]"
Enterprise,T1057,Process Discovery,Several Lazarus Group malware families gather a list of running processes on a victim system and send it to their C2 server. A Destover-like variant used by Lazarus Group also gathers process times.[3][22][15][25][17][19]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,A Lazarus Group malware sample performs reflective DLL injection.[15][19]
Enterprise,T1090,Proxy: Internal Proxy,Lazarus Group has used a compromised router to serve as a proxy between a victim network's corporate and restricted segments.[14]
Enterprise,T1090,Proxy: External Proxy,Lazarus Group has used multiple proxies to obfuscate network traffic from victims.[30][17]
Enterprise,T1012,Query Registry,"Lazarus Group malware IndiaIndia checks Registry keys within HKCU and HKLM to determine if certain applications are present, including SecureCRT, Terminal Services, RealVNC, TightVNC, UltraVNC, Radmin, mRemote, TeamViewer, FileZilla, pcAnyware, and Remote Desktop. Another Lazarus Group malware sample checks for the presence of the following Registry key:HKEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt.[3][22][15]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Lazarus Group malware SierraCharlie uses RDP for propagation.[3][23]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Lazarus Group malware SierraAlfa accesses the ADMIN$ share via SMB to conduct lateral movement.[3][23]
Enterprise,T1021,Remote Services: SSH,Lazarus Group used SSH and the PuTTy PSCP utility to gain access to a restricted segment of a compromised network.[14]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Lazarus Group has used schtasks for persistence including through the periodic execution of a remote XSL script or a dropped VBS payload.[9][20][21]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Lazarus Group has digitally signed malware and utilities to evade detection.[9][19]
Enterprise,T1218,System Binary Proxy Execution,Lazarus Group lnk files used for persistence have abused the Windows Update Client (wuauclt.exe) to execute a malicious DLL.[19][20]
Enterprise,T1218,Mshta,Lazarus Group has used mshta.exe to execute HTML pages downloaded by initial access documents.[19][20]
Enterprise,T1218,Regsvr32,Lazarus Group has used rgsvr32 to execute custom malware.[9]
Enterprise,T1218,Rundll32,Lazarus Group has used rundll32 to execute malicious payloads on a compromised host.[18][9][21]
Enterprise,T1082,System Information Discovery,"Several Lazarus Group malware families collect information on the type and version of the victim OS, as well as the victim computer name and CPU information. A Destover-like variant used by Lazarus Group also collects disk space information and sends it to its C2 server.[3][10][22][15][25][19]"
Enterprise,T1016,System Network Configuration Discovery,"Lazarus Group malware IndiaIndia obtains and sends to its C2 server information about the first network interface card’s configuration, including IP address, gateways, subnet mask, DHCP information, and whether WINS is available.[3][22]"
Enterprise,T1049,System Network Connections Discovery,Lazarus Group has used net use to identify and establish a network connection with a remote host.[14]
Enterprise,T1033,System Owner/User Discovery,Various Lazarus Group malware enumerates logged-on users.[3][10][22][23][15][16][19]
Enterprise,T1124,System Time Discovery,A Destover-like implant used by Lazarus Group can obtain the current system time and send it to the C2 server.[25]
Enterprise,T1204,User Execution: Malicious Link,Lazarus Group has sent spearphishing emails in an attempt to lure users to click on a malicious link.[9][13]
Enterprise,T1204,User Execution: Malicious File,Lazarus Group has attempted to get users to launch a malicious Microsoft Word attachment delivered via a spearphishing email.[28][13][14][19][20]
Enterprise,T1078,Valid Accounts,Lazarus Group has used administrator credentials to gain access to restricted network segments.[14]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Lazarus Group has used tools to detect sandbox or VMware services through identifying the presence of a debugger or related services.[13]
Enterprise,T1102,Web Service: Bidirectional Communication,"Lazarus Group has used GitHub as C2, pulling hosted image payloads then committing command execution output to files in specific directories.[19]"
Enterprise,T1047,Windows Management Instrumentation,Lazarus Group has used WMIC for discovery as well as to execute payloads for persistence and lateral movement.[3][23][13][14][20]
Enterprise,T1059,Command and Scripting Interpreter,FIN5 scans processes on all victim systems in the environment and uses automated scripts to pull back the results.[2]
Enterprise,T1074,Data Staged: Local Data Staging,FIN5 scripts save memory dump data into a specific directory on hosts in the victim environment.[2]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,FIN5 has cleared event logs from victims.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FIN5 uses SDelete to clean up the environment and attempt to prevent detection.[2]
Enterprise,T1588,Obtain Capabilities: Tool,"FIN5 has obtained and used a customized version of PsExec, as well as use other tools such as pwdump, SDelete, and Windows Credential Editor.[2]"
Enterprise,T1090,Proxy: External Proxy,FIN5 maintains access to victim environments by using FLIPSIDE to create a proxy for a backup RDP tunnel.[2]
Enterprise,T1018,Remote System Discovery,FIN5 has used the open source tool Essential NetTools to map the network and build a list of targets.[2]
Enterprise,T1078,Valid Accounts,"FIN5 has used legitimate VPN, RDP, Citrix, or VNC credentials to maintain access to a victim environment.[1][3][2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Threat Group-1314 actors spawned shells on remote systems on a victim network to execute commands.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Threat Group-1314 actors mapped network drives using net use.[1]
Enterprise,T1078,Valid Accounts: Domain Accounts,"Threat Group-1314 actors used compromised domain credentials for the victim's endpoint management platform, Altiris, to move laterally.[1]"
Enterprise,T1087,Account Discovery: Domain Account,"Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about usernames listed in AD.[11]"
Enterprise,T1087,Account Discovery: Email Account,"Sandworm Team used malware to enumerate email settings, including usernames and passwords, from the M.E.Doc application.[12]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sandworm Team's BCS-server tool connects to the designated C2 server via HTTP.[11]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Sandworm Team has used PowerShell scripts to run a credential harvesting tool in memory to evade defenses.[1][13]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Sandworm Team has run the xp_cmdshell command in MS-SQL.[13]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Sandworm Team has created VBScripts to run an SSH server.[14][11][15][13]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Sandworm Team's CredRaptor tool can collect saved passwords from various internet browsers.[11]
Enterprise,T1132,Data Encoding: Standard Encoding,Sandworm Team's BCS-server tool uses base64 encoding and HTML tags for the communication traffic between the C2 server.[11]
Enterprise,T1005,Data from Local System,"Sandworm Team has exfiltrated internal documents, files, and other data from compromised hosts.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,Sandworm Team's VBS backdoor can decode Base64-encoded data and save it to the %TEMP% folder. The group also decrypted received information using the Triple DES algorithm and decompresses it using GZip.[11][12]
Enterprise,T1041,Exfiltration Over C2 Channel,Sandworm Team has sent system information to its C2 server using HTTP.[11]
Enterprise,T1083,File and Directory Discovery,Sandworm Team has enumerated files on a compromised host.[1][13]
Enterprise,T1562,Impair Defenses: Disable Windows Event Logging,Sandworm Team has disabled event logging on compromised systems.[13]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Sandworm Team has used backdoors that can delete files used in an attack from an infected system.[11][12]
Enterprise,T1105,Ingress Tool Transfer,"Sandworm Team has pushed additional malicious tools onto an infected system to steal user credentials, move laterally, and destroy data.[11][1]"
Enterprise,T1056,Input Capture: Keylogging,Sandworm Team has used a keylogger to capture keystrokes by using the SetWindowsHookEx function.[11]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Sandworm Team has avoided detection by naming a malicious binary explorer.exe.[11][1]
Enterprise,T1027,Obfuscated Files or Information,"Sandworm Team has used Base64 encoding within malware variants. Sandworm Team has also used ROT13 encoding, AES encryption and compression with the zlib library for their Python-based backdoor.[18][11]"
Enterprise,T1027,Software Packing,Sandworm Team used UPX to pack a copy of Mimikatz.[13]
Enterprise,T1588,Obtain Capabilities: Tool,Sandworm Team has acquired open-source tools for some of it's operations; for example it acquired Invoke-PSImage to establish an encrypted channel from a compromised host to Sandworm Team's C2 server as part of its preparation for the 2018 Winter Olympics attack.[1]
Enterprise,T1588,Obtain Capabilities: Vulnerabilities,"In 2017, Sandworm Team conducted technical research related to vulnerabilities associated with websites used by the Korean Sport and Olympic Committee, a Korean power company, and a Korean airport.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Sandworm Team's plainpwd tool is a modified version of Mimikatz and dumps Windows credentials from system memory.[11][15]
Enterprise,T1566,Phishing: Spearphishing Attachment,Sandworm Team has delivered malicious Microsoft Office attachments via spearphishing emails.[18][17][11][1]
Enterprise,T1566,Phishing: Spearphishing Link,Sandworm Team has crafted phishing emails containing malicious hyperlinks.[1]
Enterprise,T1090,Proxy,"Sandworm Team's BCS-server tool can create an internal proxy server to redirect traffic from the adversary-controlled C2 to internal servers which may not be connected to the internet, but are interconnected locally.[11]"
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Sandworm Team has run net use to connect to network shares.[13]
Enterprise,T1018,Remote System Discovery,"Sandworm Team has used a tool to query Active Directory using LDAP, discovering information about computers listed in AD.[11][13]"
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Sandworm Team used a backdoor which could execute a supplied DLL using rundll32.exe.[12]
Enterprise,T1082,System Information Discovery,Sandworm Team used a backdoor to enumerate information about the infected system's operating system.[12][1]
Enterprise,T1016,System Network Configuration Discovery,Sandworm Team checks for connectivity to other resources in the network.[13]
Enterprise,T1049,System Network Connections Discovery,"Sandworm Team had gathered user, IP address, and server data related to RDP sessions on a compromised host. It has also accessed network diagram files useful for understanding how a host's network was configured.[1][13]"
Enterprise,T1033,System Owner/User Discovery,Sandworm Team has collected the username from a compromised host.[1]
Enterprise,T1204,User Execution: Malicious Link,Sandworm Team has tricked unwitting recipients into clicking on malicious hyperlinks within emails crafted to resemble trustworthy senders.[1]
Enterprise,T1204,User Execution: Malicious File,Sandworm Team has tricked unwitting recipients into clicking on spearphishing attachments and enabling malicious macros embedded within files.[11][1]
Enterprise,T1078,Valid Accounts,Sandworm Team have used previously acquired legitimate credentials prior to attacks.[17]
Enterprise,T1078,Domain Accounts,Sandworm Team has used stolen credentials to access administrative accounts within the domain.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Sandworm Team has used the Telegram Bot API from Telegram Messenger to send and receive commands to its Python backdoor. Sandworm Team also used legitimate M.E.Doc software update check requests for sending and receiving commands and hosted malicious payloads on putdrive.com.[11][15]
Enterprise,T1047,Windows Management Instrumentation,Sandworm Team has used VBScript to run WMI queries.[13]
Enterprise,T1087,Account Discovery: Email Account,TA505 has used the tool EmailStealer to steal and send lists of e-mail addresses to a remote server.[5]
Enterprise,T1071,Application Layer Protocol: Web Protocols,TA505 has used HTTP to communicate with C2 nodes.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,TA505 has used PowerShell to download and execute malware and reconnaissance scripts.[1][6][7][8]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TA505 has executed commands using cmd.exe.[5]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,TA505 has used VBS for code execution.[1][2][5][4]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,TA505 has used JavaScript for code execution.[1][2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,TA505 has used malware to gather credentials from Internet Explorer.[1]
Enterprise,T1105,Ingress Tool Transfer,TA505 has downloaded additional malware to execute on victim systems.[7][8][6]
Enterprise,T1027,Obfuscated Files or Information,TA505 has password-protected malicious Word documents and used base64 encoded PowerShell commands.[1][7][8]
Enterprise,T1027,Software Packing,TA505 has used UPX to obscure malicious code.[4]
Enterprise,T1069,Permission Groups Discovery,TA505 has used TinyMet to enumerate members of privileged groups.[4] TA505 has also run net group /domain.[5]
Enterprise,T1566,Phishing: Spearphishing Attachment,TA505 has used spearphishing emails with malicious attachments to initially compromise victims.[1][2][3][7][6][9][5][10][4]
Enterprise,T1566,Phishing: Spearphishing Link,TA505 has sent spearphishing emails containing malicious links.[1][3][5][10]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,TA505 has been seen injecting a DLL into winword.exe.[4]
Enterprise,T1553,Subvert Trust Controls: Code Signing,TA505 has signed payloads with code signing certificates from Thawte and Sectigo.[7][8][5]
Enterprise,T1553,Subvert Trust Controls: Mark-of-the-Web Bypass,TA505 has used .iso files to deploy malicious .lnk files.[11]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,TA505 has used msiexec to download and execute malicious Windows Installer files.[7][8][5]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,TA505 has leveraged rundll32.exe to execute malicious DLLs.[7][8]
Enterprise,T1204,User Execution: Malicious Link,"TA505 has used lures to get users to click links in emails and attachments. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. [1][2][3][7][6][9][5][10]"
Enterprise,T1204,User Execution: Malicious File,"TA505 has used lures to get users to enable content in malicious attachments and execute malicious files contained in archives. For example, TA505 makes their malware look like legitimate Microsoft Word documents, .pdf and/or .lnk files. [1][2][3][7][6][9][5][10][4]"
Enterprise,T1078,Valid Accounts: Domain Accounts,TA505 has used stolen domain admin accounts to compromise additional hosts.[4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"HAFNIUM has used open-source C2 frameworks, including Covenant.[1]"
Enterprise,T1560,Archive Collected Data: Archive via Utility,HAFNIUM has used 7-Zip and WinRAR to compress stolen files for exfiltration.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,HAFNIUM has used the Exchange Power Shell module Set-OabVirtualDirectoryPowerShell to export mailbox data.[1][2]
Enterprise,T1132,Data Encoding: Standard Encoding,HAFNIUM has used ASCII encoding for C2 traffic.[1]
Enterprise,T1105,Ingress Tool Transfer,HAFNIUM has downloaded malware and tools--including Nishang and PowerCat--onto a compromised host.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,HAFNIUM has used procdump to dump the LSASS process memory.[1][2]
Enterprise,T1003,OS Credential Dumping: NTDS,HAFNIUM has stolen copies of the Active Directory database (NTDS.DIT).[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,HAFNIUM has used rundll32 to load malicious DLLs.[2]
Enterprise,T1078,Valid Accounts: Local Accounts,HAFNIUM has used the NT AUTHORITY\SYSTEM account to create files on Exchange servers.[3]
Enterprise,T1071,Application Layer Protocol,Magic Hound malware has used IRC for C2.[15]
Enterprise,T1071,Web Protocols,Magic Hound malware has used HTTP for C2.[15]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Magic Hound has used RAR to stage and compress local folders.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Magic Hound malware has used Registry Run keys to establish persistence.[15]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Magic Hound has used PowerShell for execution and privilege escalation.[15][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Magic Hound has used the command-line interface.[15]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Magic Hound malware has used VBS scripts for execution.[15]
Enterprise,T1083,File and Directory Discovery,"Magic Hound malware can list a victim's logical drives and the type, as well the total/free space of the fixed devices. Other malware can list a directory's contents.[15]"
Enterprise,T1564,Hide Artifacts: Hidden Window,Magic Hound malware has a function to determine whether the C2 server wishes to execute the newly dropped file in a hidden window.[15]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Magic Hound has deleted and overwrote files to cover tracks.[15][1]
Enterprise,T1105,Ingress Tool Transfer,Magic Hound has downloaded additional code and files from servers onto victims.[15]
Enterprise,T1056,Input Capture: Keylogging,Magic Hound malware is capable of keylogging.[15]
Enterprise,T1027,Obfuscated Files or Information,"Magic Hound malware has used base64-encoded commands and files, and has also encrypted embedded strings with AES.[15]"
Enterprise,T1588,Obtain Capabilities: Tool,"Magic Hound has obtained and used open-source penetration testing tools like Havij, sqlmap, Metasploit, and Mimikatz.[16][1][7]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Magic Hound stole domain credentials from Microsoft Active Directory Domain Controller and leveraged Mimikatz.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Magic Hound has sent malicious URL links through email to victims. In some cases the URLs were shortened or linked to Word documents with malicious macros that executed PowerShells scripts to download Pupy.[17][2][3]
Enterprise,T1566,Phishing: Spearphishing via Service,Magic Hound used various social media channels (such as LinkedIn) as well as messaging services (such as WhatsApp) to spearphish victims.[18][12][2]
Enterprise,T1057,Process Discovery,Magic Hound malware can list running processes.[15]
Enterprise,T1113,Screen Capture,Magic Hound malware can take a screenshot and upload the file to its C2 server.[15]
Enterprise,T1082,System Information Discovery,"Magic Hound malware has used a PowerShell command to check the victim system architecture to determine if it is an x64 machine. Other malware has obtained the OS version, UUID, and computer/host name to send to the C2 server.[15]"
Enterprise,T1016,System Network Configuration Discovery,"Magic Hound malware gathers the victim's local IP address, MAC address, and external IP address.[15]"
Enterprise,T1033,System Owner/User Discovery,Magic Hound malware has obtained the victim username and sent it to the C2 server.[15]
Enterprise,T1204,User Execution: Malicious Link,Magic Hound has attempted to lure victims into opening malicious links embedded in emails.[2][3]
Enterprise,T1204,User Execution: Malicious File,Magic Hound has attempted to lure victims into opening malicious email attachments.[2]
Enterprise,T1102,Web Service: Bidirectional Communication,Magic Hound malware can use a SOAP Web service to communicate with its C2 server.[15]
Enterprise,T1105,Ingress Tool Transfer,Volatile Cedar can deploy additional tools.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Transparent Tribe has crafted VBS-based malicious documents.[1][2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Transparent Tribe can hide legitimate directories and replace them with malicious copies of the same name.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Transparent Tribe can mimic legitimate Windows directories by using the same icons and names.[2]
Enterprise,T1027,Obfuscated Files or Information,Transparent Tribe has dropped encoded executables on compromised hosts.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Transparent Tribe has sent spearphishing e-mails with attachments to deliver malicious payloads.[1][2][7][3][6]
Enterprise,T1566,Phishing: Spearphishing Link,Transparent Tribe has embedded links to malicious downloads in e-mails.[7][3]
Enterprise,T1204,User Execution: Malicious Link,Transparent Tribe has directed users to open URLs hosting malicious content.[7][3]
Enterprise,T1204,User Execution: Malicious File,Transparent Tribe has used weaponized documents in e-mail to compromise targeted systems.[1][2][7][3][6]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Blue Mockingbird has used PowerShell reverse TCP shells to issue interactive commands over a network connection.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Blue Mockingbird has used batch script files to automate execution and deployment of payloads.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Blue Mockingbird has made their XMRIG payloads persistent as a Windows Service.[1]
Enterprise,T1574,Hijack Execution Flow: COR_PROFILER,Blue Mockingbird has used wmic.exe and Windows Registry modifications to set the COR_PROFILER environment variable to execute a malicious DLL whenever a process loads the .NET CLR.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Blue Mockingbird has masqueraded their XMRIG payload name by naming it wercplsupporte.dll after the legitimate wercplsupport.dll file.[1]
Enterprise,T1112,Modify Registry,Blue Mockingbird has used Windows Registry modifications to specify a DLL payload.[1]
Enterprise,T1027,Obfuscated Files or Information,Blue Mockingbird has obfuscated the wallet address in the payload binary.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Blue Mockingbird has obtained and used tools such as Mimikatz.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Blue Mockingbird has used Mimikatz to retrieve credentials from LSASS memory.[1]
Enterprise,T1090,Proxy,"Blue Mockingbird has used frp, ssf, and Venom to establish SOCKS proxy connections.[1]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Blue Mockingbird has used Remote Desktop to log on to servers interactively and manually copy files to remote hosts.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Blue Mockingbird has used Windows Explorer to manually copy malicious files to remote hosts over SMB.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Blue Mockingbird has used Windows Scheduled Tasks to establish persistence on local and remote hosts.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using regsvr32.exe.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Blue Mockingbird has executed custom-compiled XMRIG miner DLLs using rundll32.exe.[1]
Enterprise,T1082,System Information Discovery,"Blue Mockingbird has collected hardware details for the victim's system, including CPU and memory information.[1]"
Enterprise,T1569,System Services: Service Execution,"Blue Mockingbird has executed custom-compiled XMRIG miner DLLs by configuring them to execute via the ""wercplsupport"" service.[1]"
Enterprise,T1047,Windows Management Instrumentation,Blue Mockingbird has used wmic.exe to set environment variables.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"RTM has used Registry run keys to establish persistence for the RTM Trojan and other tools, such as a modified version of TeamViewer remote desktop software.[1][2]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,RTM has used search order hijacking to force TeamViewer to load a malicious DLL.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,RTM has used spearphishing attachments to distribute its malware.[2]
Enterprise,T1204,User Execution: Malicious File,RTM has attempted to lure victims into opening e-mail attachments to execute malicious code.[2]
Enterprise,T1102,Web Service: Dead Drop Resolver,RTM has used an RSS feed on Livejournal to update a list of encrypted C2 server names.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Confucius has used HTTP for C2 communications.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Confucius has dropped malicious files into the startup folder %AppData%\Microsoft\Windows\Start Menu\Programs\Startup on a compromised host in order to maintain persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Confucius has used PowerShell to execute malicious files and payloads.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Confucius has used VBScript to execute malicious code.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Confucius has exfiltrated stolen files to its C2 server.[2]
Enterprise,T1083,File and Directory Discovery,"Confucius has used a file stealer that checks the Document, Downloads, Desktop, and Picture folders for documents and images with specific extensions.[2]"
Enterprise,T1105,Ingress Tool Transfer,Confucius has downloaded additional files and payloads onto a compromised host following initial access.[3][2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Confucius has crafted and sent victims malicious attachments to gain initial access.[3]
Enterprise,T1566,Phishing: Spearphishing Link,Confucius has sent malicious links to victims through email campaigns.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Confucius has created scheduled tasks to maintain persistence on a compromised host.[2]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Confucius has used mshta.exe to execute malicious VBScript.[1]
Enterprise,T1082,System Information Discovery,"Confucius has used a file stealer that can examine system drives, including those other than the C drive.[2]"
Enterprise,T1204,User Execution: Malicious Link,Confucius has lured victims into clicking on a malicious link sent through spearphishing.[2]
Enterprise,T1204,User Execution: Malicious File,Confucius has lured victims to execute malicious attachments included in crafted spearphishing emails related to current topics.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT18 uses HTTP for C2 communications.[4]
Enterprise,T1071,Application Layer Protocol: DNS,APT18 uses DNS for C2 communications.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT18 establishes persistence via the HKCU\Software\Microsoft\Windows\CurrentVersion\Run key.[3][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,APT18 uses cmd.exe to execute commands on the victim’s machine.[4][3]
Enterprise,T1083,File and Directory Discovery,APT18 can list files information for specific directories.[4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,APT18 actors deleted tools and batch files from victim systems.[1]
Enterprise,T1105,Ingress Tool Transfer,APT18 can upload a file to the victim’s machine.[4]
Enterprise,T1027,Obfuscated Files or Information,APT18 obfuscates strings in the payload.[4]
Enterprise,T1053,Scheduled Task/Job: At,APT18 actors used the native at Windows task scheduler tool to use scheduled tasks for execution on a victim network.[1]
Enterprise,T1082,System Information Discovery,APT18 can collect system information from the victim’s machine.[4]
Enterprise,T1078,Valid Accounts,APT18 actors leverage legitimate credentials to log into external remote services.[5]
Enterprise,T1005,Data from Local System,Dust Storm has used Android backdoors capable of exfiltrating specific files directly from the infected devices.[1]
Enterprise,T1083,File and Directory Discovery,Dust Storm has used Android backdoors capable of enumerating specific files on the infected devices.[1]
Enterprise,T1027,Obfuscated Files or Information,"Dust Storm has encoded payloads with a single-byte XOR, both skipping the key itself and zeroing in an attempt to avoid exposing the key.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Stealth Falcon malware communicates with its C2 server via HTTPS.[1]
Enterprise,T1059,Command and Scripting Interpreter,Stealth Falcon malware uses WMI to script data collection and command execution on the victim.[1]
Enterprise,T1059,PowerShell,"Stealth Falcon malware uses PowerShell commands to perform various functions, including gathering system information via WMI and executing commands from its C2 server.[1]"
Enterprise,T1555,Credentials from Password Stores,"Stealth Falcon malware gathers passwords from multiple sources, including Windows Credential Vault and Outlook.[1]"
Enterprise,T1555,Credentials from Web Browsers,"Stealth Falcon malware gathers passwords from multiple sources, including Internet Explorer, Firefox, and Chrome.[1]"
Enterprise,T1555,Windows Credential Manager,Stealth Falcon malware gathers passwords from the Windows Credential Vault.[1]
Enterprise,T1005,Data from Local System,Stealth Falcon malware gathers data from the local victim system.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Stealth Falcon malware encrypts C2 traffic using RC4 with a hard-coded key.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,"After data is collected by Stealth Falcon malware, it is exfiltrated over the existing C2 channel.[1]"
Enterprise,T1057,Process Discovery,Stealth Falcon malware gathers a list of running processes.[1]
Enterprise,T1012,Query Registry,Stealth Falcon malware attempts to determine the installed version of .NET by querying the Registry.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Stealth Falcon malware creates a scheduled task entitled ""IE Web Cache"" to execute a malicious file hourly.[1]"
Enterprise,T1082,System Information Discovery,"Stealth Falcon malware gathers system information via WMI, including the system directory, build number, serial number, version, manufacturer, model, and total physical memory.[1]"
Enterprise,T1016,System Network Configuration Discovery,Stealth Falcon malware gathers the Address Resolution Protocol (ARP) table from the victim.[1]
Enterprise,T1033,System Owner/User Discovery,Stealth Falcon malware gathers the registered user and primary owner name via WMI.[1]
Enterprise,T1047,Windows Management Instrumentation,Stealth Falcon malware gathers system information via Windows Management Instrumentation (WMI).[1]
Enterprise,T1560,Archive Collected Data,Leviathan has archived victim's data prior to exfiltration.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[2][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Leviathan has used JavaScript to create a shortcut file in the Startup folder that points to its main backdoor.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Leviathan has used PowerShell for execution.[2][3][1][4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Leviathan has used VBScript.[2]
Enterprise,T1074,Data Staged: Local Data Staging,Leviathan has used C:\Windows\Debug and C:\Perflogs as staging directories.[3][1]
Enterprise,T1074,Data Staged: Remote Data Staging,Leviathan has staged data remotely prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Leviathan has used a DLL known as SeDll to decrypt and execute other JavaScript backdoors.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Leviathan has exfiltrated data over its C2 channel.[1]
Enterprise,T1105,Ingress Tool Transfer,Leviathan has downloaded additional scripts and files from adversary-controlled servers.[2][3]
Enterprise,T1027,Obfuscated Files or Information,Leviathan has obfuscated code using base64 and gzip compression.[2]
Enterprise,T1027,Binary Padding,"Leviathan has inserted garbage characters into code, presumably to avoid anti-virus detection.[2]"
Enterprise,T1027,Steganography,Leviathan has used steganography to hide stolen data inside other files stored on Github.[1]
Enterprise,T1003,OS Credential Dumping,"Leviathan has used publicly available tools to dump password hashes, including HOMEFRY.[8]"
Enterprise,T1003,LSASS Memory,"Leviathan has used publicly available tools to dump password hashes, including ProcDump and WCE.[8]"
Enterprise,T1566,Phishing: Spearphishing Attachment,"Leviathan has sent spearphishing emails with malicious attachments, including .rtf, .doc, and .xls files.[2][1]"
Enterprise,T1566,Phishing: Spearphishing Link,"Leviathan has sent spearphishing emails with links, often using a fraudulent lookalike domain and stolen branding.[2][1]"
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Leviathan has utilized techniques like reflective DLL loading to write a DLL into memory and load a shell that provides backdoor access to the victim.[4]
Enterprise,T1090,Proxy: Multi-hop Proxy,Leviathan has used multi-hop proxies to disguise the source of their malicious traffic.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Leviathan has targeted RDP credentials and used it to move through the victim environment.[8]
Enterprise,T1021,Remote Services: SSH,Leviathan used ssh for internal reconnaissance.[8]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Leviathan has used stolen code signing certificates to sign malware.[3][8]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Leviathan has used regsvr32 for execution.[2]
Enterprise,T1204,User Execution: Malicious Link,Leviathan has sent spearphishing email links attempting to get a user to click.[2][1]
Enterprise,T1204,User Execution: Malicious File,Leviathan has sent spearphishing attachments attempting to get a user to click.[2][1]
Enterprise,T1078,Valid Accounts,Leviathan has obtained valid accounts to gain initial access.[1][4]
Enterprise,T1102,Web Service: One-Way Communication,Leviathan has received C2 instructions from user profiles created on legitimate websites such as Github and TechNet.[3]
Enterprise,T1047,Windows Management Instrumentation,Leviathan has used WMI for execution.[2]
Enterprise,T1087,Account Discovery,APT29 obtained a list of users and their roles from an Exchange server using Get-ManagementRoleAssignment.[12]
Enterprise,T1087,Domain Account,APT29 has used PowerShell to discover domain accounts by executing Get-ADUser and Get-DGroupMember.[17][14]
Enterprise,T1087,Cloud Account,APT29 has conducted enumeration of Azure AD accounts.[25]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT29 has used HTTP for C2 and data exfiltration.[12]
Enterprise,T1560,Archive Collected Data: Archive via Utility,APT29 used 7-Zip to compress stolen emails into password-protected archives prior to exfiltration.[12][29][17]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,APT29 added Registry Run keys to establish persistence.[24]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,APT29 drops a Windows shortcut file for execution.[30]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"APT29 has used encoded PowerShell scripts uploaded to CozyCar installations to download and install SeaDuke. APT29 also used PowerShell to create new tasks on remote machines, identify configuration settings, evade defenses, exfiltrate data, and to execute other commands.[12][31][32][24][30][17][33][15]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,APT29 used cmd.exe to execute commands on remote machines.[12][31]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,APT29 has written malware variants in Visual Basic.[13]
Enterprise,T1059,Command and Scripting Interpreter: Python,APT29 has developed malware variants written in Python.[22]
Enterprise,T1555,Credentials from Password Stores,APT29 used account credentials they obtained to attempt access to Group Managed Service Account (gMSA) passwords.[29]
Enterprise,T1555,Credentials from Web Browsers,APT29 has stolen user's saved passwords from Chrome.[17]
Enterprise,T1005,Data from Local System,APT29 has extracted files from compromised networks.[12]
Enterprise,T1074,Data Staged: Remote Data Staging,APT29 staged data and files in password-protected archives on a victim's OWA server.[12]
Enterprise,T1140,Deobfuscate/Decode Files or Information,APT29 used 7-Zip to decode its Raindrop malware.[36]
Enterprise,T1573,Encrypted Channel,APT29 has used multiple layers of encryption within malware to protect C2 communication.[15]
Enterprise,T1083,File and Directory Discovery,APT29 obtained information about the configured Exchange virtual directory using Get-WebServicesVirtualDirectory.[12]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,APT29 used the service control manager on a remote system to disable services associated with security monitoring products.[29]
Enterprise,T1562,Impair Defenses: Disable Windows Event Logging,APT29 used AUDITPOL to prevent the collection of audit logs.[29]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,APT29 used netsh to configure firewall rules that limited certain UDP outbound packets.[29]
Enterprise,T1070,Indicator Removal on Host,"APT29 removed evidence of email export requests using Remove-MailboxExportRequest.[12] They temporarily replaced legitimate utilities with their own, executed their payload, and then restored the original file.[9]"
Enterprise,T1070,File Deletion,"APT29 routinely removed their tools, including custom backdoors, once remote access was achieved. APT29 has also used SDelete to remove artifacts from victims.[9][24]"
Enterprise,T1070,Timestomp,APT29 modified timestamps of backdoors to match legitimate Windows files.[29]
Enterprise,T1105,Ingress Tool Transfer,"APT29 has downloaded additional tools, such as TEARDROP malware and Cobalt Strike, to a compromised host following initial access.[9]"
Enterprise,T1036,Masquerading,APT29 has set the hostnames of its C2 infrastructure to match legitimate hostnames in the victim environment. They have also used IP addresses originating from the same country as the victim for their VPN infrastructure.[9]
Enterprise,T1036,Masquerade Task or Service,APT29 named tasks \Microsoft\Windows\SoftwareProtectionPlatform\EventCacheManager in order to appear legitimate.[12]
Enterprise,T1036,Match Legitimate Name or Location,APT29 renamed software and DLL's with legitimate names to appear benign.[12][31][16]
Enterprise,T1027,Obfuscated Files or Information,APT29 has used encoded PowerShell commands.[30]
Enterprise,T1027,Binary Padding,APT29 has used large file sizes to avoid detection.[16]
Enterprise,T1027,Software Packing,APT29 used UPX to pack files.[24]
Enterprise,T1027,HTML Smuggling,APT29 has embedded an ISO file within an HTML attachment that contained JavaScript code to initiate malware execution.[33]
Enterprise,T1588,Obtain Capabilities: Tool,"APT29 has obtained and used a variety of tools including Mimikatz, SDelete, Tor, meek, and Cobalt Strike.[24][3][30]"
Enterprise,T1003,OS Credential Dumping: DCSync,APT29 leveraged privileged accounts to replicate directory service data with domain controllers.[39][29][17]
Enterprise,T1069,Permission Groups Discovery,APT29 used the Get-ManagementRoleAssignment PowerShell cmdlet to enumerate Exchange management role assignments through an Exchange Management Shell.[12]
Enterprise,T1069,Domain Groups,APT29 has used AdFind to enumerate domain groups.[17]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT29 has used spearphishing emails with an attachment to deliver files with exploits to initial victims.[3][30][22][18][33][15]
Enterprise,T1566,Phishing: Spearphishing Link,APT29 has used spearphishing with a link to trick victims into clicking on a link to a zip file containing malicious files.[24][18][42]
Enterprise,T1566,Phishing: Spearphishing via Service,APT29 has used the legitimate mailing service Constant Contact to send phishing e-mails.[13]
Enterprise,T1057,Process Discovery,APT29 has used multiple command-line utilities to enumerate running processes.[12][29][17]
Enterprise,T1090,Proxy: Internal Proxy,"APT29 has used SSH port forwarding capabilities on public-facing systems, and configured at least one instance of Cobalt Strike to use a network pipe over SMB during the 2020 SolarWinds intrusion.[36][17]"
Enterprise,T1090,Proxy: Multi-hop Proxy,"A backdoor used by APT29 created a Tor hidden service to forward traffic from the Tor client to local ports 3389 (RDP), 139 (Netbios), and 445 (SMB) enabling full remote access from outside the network and has also used TOR.[24][25]"
Enterprise,T1090,Proxy: Domain Fronting,APT29 has used the meek domain fronting plugin for Tor to hide the destination of C2 traffic.[24]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,APT29 has used RDP sessions from public-facing systems to internal servers.[17]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT29 has used administrative accounts to connect over SMB to targeted users.[17]
Enterprise,T1021,Remote Services: Windows Remote Management,APT29 has used WinRM via PowerShell to execute command and payloads on remote hosts.[36]
Enterprise,T1018,Remote System Discovery,APT29 has used AdFind to enumerate remote systems.[29]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT29 used scheduler and schtasks to create new tasks on remote hosts as part of lateral movement.[12] They have manipulated scheduled tasks by updating an existing legitimate task to execute their tools and then returned the scheduled task to its original configuration.[9] APT29 also created a scheduled task to maintain SUNSPOT persistence when the host booted during the 2020 SolarWinds intrusion.[11] They previously used named and hijacked scheduled tasks to also establish persistence.[24]
Enterprise,T1553,Subvert Trust Controls: Code Signing,APT29 was able to get SUNBURST signed by SolarWinds code signing certificates by injecting the malware into the SolarWinds Orion software lifecycle.[9]
Enterprise,T1553,Subvert Trust Controls: Mark-of-the-Web Bypass,APT29 has embedded ISO images and VHDX files in HTML to evade Mark-of-the-Web.[33]
Enterprise,T1218,System Binary Proxy Execution: Mshta,APT29 has use mshta to execute malicious scripts on a compromised host.[33]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,APT29 has used Rundll32.exe to execute payloads.[26][29][30]
Enterprise,T1082,System Information Discovery,APT29 used fsutil to check available free space before executing actions that might create large files on disk.[29]
Enterprise,T1016,System Network Configuration Discovery: Internet Connection Discovery,APT29 has used GoldFinder to perform HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request travels through.[10]
Enterprise,T1204,User Execution: Malicious Link,APT29 has used various forms of spearphishing attempting to get a user to click on a malicous link.[30][22][18][42]
Enterprise,T1204,User Execution: Malicious File,"APT29 has used various forms of spearphishing attempting to get a user to open attachments, including, but not limited to, malicious Microsoft Word documents, .pdf, and .lnk files. [3] [30][22][33][15]"
Enterprise,T1078,Valid Accounts,APT29 used different compromised credentials for remote access and to move laterally.[9][10][13]
Enterprise,T1078,Domain Accounts,"APT29 has used valid accounts, including administrator accounts, to help facilitate lateral movement on compromised networks.[22][23][17]"
Enterprise,T1078,Local Accounts,APT29 has used compromised local accounts to access victims' networks.[17]
Enterprise,T1078,Cloud Accounts,APT29 has used a compromised O365 administrator account to create a new Service Principal.[17]
Enterprise,T1102,Web Service: Bidirectional Communication,APT29 has used social media platforms to hide communications to C2 servers.[22]
Enterprise,T1047,Windows Management Instrumentation,APT29 used WMI to steal credentials and execute backdoors at a future time.[24] They have also used WMI for the remote execution of files for lateral movement.[39][29]
Enterprise,T1071,Application Layer Protocol,Rocke issued wget requests from infected systems to the C2.[1]
Enterprise,T1071,Web Protocols,Rocke has executed wget and curl commands to Pastebin over the HTTPS protocol.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Rocke used shell scripts to run commands which would obtain persistence and execute the cryptocurrency mining malware.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Rocke has used Python-based malware to install and spread their coinminer.[2]
Enterprise,T1543,Create or Modify System Process: Systemd Service,Rocke has installed a systemd service script to maintain persistence.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Rocke has extracted tar.gz files after downloading them from a C2 server.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"Rocke downloaded a file ""libprocesshider"", which could hide files on the target system.[1][3]"
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,Rocke has modified /etc/ld.so.preload to hook libc functions in order to hide the installed dropper and mining software in process lists.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Rocke used scripts which detected and uninstalled antivirus software.[1][3]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Rocke used scripts which killed processes and added firewall rules to block traffic related to other cryptominers.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Linux or Mac System Logs,Rocke has cleared log files within the /var/log/ folder.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Rocke has deleted files on infected machines.[2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Rocke has changed the time stamp of certain files.[2]
Enterprise,T1105,Ingress Tool Transfer,Rocke used malware to download additional malicious files to the target system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Rocke has used shell scripts which download mining executables and saves them with the filename ""java"".[1]"
Enterprise,T1027,Obfuscated Files or Information,Rocke has modified UPX headers after packing files to break unpackers.[2]
Enterprise,T1027,Software Packing,Rocke's miner has created UPX-packed files in the Windows Start Menu Folder.[1][3][2]
Enterprise,T1027,Compile After Delivery,"Rocke has compiled malware, delivered to victims as .c files, with the GNU Compiler Collection (GCC).[2]"
Enterprise,T1057,Process Discovery,Rocke can detect a running process's PID on the infected machine.[2]
Enterprise,T1055,Process Injection: Portable Executable Injection,"Rocke's miner, ""TermsHost.exe"", evaded defenses by injecting itself into Windows processes, including Notepad.exe.[1]"
Enterprise,T1021,Remote Services: SSH,Rocke has spread its coinminer via SSH.[2]
Enterprise,T1018,Remote System Discovery,Rocke has looked for IP addresses in the known_hosts file on the infected system and attempted to SSH into them.[1]
Enterprise,T1053,Scheduled Task/Job: Cron,Rocke installed a cron job that downloaded and executed files from the C2.[1][3][2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Rocke used scripts which detected and uninstalled antivirus software.[1][3]
Enterprise,T1082,System Information Discovery,Rocke has used uname -m to collect the name and information about the infected system's kernel.[2]
Enterprise,T1102,Web Service,"Rocke has used Pastebin, Gitee, and GitLab for Command and Control.[2][1]"
Enterprise,T1102,Dead Drop Resolver,Rocke has used Pastebin to check the version of beaconing malware and redirect to another Pastebin hosting updated malware.[2]
Enterprise,T1105,Ingress Tool Transfer,The Ritsol backdoor trojan used by Elderwood can download files onto a compromised host from a remote location.[4]
Enterprise,T1027,Obfuscated Files or Information,Elderwood has encrypted documents and malicious executables.[2]
Enterprise,T1027,Software Packing,Elderwood has packed malware payloads before delivery to victims.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing malicious attachments.[2][3]
Enterprise,T1566,Phishing: Spearphishing Link,Elderwood has delivered zero-day exploits and malware to victims via targeted emails containing a link to malicious content hosted on an uncommon Web server.[2][3]
Enterprise,T1204,User Execution: Malicious Link,Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open links.[2][3]
Enterprise,T1204,User Execution: Malicious File,Elderwood has leveraged multiple types of spearphishing in order to attempt to get a user to open attachments.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Indrik Spider has used PowerShell Empire for execution of malware.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Indrik Spider has used batch scripts on victim's machines.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Indrik Spider has used malicious JavaScript files for several components of their attack.[4]
Enterprise,T1074,Data Staged: Local Data Staging,Indrik Spider has stored collected date in a .tmp file.[4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Indrik Spider used PsExec to leverage Windows Defender to disable scanning of all downloaded files and to restrict real-time monitoring.[4]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Indrik Spider has used Cobalt Strike to empty log files.[4]
Enterprise,T1105,Ingress Tool Transfer,"Indrik Spider has downloaded additional scripts, malware, and tools onto a compromised host.[1][4]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Indrik Spider used fake updates for FlashPlayer plugin and Google Chrome as initial infection vectors.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Indrik Spider used Cobalt Strike to carry out credential dumping using ProcDump.[4]
Enterprise,T1018,Remote System Discovery,"Indrik Spider has used PowerView to enumerate all Windows Server, Windows Server 2003, and Windows 7 instances in the Active Directory database.[4]"
Enterprise,T1204,User Execution: Malicious File,Indrik Spider has attempted to get users to click on a malicious zipped file.[4]
Enterprise,T1078,Valid Accounts: Domain Accounts,"Indrik Spider has collected credentials from infected systems, including domain accounts.[1]"
Enterprise,T1047,Windows Management Instrumentation,Indrik Spider has used WMIC to execute commands on remote computers.[4]
Enterprise,T1059,Command and Scripting Interpreter,Windigo has used a Perl script for information gathering.[3]
Enterprise,T1005,Data from Local System,Windigo has used a script to gather credentials in files left on disk by OpenSSH backdoors.[3]
Enterprise,T1083,File and Directory Discovery,Windigo has used a script to check for the presence of files created by OpenSSH backdoors.[3]
Enterprise,T1090,Proxy,Windigo has delivered a generic Windows proxy Win32/Glubteta.M. Windigo has also used multiple reverse proxy chains as part of their C2 infrastructure.[1]
Enterprise,T1518,Software Discovery,Windigo has used a script to detect installed software on targeted systems.[3]
Enterprise,T1082,System Information Discovery,Windigo has used a script to detect which Linux distribution and version is currently installed on the system.[3]
Enterprise,T1105,Ingress Tool Transfer,PLATINUM has transferred files using the Intel® Active Management Technology (AMT) Serial-over-LAN (SOL) channel.[2]
Enterprise,T1056,Input Capture: Keylogging,PLATINUM has used several different keyloggers.[1]
Enterprise,T1056,Input Capture: Credential API Hooking,PLATINUM is capable of using Windows hook interfaces for information gathering such as credential access.[1]
Enterprise,T1036,Masquerading,PLATINUM has renamed rar.exe to avoid detection.[3]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,PLATINUM has used keyloggers that are also capable of dumping credentials.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,PLATINUM has sent spearphishing emails with attachments to victims as its primary initial access vector.[1]
Enterprise,T1055,Process Injection,PLATINUM has used various methods of process injection including hot patching.[1]
Enterprise,T1204,User Execution: Malicious File,PLATINUM has attempted to get users to open malicious files by sending spearphishing emails with attachments to victims.[1]
Enterprise,T1087,Account Discovery: Local Account,APT32 enumerated administrative users using the commands net localgroup administrators.[7]
Enterprise,T1071,Application Layer Protocol: Web Protocols,APT32 has used JavaScript that communicates over HTTP or HTTPS to attacker controlled domains to download additional frameworks. The group has also used downloaded encrypted payloads over HTTP.[2][7]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,APT32 has used email for C2 via an Office macro.[4][7]
Enterprise,T1560,Archive Collected Data,APT32's backdoor has used LZMA compression and RC4 encryption before exfiltration.[5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"APT32 established persistence using Registry Run keys, both to execute PowerShell and VBS scripts as well as to execute their backdoor directly.[4][7][5]"
Enterprise,T1059,Command and Scripting Interpreter,APT32 has used COM scriptlets to download Cobalt Strike beacons.[7]
Enterprise,T1059,PowerShell,"APT32 has used PowerShell-based tools, PowerShell one-liners, and shellcode loaders for execution.[1][4][7]"
Enterprise,T1059,Windows Command Shell,APT32 has used cmd.exe for execution.[7]
Enterprise,T1059,Visual Basic,"APT32 has used macros, COM scriptlets, and VBS scripts.[4][7]"
Enterprise,T1059,JavaScript,APT32 has used JavaScript for drive-by downloads and C2 communications.[7][8]
Enterprise,T1543,Create or Modify System Process: Windows Service,APT32 modified Windows Services to ensure PowerShell scripts were loaded on the system. APT32 also creates a Windows service to establish persistence.[3][7][5]
Enterprise,T1041,Exfiltration Over C2 Channel,APT32's backdoor has exfiltrated data using the already opened channel with its C&C server.[5]
Enterprise,T1083,File and Directory Discovery,APT32's backdoor possesses the capability to list files and directories on a machine. [5]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,APT32's macOS backdoor hides the clientID file via a chflags function.[9]
Enterprise,T1564,Hide Artifacts: Hidden Window,APT32 has used the WindowStyle parameter to conceal PowerShell windows. [1] [7]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,APT32 used NTFS alternate data streams to hide their payloads.[7]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"APT32 ran legitimately-signed executables from Symantec and McAfee which load a malicious DLL. The group also side-loads its backdoor by dropping a library and a legitimate, signed executable (AcroTranscoder).[4][7][5]"
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,APT32 has cleared select event log entries.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"APT32's macOS backdoor can receive a ""delete"" command.[9]"
Enterprise,T1070,Indicator Removal on Host: Timestomp,"APT32 has used scheduled task raw XML with a backdated timestamp of June 2, 2016. The group has also set the creation time of the files dropped by the second stage of the exploit to match the creation time of kernel32.dll. Additionally, APT32 has used a random value to modify the timestamp of the file storing the clientID.[1][5][9]"
Enterprise,T1105,Ingress Tool Transfer,APT32 has added JavaScript to victim websites to download additional frameworks that profile and compromise website visitors.[2]
Enterprise,T1056,Input Capture: Keylogging,APT32 has abused the PasswordChangeNotify to monitor for and capture account password changes.[7]
Enterprise,T1036,Masquerading,APT32 has disguised a Cobalt Strike beacon as a Flash Installer.[7]
Enterprise,T1036,Rename System Utilities,APT32 has moved and renamed pubprn.vbs to a .txt file to avoid detection.[10]
Enterprise,T1036,Masquerade Task or Service,"APT32 has used hidden or non-printing characters to help masquerade service names, such as appending a Unicode no-break space character to a legitimate service name. APT32 has also impersonated the legitimate Flash installer file name ""install_flashplayer.exe"".[1]"
Enterprise,T1036,Match Legitimate Name or Location,APT32 has renamed a NetCat binary to kb-10233.exe to masquerade as a Windows update. APT32 has also renamed a Cobalt Strike beacon payload to install_flashplayers.exe. [7][8]
Enterprise,T1112,Modify Registry,APT32's backdoor has modified the Windows Registry to store the backdoor's configuration. [5]
Enterprise,T1027,Obfuscated Files or Information,"APT32 uses the Invoke-Obfuscation framework to obfuscate their PowerShell and also performs other code obfuscation. APT32 has also encoded payloads using Base64 and a framework called ""Dont-Kill-My-Cat (DKMC). APT32 also encrypts the library used for network exfiltration with AES-256 in CBC mode in their macOS backdoor.[1][11][3][4][7][5][9]"
Enterprise,T1027,Binary Padding,APT32 includes garbage code to mislead anti-malware software and researchers.[3][5]
Enterprise,T1588,Obtain Capabilities: Tool,"APT32 has obtained and used tools such as Mimikatz and Cobalt Strike, and a variety of other open-source tools from GitHub.[1][4]"
Enterprise,T1003,OS Credential Dumping,APT32 used GetPassword_x64 to harvest credentials.[4][7]
Enterprise,T1003,LSASS Memory,APT32 used Mimikatz and customized versions of Windows Credential Dumper to harvest credentials.[4][7]
Enterprise,T1566,Phishing: Spearphishing Attachment,APT32 has sent spearphishing emails with a malicious executable disguised as a document or spreadsheet.[3][4][7][5][12][6]
Enterprise,T1566,Phishing: Spearphishing Link,APT32 has sent spearphishing emails containing malicious links.[3][4][12][8][6]
Enterprise,T1055,Process Injection,APT32 malware has injected a Cobalt Strike beacon into Rundll32.exe.[7]
Enterprise,T1012,Query Registry,APT32's backdoor can query the Windows Registry to gather system information. [5]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,APT32 used Net to use Windows' hidden network shares to copy their tools to remote machines for execution.[7]
Enterprise,T1018,Remote System Discovery,"APT32 has enumerated DC servers using the command net group ""Domain Controllers"" /domain. The group has also used the ping command.[7]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,APT32 has used scheduled tasks to persist on victim systems.[1][4][7][5]
Enterprise,T1218,System Binary Proxy Execution: Mshta,APT32 has used mshta.exe for code execution.[4][7]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,APT32 created a Scheduled Task/Job that used regsvr32.exe to execute a COM scriptlet that dynamically downloaded a backdoor and injected it into memory. The group has also used regsvr32 to run their backdoor.[5][1][7]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,APT32 malware has used rundll32.exe to execute an initial infection process.[7]
Enterprise,T1082,System Information Discovery,"APT32 has collected the OS version and computer name from victims. One of the group's backdoors can also query the Windows Registry to gather system information, and another macOS backdoor performs a fingerprint of the machine on its first connection to the C&C server. APT32 executed shellcode to identify the name of the infected host.[3][5][9][12]"
Enterprise,T1016,System Network Configuration Discovery,APT32 used the ipconfig /all command to gather the IP address from the system.[7]
Enterprise,T1049,System Network Connections Discovery,APT32 used the netstat -anpo tcp command to display TCP connections on the victim's machine.[7]
Enterprise,T1033,System Owner/User Discovery,APT32 collected the victim's username and executed the whoami command on the victim's machine. APT32 executed shellcode to collect the username on the victim's machine. [12][3][7]
Enterprise,T1569,System Services: Service Execution,APT32's backdoor has used Windows services as a way to execute its malicious payload. [5]
Enterprise,T1204,User Execution: Malicious Link,APT32 has lured targets to download a Cobalt Strike beacon by including a malicious link within spearphishing emails.[7][8][6]
Enterprise,T1204,User Execution: Malicious File,APT32 has attempted to lure users to execute a malicious dropper delivered via a spearphishing attachment.[3][4][5][12][6]
Enterprise,T1078,Valid Accounts: Local Accounts,APT32 has used legitimate local admin account credentials.[1]
Enterprise,T1102,Web Service,"APT32 has used Dropbox, Amazon S3, and Google Drive to host malicious downloads.[8]"
Enterprise,T1047,Windows Management Instrumentation,APT32 used WMI to deploy their tools on remote machines and to gather information about the Outlook process.[7]
Enterprise,T1560,Archive Collected Data,Patchwork encrypted the collected files' path with AES and then encoded them with base64.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Patchwork has added the path of its second-stage malware to the startup folder to achieve persistence. One of its file stealers has also persisted by adding a Registry Run key.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Patchwork used PowerSploit to download payloads, run a reverse shell, and execute malware on the victim's machine.[1][3]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Patchwork ran a reverse shell with Meterpreter.[1] Patchwork used JavaScript code and .SCT files on victim machines.[3][4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Patchwork used Visual Basic Scripts (VBS) on victim machines.[3][4]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Patchwork dumped the login data database from \AppData\Local\Google\Chrome\User Data\Default\Login Data.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Patchwork used Base64 to encode C2 traffic.[1]
Enterprise,T1005,Data from Local System,Patchwork collected and exfiltrated files from the infected system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Patchwork copied all targeted files to a directory called index that was eventually uploaded to the C&C server.[3]
Enterprise,T1083,File and Directory Discovery,A Patchwork payload has searched all fixed drives on the victim for files matching a specified list of extensions.[1][3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,A Patchwork .dll that contains BADNEWS is loaded and executed using DLL side-loading.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Patchwork removed certain files and replaced them so they could not be retrieved.[3]
Enterprise,T1105,Ingress Tool Transfer,Patchwork payloads download additional files from the C2 server.[8][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Patchwork installed its payload in the startup programs folder as ""Baidu Software Update."" The group also adds its second stage payload to the startup programs as ""Net Monitor.""[1] They have also dropped QuasarRAT binaries as files named microsoft_network.exe and crome.exe.[4]"
Enterprise,T1112,Modify Registry,A Patchwork payload deletes Resiliency Registry keys created by Microsoft Office applications in an apparent effort to trick users into thinking there were no issues during application runs.[3]
Enterprise,T1027,Obfuscated Files or Information,Patchwork has obfuscated a script with Crypto Obfuscator.[3]
Enterprise,T1027,Binary Padding,Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes.[3]
Enterprise,T1027,Software Packing,A Patchwork payload was packed with UPX.[8]
Enterprise,T1027,Indicator Removal from Tools,Patchwork apparently altered NDiskMonitor samples by adding four bytes of random letters in a likely attempt to change the file hashes.[3]
Enterprise,T1588,Obtain Capabilities: Tool,Patchwork has obtained and used open-source tools such as QuasarRAT.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,Patchwork has used spearphishing with an attachment to deliver files with exploits to initial victims.[1][8][3][4]
Enterprise,T1566,Phishing: Spearphishing Link,"Patchwork has used spearphishing with links to deliver files with exploits to initial victims. The group has also used embedded image tags (known as web bugs) with unique, per-recipient tracking links in their emails for the purpose of identifying which recipients opened messages.[2][3][4][6]"
Enterprise,T1055,Process Injection: Process Hollowing,A Patchwork payload uses process hollowing to hide the UAC bypass vulnerability exploitation inside svchost.exe.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Patchwork attempted to use RDP to move laterally.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,A Patchwork file stealer can run a TaskScheduler DLL to add persistence.[3]
Enterprise,T1518,Software Discovery: Security Software Discovery,"Patchwork scanned the ""Program Files"" directories for a directory with the string ""Total Security"" (the installation path of the ""360 Total Security"" antivirus tool).[1]"
Enterprise,T1553,Subvert Trust Controls: Code Signing,Patchwork has signed malware with self-signed certificates from fictitious and spoofed legitimate software companies.[6]
Enterprise,T1082,System Information Discovery,"Patchwork collected the victim computer name, OS version, and architecture type and sent the information to its C2 server. Patchwork also enumerated all available drives on the victim's machine.[1][3]"
Enterprise,T1033,System Owner/User Discovery,"Patchwork collected the victim username and whether it was running as admin, then sent the information to its C2 server.[1][3]"
Enterprise,T1204,User Execution: Malicious Link,"Patchwork has used spearphishing with links to try to get users to click, download and open malicious files.[2][3][4][6]"
Enterprise,T1204,User Execution: Malicious File,Patchwork embedded a malicious macro in a Word document and lured the victim to click on an icon to execute the malware.[3][4]
Enterprise,T1102,Web Service: Dead Drop Resolver,Patchwork hides base64-encoded and encrypted C2 server locations in comments on legitimate websites.[8]
Enterprise,T1087,Account Discovery: Local Account,Poseidon Group searches for administrator accounts on both the local victim machine and the network.[1]
Enterprise,T1087,Account Discovery: Domain Account,Poseidon Group searches for administrator accounts on both the local victim machine and the network.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,The Poseidon Group's Information Gathering Tool (IGT) includes PowerShell components.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Poseidon Group tools attempt to spoof anti-virus processes as a means of self-defense.[1]
Enterprise,T1003,OS Credential Dumping,"Poseidon Group conducts credential dumping on victims, with a focus on obtaining credentials belonging to domain and database servers.[1]"
Enterprise,T1057,Process Discovery,"After compromising a victim, Poseidon Group lists all running processes.[1]"
Enterprise,T1049,System Network Connections Discovery,Poseidon Group obtains and saves information about victim network interfaces and addresses.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FIN10 has established persistence by using the Registry option in PowerShell Empire to add a Run key.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,FIN10 uses PowerShell for execution as well as PowerShell Empire to establish persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,FIN10 has executed malicious .bat files containing PowerShell commands.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FIN10 has used batch scripts and scheduled tasks to delete critical system files.[1]
Enterprise,T1588,Obtain Capabilities: Tool,FIN10 has relied on publicly-available software to gain footholds and establish persistence in victim environments.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,FIN10 has used RDP to move laterally to systems in the victim environment.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,FIN10 has established persistence by using S4U tasks as well as the Scheduled Task option in PowerShell Empire.[1][2]
Enterprise,T1033,System Owner/User Discovery,FIN10 has used Meterpreter to enumerate users on remote systems.[1]
Enterprise,T1078,Valid Accounts,FIN10 has used stolen credentials to connect remotely to victim networks using VPNs protected with only a single factor.[1]
Enterprise,T1078,Local Accounts,FIN10 has moved laterally using the Local Administrator account.[1]
Enterprise,T1087,Account Discovery: Domain Account,"Wizard Spider has identified domain admins through the use of ""net group ‘Domain admins’"" commands.[7]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Wizard Spider has used HTTP for network communications.[6]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Wizard Spider has established persistence via the Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run and a shortcut within the startup folder.[2][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Wizard Spider has established persistence using Userinit by adding the Registry key HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Wizard Spider has used macros to execute PowerShell scripts to download malware on victim's machines.[6] It has also used PowerShell to execute commands and move laterally through a victim network.[2][4][8]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Wizard Spider has used cmd.exe to execute commands on a victim's machine.[7]
Enterprise,T1543,Create or Modify System Process: Windows Service,Wizard Spider has installed TrickBot as a service named ControlServiceA in order to establish persistence.[6]
Enterprise,T1074,Data Staged,"Wizard Spider has collected and staged credentials and network enumeration information, using the networkdll and psfin TrickBot modules.[6]"
Enterprise,T1041,Exfiltration Over C2 Channel,Wizard Spider has exfiltrated domain credentials and network enumeration information over command and control (C2) channels.[6]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Wizard Spider has shut down or uninstalled security applications on victim systems that might prevent ransomware from executing.[2][4][7]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Wizard Spider has used file deletion to remove some modules and configurations from an infected host after use.[6]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Wizard Spider has used scheduled tasks to install TrickBot, using task names to appear legitimate such as WinDotNet, GoogleTask, or Sysnetsf.[6] It has also used common document file names for other malware binaries.[4]"
Enterprise,T1112,Modify Registry,Wizard Spider has modified the Registry key HKLM\System\CurrentControlSet\Control\SecurityProviders\WDigest by setting the UseLogonCredential registry value to 1 in order to force credentials to be stored in clear text in memory.[6]
Enterprise,T1027,Obfuscated Files or Information,Wizard Spider used Base64 encoding to obfuscate an Empire service and PowerShell commands.[5][7]
Enterprise,T1588,Obtain Capabilities: Tool,"Wizard Spider has obtained and used publicly-available post-exploitation frameworks and tools like Metasploit, Empire, Mimikatz.[4]"
Enterprise,T1588,Obtain Capabilities: Code Signing Certificates,Wizard Spider obtained a code signing certificate signed by Digicert for some of its malware.[9]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Wizard Spider has acquired credentials from the SAM/SECURITY registry hives.[4]
Enterprise,T1003,OS Credential Dumping: NTDS,Wizard Spider has gained access to credentials via exported copies of the ntds.dit Active Directory database.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,"Wizard Spider has used spearphishing attachments to deliver Microsoft documents containing macros or PDFs containing malicious links to download either Emotet, Bokbot, TrickBot, or Bazar.[6][8]"
Enterprise,T1566,Phishing: Spearphishing Link,Wizard Spider has sent phishing emails containing a link to an actor-controlled Google Drive document or other free online file hosting services.[2][9]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"Wizard Spider has injected malicious DLLs into memory with read, write, and execute permissions.[2][9]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Wizard Spider has used RDP for lateral movement.[6][2][9]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Wizard Spider has used SMB to drop Cobalt Strike Beacon on a domain controller for lateral movement.[9][7]
Enterprise,T1021,Remote Services: Windows Remote Management,Wizard Spider has used Window Remote Management to move laterally through a victim network.[2]
Enterprise,T1018,Remote System Discovery,"Wizard Spider has used networkdll for network discovery and psfin specifically for financial and point of sale indicators. Wizard Spider has also used AdFind and nltest/dclist to enumerate domain computers, including the domain controller.[5][6][4][8][7]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Wizard Spider has used scheduled tasks establish persistence for TrickBot and other malware.[6][2][4][9]
Enterprise,T1518,Software Discovery: Security Software Discovery,Wizard Spider has used WMI to identify anti-virus products installed on a victim's machine.[7]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Wizard Spider has used Digicert code-signing certificates for some of its malware.[9]
Enterprise,T1082,System Information Discovery,"Wizard Spider has used ""systeminfo"" and similar commands to acquire detailed configuration information of a victim machine.[7]"
Enterprise,T1016,System Network Configuration Discovery,"Wizard Spider has used ""ipconfig"" to identify the network configuration of a victim machine.[11]"
Enterprise,T1033,System Owner/User Discovery,"Wizard Spider has used ""whoami"" to identify the local user and their privileges.[11]"
Enterprise,T1569,System Services: Service Execution,Wizard Spider has used services.exe to execute scripts and executables during lateral movement within a victim network.[7][10]
Enterprise,T1204,User Execution: Malicious Link,Wizard Spider has lured victims into clicking a malicious link delivered through spearphishing.[2]
Enterprise,T1204,User Execution: Malicious File,"Wizard Spider has lured victims to execute malware with spearphishing attachments containing macros to download either Emotet, Bokbot, TrickBot, or Bazar.[6][3]"
Enterprise,T1078,Valid Accounts,Wizard Spider has used valid credentials for privileged accounts with the goal of accessing domain controllers.[6]
Enterprise,T1078,Domain Accounts,"Wizard Spider has used administrative accounts, including Domain Admin, to move laterally within a victim network.[4]"
Enterprise,T1047,Windows Management Instrumentation,Wizard Spider has used WMI and LDAP queries for network discovery and to move laterally.[6][2][4][8]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,TA459 has used PowerShell for execution of a payload.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,TA459 has a VBScript for execution.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,TA459 has targeted victims using spearphishing emails with malicious Microsoft Word attachments.[1]
Enterprise,T1204,User Execution: Malicious File,TA459 has attempted to get victims to open malicious Microsoft Word attachment sent via spearphishing.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Several tools used by Suckfly have been command-line driven.[2]
Enterprise,T1003,OS Credential Dumping,Suckfly used a signed credential-dumping tool to obtain victim account credentials.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Suckfly has used stolen certificates to sign its malware.[1]
Enterprise,T1078,Valid Accounts,Suckfly used legitimate account credentials that they dumped to navigate the internal victim network as though they were the legitimate account owner.[2]
Enterprise,T1036,Masquerading: Right-to-Left Override,"Ferocious Kitten has used right-to-left override to reverse executables’ names to make them appear to have different file extensions, rather than their real ones.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Ferocious Kitten has named malicious files update.exe and loaded them into the compromise host's ""Public"" folder.[1]"
Enterprise,T1588,Obtain Capabilities: Tool,"Ferocious Kitten has obtained open source tools for its operations, including JsonCPP and Psiphon.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Ferocious Kitten has conducted spearphishing campaigns containing malicious documents to lure victims to open the attachments.[1]
Enterprise,T1204,User Execution: Malicious File,Ferocious Kitten has attempted to convince victims to enable malicious content within a spearphishing email by including an odd decoy message.[1]
Enterprise,T1071,Application Layer Protocol: DNS,LazyScripter has leveraged dynamic DNS providers for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,LazyScripter has achieved persistence via writing a PowerShell script to the autorun registry key.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,LazyScripter has used PowerShell scripts to execute malicious code.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,LazyScripter has used batch files to deploy open-source and multi-stage RATs.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,LazyScripter has used VBScript to execute malicious code.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,LazyScripter has used JavaScript in its attacks.[1]
Enterprise,T1105,Ingress Tool Transfer,LazyScripter had downloaded additional tools to a compromised host.[1]
Enterprise,T1036,Masquerading,LazyScripter has used several different security software icons to disguise executables.[1]
Enterprise,T1027,Obfuscated Files or Information,LazyScripter has leveraged the BatchEncryption tool to perform advanced batch obfuscation and encoding techniques.[1]
Enterprise,T1588,Obtain Capabilities: Malware,LazyScripter has used a variety of open-source remote access Trojans for its operations.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,LazyScripter has used spam emails weaponized with archive or document files as its initial infection vector.[1]
Enterprise,T1566,Phishing: Spearphishing Link,LazyScripter has used spam emails that contain a link that redirects the victim to download a malicious document.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,LazyScripter has used mshta.exe to execute Koadic stagers.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,LazyScripter has used rundll32.exe to execute Koadic stagers.[1]
Enterprise,T1204,User Execution: Malicious Link,LazyScripter has relied upon users clicking on links to malicious files.[1]
Enterprise,T1204,User Execution: Malicious File,LazyScripter has lured users to open malicious email attachments.[1]
Enterprise,T1102,Web Service,LazyScripter has used GitHub to host its payloads to operate spam campaigns.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Mustang Panda has communicated with its C2 via HTTP POST requests.[2][3][5][7]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Mustang Panda has used RAR to create password-protected archives of collected documents prior to exfiltration.[3][8]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Mustang Panda has encrypted documents with RC4 prior to exfiltration.[8]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Mustang Panda has created the registry key HKEY_LOCAL_MACHINE\SOFTWARE\Wow6432Node\Microsoft\Windows\CurrentVersion\Run\AdobelmdyU to maintain persistence.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Mustang Panda has used malicious PowerShell scripts to enable execution.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Mustang Panda has executed HTA files via cmd.exe, and used batch scripts for collection.[2][8]"
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Mustang Panda has embedded VBScript components in LNK files to download additional files and automate collection.[1][2][3]
Enterprise,T1074,Data Staged: Local Data Staging,Mustang Panda has stored collected credential files in c:\windows\temp prior to exfiltration. Mustang Panda has also stored documents for exfiltration in a hidden folder on USB drives.[3][8]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Mustang Panda has encrypted C2 communications with RC4.[5]
Enterprise,T1083,File and Directory Discovery,"Mustang Panda has searched the entire target system for DOC, DOCX, PPT, PPTX, XLS, XLSX, and PDF files.[8]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Mustang Panda's PlugX variant has created a hidden folder on USB drives named RECYCLE.BIN to store malicious executables and collected data.[8]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Mustang Panda has used a legitimately signed executable to execute a malicious payload within a DLL file.[2][5][4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Mustang Panda will delete their tools and files, and kill processes after their objectives are reached.[3]"
Enterprise,T1105,Ingress Tool Transfer,Mustang Panda has downloaded additional executables following the initial infection stage.[5]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Mustang Panda has used names like adobeupdate.dat and PotPlayerDB.dat to disguise PlugX, and a file named OneDrive.exe to load a Cobalt Strike payload.[5]"
Enterprise,T1036,Masquerading: Double File Extension,Mustang Panda has used an additional filename extension to hide the true file type.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Mustang Panda has delivered initial payloads hidden using archives and encoding measures.[1][2][3][5][4][6]
Enterprise,T1027,Binary Padding,Mustang Panda has used junk code within their DLL files to hinder analysis.[8]
Enterprise,T1003,OS Credential Dumping: NTDS,Mustang Panda has used vssadmin to create a volume shadow copy and retrieve the NTDS.dit file. Mustang Panda has also used reg save on the SYSTEM file Registry location to help extract the NTDS.dit file.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Mustang Panda has used spearphishing attachments to deliver initial access payloads.[5][4][9]
Enterprise,T1566,Phishing: Spearphishing Link,Mustang Panda has delivered web bugs and malicious links to their intended targets.[7][6]
Enterprise,T1057,Process Discovery,Mustang Panda has used tasklist /v to determine active process information.[8]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Mustang Panda has created a scheduled task to execute additional malicious software, as well as maintain persistence.[2][3][7]"
Enterprise,T1518,Software Discovery,Mustang Panda has searched the victim system for the InstallUtil.exe program and its version.[2]
Enterprise,T1218,System Binary Proxy Execution: InstallUtil,Mustang Panda has used InstallUtil.exe to execute a malicious Beacon stager.[2]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Mustang Panda has used mshta.exe to launch collection scripts.[3]
Enterprise,T1082,System Information Discovery,Mustang Panda has gathered system information using systeminfo.[8]
Enterprise,T1016,System Network Configuration Discovery,Mustang Panda has used ipconfig and arp to determine network configuration information.[8]
Enterprise,T1049,System Network Connections Discovery,Mustang Panda has used netstat -ano to determine network connection information.[8]
Enterprise,T1204,User Execution: Malicious Link,Mustang Panda has sent malicious links including links directing victims to a Google Drive folder.[1][7][6]
Enterprise,T1204,User Execution: Malicious File,Mustang Panda has sent malicious files requiring direct victim interaction to execute.[1][2][8][5][9][6]
Enterprise,T1102,Web Service,Mustang Panda has used DropBox URLs to deliver variants of PlugX.[6]
Enterprise,T1047,Windows Management Instrumentation,Mustang Panda has executed PowerShell scripts via WMI.[2][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Windshift has used tools that communicate with C2 over HTTP.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Windshift has created LNK files in the Startup folder to establish persistence.[4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Windshift has used Visual Basic 6 (VB6) payloads.[4]
Enterprise,T1105,Ingress Tool Transfer,Windshift has used tools to deploy additional payloads to compromised hosts.[4]
Enterprise,T1036,Masquerading,"Windshift has used icons mimicking MS Office files to mask malicious executables.[2] Windshift has also attempted to hide executables by changing the file extension to "".scr"" to mimic Windows screensavers.[4]"
Enterprise,T1036,Invalid Code Signature,Windshift has used revoked certificates to sign malware.[2][1]
Enterprise,T1027,Obfuscated Files or Information,Windshift has used string encoding with floating point calculations.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,Windshift has sent spearphishing emails with attachment to harvest credentials and deliver malware.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Windshift has sent spearphishing emails with links to harvest credentials and deliver malware.[1]
Enterprise,T1566,Phishing: Spearphishing via Service,Windshift has used fake personas on social media to engage and target victims.[1]
Enterprise,T1057,Process Discovery,Windshift has used malware to enumerate active processes.[4]
Enterprise,T1518,Software Discovery,Windshift has used malware to identify installed software.[4]
Enterprise,T1518,Security Software Discovery,Windshift has used malware to identify installed AV and commonly used forensic and malware analysis tools.[4]
Enterprise,T1082,System Information Discovery,Windshift has used malware to identify the computer name of a compromised host.[4]
Enterprise,T1033,System Owner/User Discovery,Windshift has used malware to identify the username on a compromised host.[4]
Enterprise,T1204,User Execution: Malicious Link,Windshift has used links embedded in e-mails to lure victims into executing malicious code.[1]
Enterprise,T1204,User Execution: Malicious File,Windshift has used e-mail attachments to lure victims into executing malicious code.[1]
Enterprise,T1047,Windows Management Instrumentation,Windshift has used WMI to collect information about target machines.[4]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Aquatic Panda has used WinRAR to compress memory dumps prior to exfiltration.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Aquatic Panda has downloaded additional scripts and executed Base64 encoded commands in PowerShell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Aquatic Panda has attempted and failed to run Bash commands on a Windows host by passing them to cmd /C.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"Aquatic Panda has used DLL search-order hijacking to load exe, dll, and dat files into memory.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Aquatic Panda has attempted to stop endpoint detection and response (EDR) tools on compromised systems.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Aquatic Panda has deleted malicious executables from compromised machines.[1]
Enterprise,T1105,Ingress Tool Transfer,Aquatic Panda has downloaded additional malware onto compromised hosts.[1]
Enterprise,T1027,Obfuscated Files or Information,Aquatic Panda has encoded commands in Base64.[1]
Enterprise,T1588,Obtain Capabilities: Malware,Aquatic Panda has acquired and used njRAT in its operations.[1]
Enterprise,T1588,Obtain Capabilities: Tool,Aquatic Panda has acquired and used Cobalt Strike in its operations.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Aquatic Panda has attempted to harvest credentials through LSASS memory dumping.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Aquatic Panda has attempted to discover third party endpoint detection and response (EDR) tools on compromised systems.[1]
Enterprise,T1082,System Information Discovery,Aquatic Panda has used native OS commands to understand privilege levels and system details.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SamSam uses custom batch scripts to execute some of its components.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SamSam has been seen deleting its own files and payloads to make analysis of the attack more difficult.[3]
Enterprise,T1027,Obfuscated Files or Information,SamSam has been seen using AES or DES to encrypt payloads and payload components.[3][2]
Enterprise,T1027,Binary Padding,SamSam has used garbage code to pad some of its malware components.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,WEBC2 can open an interactive command shell.[2]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"Variants of WEBC2 achieve persistence by using DLL search order hijacking, usually by copying the DLL file to %SYSTEMROOT% (C:\WINDOWS\ntshrui.dll).[1]"
Enterprise,T1105,Ingress Tool Transfer,WEBC2 can download and execute a file.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BabyShark has added a Registry key to ensure all future macros are enabled for Microsoft Word and Excel as well as for additional persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BabyShark has used cmd.exe to execute commands.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,BabyShark has encoded data using certutil before exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BabyShark has the ability to decode downloaded files prior to execution.[2]
Enterprise,T1083,File and Directory Discovery,"BabyShark has used dir to search for ""programfiles"" and ""appdata"".[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,BabyShark has cleaned up all files associated with the secondary payload execution.[3]
Enterprise,T1105,Ingress Tool Transfer,BabyShark has downloaded additional files from the C2.[3][2]
Enterprise,T1056,Input Capture: Keylogging,BabyShark has a PowerShell-based remote administration ability that can implement a PowerShell or C# based keylogger.[3]
Enterprise,T1057,Process Discovery,BabyShark has executed the tasklist command.[1]
Enterprise,T1012,Query Registry,BabyShark has executed the reg query command for HKEY_CURRENT_USER\Software\Microsoft\Terminal Server Client\Default.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,BabyShark has used scheduled tasks to maintain persistence.[4]
Enterprise,T1218,System Binary Proxy Execution: Mshta,BabyShark has used mshta.exe to download and execute applications from a remote server.[2]
Enterprise,T1082,System Information Discovery,BabyShark has executed the ver command.[1]
Enterprise,T1016,System Network Configuration Discovery,BabyShark has executed the ipconfig /all command.[1]
Enterprise,T1033,System Owner/User Discovery,BabyShark has executed the whoami command.[1]
Enterprise,T1087,Account Discovery: Local Account,"Epic gathers a list of all user accounts, privilege classes, and time of last logon.[2]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Epic uses HTTP and HTTPS for C2 communications.[1][2]
Enterprise,T1560,Archive Collected Data,Epic encrypts collected data using a public key framework before sending it over the C2 channel.[1] Some variants encrypt the collected data with AES and encode it with base64 before transmitting it to the C2 server.[2]
Enterprise,T1560,Archive via Library,Epic compresses the collected data with bzip2 before sending it to the C2 server.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Epic encrypts commands from the C2 server using a hardcoded key.[1]
Enterprise,T1083,File and Directory Discovery,"Epic recursively searches for all .doc files on the system and collects a directory listing of the Desktop, %TEMP%, and %WINDOWS%\Temp directories.[1][2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Epic has a command to delete a file from the machine.[2]
Enterprise,T1027,Obfuscated Files or Information,Epic heavily obfuscates its code to make analysis more difficult.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Epic gathers information on local group names.[2]
Enterprise,T1057,Process Discovery,Epic uses the tasklist /v command to obtain a list of processes.[1][2]
Enterprise,T1055,Process Injection: Extra Window Memory Injection,Epic has overwritten the function pointer in the extra window memory of Explorer's Shell_TrayWnd in order to execute malicious code in the context of the explorer.exe process.[3]
Enterprise,T1012,Query Registry,Epic uses the rem reg query command to obtain values from Registry keys.[1]
Enterprise,T1018,Remote System Discovery,Epic uses the net view command on the victim’s machine.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Epic searches for anti-malware services running on the victim’s machine and terminates itself if it finds them.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Turla has used valid digital certificates from Sysprint AG to sign its Epic dropper.[1]
Enterprise,T1082,System Information Discovery,"Epic collects the OS version, hardware information, computer name, available system memory status, disk space information, and system and user language settings.[2]"
Enterprise,T1016,System Network Configuration Discovery,Epic uses the nbtstat -n and nbtstat -s commands on the victim’s machine.[1]
Enterprise,T1049,System Network Connections Discovery,"Epic uses the net use, net session, and netstat commands to gather information on network connections.[1][2]"
Enterprise,T1033,System Owner/User Discovery,Epic collects the user name from the victim’s machine.[2]
Enterprise,T1124,System Time Discovery,Epic uses the net time command to get the system time from the machine and collect the current date and time zone information.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Hikit has used HTTP for C2.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Hikit has the ability to create a remote shell and run given commands.[3]
Enterprise,T1005,Data from Local System,Hikit can upload files from compromised machines.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Hikit performs XOR encryption.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Hikit has used DLL Search Order Hijacking to load oci.dll as a persistence mechanism.[2]
Enterprise,T1105,Ingress Tool Transfer,Hikit has the ability to download files to a compromised host.[1]
Enterprise,T1566,Phishing,Hikit has been spread through spear phishing.[1]
Enterprise,T1090,Proxy: Internal Proxy,Hikit supports peer connections.[1]
Enterprise,T1553,Subvert Trust Controls: Install Root Certificate,Hikit uses certmgr.exe -add GlobalSign.cer -c -s -r localMachine Root and certmgr.exe -add GlobalSign.cer -c -s -r localMachineTrustedPublisher to install a self-generated certificate to the local trust store as a root CA and Trusted Publisher.[3]
Enterprise,T1553,Subvert Trust Controls: Code Signing Policy Modification,Hikit has attempted to disable driver signing verification by tampering with several Registry keys prior to the loading of a rootkit driver component.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,TrailBlazer has used HTTP requests for C2.[1]
Enterprise,T1036,Masquerading,TrailBlazer has used filenames that match the name of the compromised system in attempt to avoid detection.[1]
Enterprise,T1090,Proxy: Domain Fronting,meek uses Domain Fronting to disguise the destination of network traffic as another server that is hosted in the same Content Delivery Network (CDN) as the intended destination.
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,LoJax has modified the Registry key ‘HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\BootExecute’ from ‘autocheck autochk ’ to ‘autocheck autoche ’ in order to execute its payload during Windows startup.[1]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,LoJax has loaded an embedded NTFS DXE driver to be able to access and write to NTFS partitions.[1]
Enterprise,T1112,Modify Registry,LoJax has modified the Registry key ‘HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\Session Manager\BootExecute’ from ‘autocheck autochk ’ to ‘autocheck autoche ’.[1]
Enterprise,T1055,Process Injection: Extra Window Memory Injection,Power Loader overwrites Explorer’s Shell_TrayWnd extra window memory to redirect execution to a NTDLL function that is abused to assemble and execute a return-oriented programming (ROP) chain and create a malicious thread within Explorer.exe.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BOOSTWRITE has used a a 32-byte long multi-XOR key to decode data inside its payload.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"BOOSTWRITE has exploited the loading of the legitimate Dwrite.dll file by actually loading the gdi library, which then loads the gdiplus library and ultimately loads the local Dwrite dll.[1]"
Enterprise,T1027,Obfuscated Files or Information,BOOSTWRITE has encoded its payloads using a ChaCha stream cipher with a 256-bit key and 64-bit Initialization vector (IV) to evade detection.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,BOOSTWRITE has been signed by a valid CA.[1]
Enterprise,T1087,Account Discovery: Local Account,SoreFang can collect usernames from the local system via net.exe user.[2]
Enterprise,T1087,Account Discovery: Domain Account,SoreFang can enumerate domain accounts via net.exe user /domain.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SoreFang can use HTTP in C2 communications.[2][1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SoreFang can decode and decrypt exfiltrated data sent to C2.[2]
Enterprise,T1083,File and Directory Discovery,SoreFang has the ability to list directories.[2]
Enterprise,T1105,Ingress Tool Transfer,SoreFang can download additional payloads from C2.[2][1]
Enterprise,T1027,Obfuscated Files or Information,SoreFang has the ability to encode and RC6 encrypt data sent to C2.[2]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,SoreFang can enumerate domain groups by executing net.exe group /domain.[2]
Enterprise,T1057,Process Discovery,SoreFang can enumerate processes on a victim machine through use of Tasklist.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,SoreFang can gain persistence through use of scheduled tasks.[2]
Enterprise,T1082,System Information Discovery,"SoreFang can collect the hostname, operating system configuration, product ID, and disk space on victim machines by executing Systeminfo.[2]"
Enterprise,T1016,System Network Configuration Discovery,"SoreFang can collect the TCP/IP, DNS, DHCP, and network adapter configuration on a compromised host via ipconfig.exe /all.[2]"
Enterprise,T1560,Archive Collected Data,WellMail can archive files on the compromised host.[1]
Enterprise,T1005,Data from Local System,WellMail can exfiltrate files from the victim machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WellMail can decompress scripts received from C2.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,WellMail can use hard coded client and certificate authority certificates to communicate with C2 over mutual TLS.[1][2]
Enterprise,T1105,Ingress Tool Transfer,WellMail can receive data and executable scripts from C2.[1]
Enterprise,T1016,System Network Configuration Discovery,WellMail can identify the IP address of the victim system.[1]
Enterprise,T1033,System Owner/User Discovery,WellMail can identify the current username on the victim system.[1]
Enterprise,T1087,Account Discovery: Local Account,BitPaymer can enumerate the sessions for each user logged onto the infected host.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BitPaymer has set the run key HKCU\Software\Microsoft\Windows\CurrentVersion\Run for persistence.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,BitPaymer has attempted to install itself as a service to maintain persistence.[1]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,BitPaymer has copied itself to the :bin alternate data stream of a newly created file.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,BitPaymer can modify the timestamp of an executable so that it can be identified and restored by the decryption tool.[1]
Enterprise,T1112,Modify Registry,BitPaymer can set values in the Registry to help in execution.[1]
Enterprise,T1106,Native API,"BitPaymer has used dynamic API resolution to avoid identifiable strings within the binary, including RegEnumKeyW.[1]"
Enterprise,T1027,Obfuscated Files or Information,BitPaymer has used RC4-encrypted strings and string hashes to avoid identifiable strings within the binary.[1]
Enterprise,T1012,Query Registry,BitPaymer can use the RegEnumKeyW to iterate through Registry keys.[1]
Enterprise,T1018,Remote System Discovery,BitPaymer can use net view to discover remote systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PolyglotDuke has has used HTTP GET requests in C2 communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,PolyglotDuke can use a custom algorithm to decrypt strings used by the malware.[1]
Enterprise,T1105,Ingress Tool Transfer,PolyglotDuke can retrieve payloads from the C2 server.[1]
Enterprise,T1112,Modify Registry,PolyglotDuke can write encrypted JSON configuration files to the Registry.[1]
Enterprise,T1106,Native API,PolyglotDuke can use LoadLibraryW and CreateProcess to load and execute code.[1]
Enterprise,T1027,Obfuscated Files or Information,PolyglotDuke can custom encrypt strings.[1]
Enterprise,T1027,Steganography,PolyglotDuke can use steganography to hide C2 information in images.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,PolyglotDuke can be executed using rundll32.exe.[1]
Enterprise,T1102,Web Service: Dead Drop Resolver,"PolyglotDuke can use Twitter, Reddit, Imgur and other websites to get a C2 URL.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,QuietSieve can use HTTPS in C2 communications.[1]
Enterprise,T1005,Data from Local System,QuietSieve can collect files from a compromised host.[1]
Enterprise,T1083,File and Directory Discovery,"QuietSieve can search files on the target host by extension, including doc, docx, xls, rtf, odt, txt, jpg, pdf, rar, zip, and 7z.[1]"
Enterprise,T1564,Hide Artifacts: Hidden Window,QuietSieve has the ability to execute payloads in a hidden window.[1]
Enterprise,T1105,Ingress Tool Transfer,QuietSieve can download and execute payloads on a target host.[1]
Enterprise,T1113,Screen Capture,QuietSieve has taken screenshots every five minutes and saved them to the user's local Application Data folder under Temp\SymbolSourceSymbols\icons or Temp\ModeAuto\icons.[1]
Enterprise,T1016,System Network Configuration Discovery: Internet Connection Discovery,QuietSieve can check C2 connectivity with a ping to 8.8.8.8 (Google public DNS).[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Mivast creates the following Registry entry: HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\Micromedia.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Mivast has the capability to open a remote shell and run basic commands.[2]
Enterprise,T1105,Ingress Tool Transfer,Mivast has the capability to download and execute .exe files.[2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Mivast has the capability to gather NTLM password information.[2]
Enterprise,T1053,Scheduled Task/Job: At,at can be used to schedule a task on a system to be executed at a specific date or time.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,CostaBricks has the ability to use bytecode to decrypt embedded payloads.[1]
Enterprise,T1105,Ingress Tool Transfer,CostaBricks has been used to load SombRAT onto a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,CostaBricks has added the entire unobfuscated code of the legitimate open source application Blink to its code.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,CostaBricks can implement a custom-built virtual machine mechanism to obfuscate its code.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SUPERNOVA had to receive an HTTP GET request containing a specific set of parameters in order to execute.[1][2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,SUPERNOVA has masqueraded as a legitimate SolarWinds DLL.[1][2]
Enterprise,T1027,Obfuscated Files or Information,SUPERNOVA contained Base64-encoded strings.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,EVILNUM can achieve persistence through the Registry Run key.[1][2]
Enterprise,T1041,Exfiltration Over C2 Channel,EVILNUM can upload files over the C2 channel from the infected host.[2]
Enterprise,T1070,Indicator Removal on Host,"EVILNUM has a function called ""DeleteLeftovers"" to remove certain artifacts of the attack.[2]"
Enterprise,T1070,Timestomp,EVILNUM has changed the creation date of files.[2]
Enterprise,T1105,Ingress Tool Transfer,EVILNUM can download and upload files to the victim's computer.[1][2]
Enterprise,T1112,Modify Registry,EVILNUM can make modifications to the Regsitry for persistence.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,EVILNUM can search for anti-virus products on the system.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,EVILNUM can run a remote scriptlet that drops a file and executes it via regsvr32.exe.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,EVILNUM can execute commands and scripts through rundll32.[2]
Enterprise,T1082,System Information Discovery,EVILNUM can obtain the computer name from the victim's system.[2]
Enterprise,T1033,System Owner/User Discovery,EVILNUM can obtain the username from the victim's machine.[2]
Enterprise,T1102,Web Service: One-Way Communication,EVILNUM has used a one-way communication method via GitLab and Digital Point to perform C2.[2]
Enterprise,T1047,Windows Management Instrumentation,EVILNUM has used the Windows Management Instrumentation (WMI) tool to enumerate infected machines.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,AuditCred can open a reverse shell on the system to execute commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,AuditCred is installed as a new service on the system.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,AuditCred uses XOR and RC4 to perform decryption on the code functions.[1]
Enterprise,T1083,File and Directory Discovery,AuditCred can search through folders and files on the system.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,AuditCred can delete files from the system.[1]
Enterprise,T1105,Ingress Tool Transfer,AuditCred can download files and additional malware.[1]
Enterprise,T1027,Obfuscated Files or Information,AuditCred encrypts the configuration.[1]
Enterprise,T1055,Process Injection,AuditCred can inject code from files to other running processes.[1]
Enterprise,T1090,Proxy,AuditCred can utilize proxy for communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,NativeZone can decrypt and decode embedded Cobalt Strike beacon stage shellcode.[1]
Enterprise,T1036,Masquerading,"NativeZone has, upon execution, displayed a message box that appears to be related to a Ukrainian electronic document management system.[2]"
Enterprise,T1218,System Binary Proxy Execution: Rundll32,NativeZone has used rundll32 to execute a malicious DLL.[2]
Enterprise,T1204,User Execution: Malicious File,NativeZone can display an RTF document to the user to enable execution of Cobalt Strike stage shellcode.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,NativeZone has checked if Vmware or VirtualBox VM is running on a compromised host.[1]
Enterprise,T1087,Account Discovery: Email Account,Lizar can collect email accounts from Microsoft Outlook and Mozilla Thunderbird.[1]
Enterprise,T1560,Archive Collected Data,Lizar has encrypted data before sending it to the server.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Lizar has used PowerShell scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Lizar has a command to open the command-line on the infected system.[2][1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Lizar has a module to collect usernames and passwords stored in browsers.[1]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,Lizar has a plugin that can retrieve credentials from Internet Explorer and Microsoft Edge using vaultcmd.exe and another that can collect RDP access credentials using the CredEnumerateW function.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Lizar can decrypt its configuration data.[1]
Enterprise,T1573,Encrypted Channel,Lizar can support encrypted communications between the client and server.[2][1]
Enterprise,T1105,Ingress Tool Transfer,"Lizar can download additional plugins, files, and tools.[1]"
Enterprise,T1106,Native API,Lizar has used various Windows API functions on a victim's machine.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Lizar can run Mimikatz to harvest credentials.[2][1]
Enterprise,T1057,Process Discovery,Lizar has a plugin designed to obtain a list of processes.[2][1]
Enterprise,T1055,Process Injection,Lizar can migrate the loader into another process.[1]
Enterprise,T1055,Dynamic-link Library Injection,Lizar has used the PowerKatz plugin that can be loaded into the address space of a PowerShell process through reflective DLL loading.[1]
Enterprise,T1055,Portable Executable Injection,Lizar can execute PE files in the address space of the specified process.[1]
Enterprise,T1113,Screen Capture,Lizar can take JPEG screenshots of an infected system.[2][1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Lizar can search for processes associated with an anti-virus product from list.[1]
Enterprise,T1082,System Information Discovery,"Lizar can collect the computer name from the machine,.[1]"
Enterprise,T1016,System Network Configuration Discovery,Lizar can retrieve network information from a compromised host.[1]
Enterprise,T1049,System Network Connections Discovery,Lizar has a plugin to retrieve information about all active network sessions on the infected server.[1]
Enterprise,T1033,System Owner/User Discovery,Lizar can collect the username from the system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,RGDoor uses HTTP for C2 communications.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,RGDoor encrypts files with XOR before sending them back to the C2 server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RGDoor uses cmd.exe to execute commands on the victim’s machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RGDoor decodes Base64 strings and decrypts strings using a custom XOR algorithm.[1]
Enterprise,T1105,Ingress Tool Transfer,RGDoor uploads and downloads files to and from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,RGDoor executes the whoami on the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,RGDoor uses HTTP for C2 communications.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,RGDoor encrypts files with XOR before sending them back to the C2 server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RGDoor uses cmd.exe to execute commands on the victim’s machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RGDoor decodes Base64 strings and decrypts strings using a custom XOR algorithm.[1]
Enterprise,T1105,Ingress Tool Transfer,RGDoor uploads and downloads files to and from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,RGDoor executes the whoami on the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Shamoon has used HTTP for C2.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"Shamoon creates a new service named ""ntssrv"" to execute the payload. Newer versions create the ""MaintenaceSrv"" and ""hdv_725x"" services.[1][2]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,Shamoon decrypts ciphertext using an XOR cipher and a base64-encoded string.[2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Shamoon can change the modified time for files to evade forensic detection.[5]
Enterprise,T1105,Ingress Tool Transfer,Shamoon can download an executable to run on the victim.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Shamoon creates a new service named ""ntssrv"" that attempts to appear legitimate; the service's display name is ""Microsoft Network Realtime Inspection Service"" and its description is ""Helps guard against time change attempts targeting known and newly discovered vulnerabilities in network time protocols."" Newer versions create the ""MaintenaceSrv"" service, which misspells the word ""maintenance.""[1][5]"
Enterprise,T1112,Modify Registry,"Once Shamoon has access to a network share, it enables the RemoteRegistry service on the target system. It will then connect to the system with RegConnectRegistryW and modify the Registry to disable UAC remote restrictions by setting SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy to 1.[4][1][5]"
Enterprise,T1027,Obfuscated Files or Information,Shamoon contains base64-encoded strings.[1]
Enterprise,T1012,Query Registry,Shamoon queries several Registry keys to identify hard disk partitions to overwrite.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,"Shamoon accesses network share(s), enables share access to the target device, copies an executable payload to the target system, and uses a Scheduled Task/Job to execute the malware.[4]"
Enterprise,T1018,Remote System Discovery,Shamoon scans the C-class subnet of the IPs on the victim's interfaces.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Shamoon copies an executable payload to the target system by using SMB/Windows Admin Shares and then scheduling an unnamed task to execute the malware.[4][1]
Enterprise,T1082,System Information Discovery,Shamoon obtains the victim's operating system version and keyboard layout and sends the information to the C2 server.[1][2]
Enterprise,T1016,System Network Configuration Discovery,Shamoon obtains the target's IP address and local network segment.[1][5]
Enterprise,T1569,System Services: Service Execution,"Shamoon creates a new service named ""ntssrv"" to execute the payload. Shamoon can also spread via PsExec.[1][6]"
Enterprise,T1124,System Time Discovery,Shamoon obtains the system time and will only activate if it is greater than a preset date.[1][2]
Enterprise,T1078,Valid Accounts: Domain Accounts,"If Shamoon cannot access shares using current privileges, it attempts access using hard coded, domain-specific credentials gathered earlier in the intrusion.[4][2]"
Enterprise,T1560,Archive Collected Data,Chrommme can encrypt and store on disk collected data before exfiltration.[1]
Enterprise,T1005,Data from Local System,Chrommme can collect data from a local system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Chrommme can store captured system information locally prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Chrommme can decrypt its encrypted internal code.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Chrommme can exfiltrate collected data via C2.[1]
Enterprise,T1105,Ingress Tool Transfer,Chrommme can download its code from C2.[1]
Enterprise,T1106,Native API,Chrommme can use Windows API including WinExec for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,Chrommme can encrypt sections of its code to evade detection.[1]
Enterprise,T1113,Screen Capture,Chrommme has the ability to capture screenshots.[1]
Enterprise,T1082,System Information Discovery,Chrommme has the ability to list drives and obtain the computer name of a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,Chrommme can enumerate the IP address of a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Chrommme can retrieve the username from a targeted system.[1]
Enterprise,T1560,Archive Collected Data,Chrommme can encrypt and store on disk collected data before exfiltration.[1]
Enterprise,T1005,Data from Local System,Chrommme can collect data from a local system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Chrommme can store captured system information locally prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Chrommme can decrypt its encrypted internal code.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Chrommme can exfiltrate collected data via C2.[1]
Enterprise,T1105,Ingress Tool Transfer,Chrommme can download its code from C2.[1]
Enterprise,T1106,Native API,Chrommme can use Windows API including WinExec for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,Chrommme can encrypt sections of its code to evade detection.[1]
Enterprise,T1113,Screen Capture,Chrommme has the ability to capture screenshots.[1]
Enterprise,T1082,System Information Discovery,Chrommme has the ability to list drives and obtain the computer name of a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,Chrommme can enumerate the IP address of a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Chrommme can retrieve the username from a targeted system.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Net Crawler uses credential dumpers such as Mimikatz and Windows Credential Editor to extract cached credentials from Windows systems.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Net Crawler uses Windows admin shares to establish authenticated sessions to remote systems over SMB as part of lateral movement.[1]
Enterprise,T1569,System Services: Service Execution,Net Crawler uses PsExec to perform remote service manipulation to execute a copy of itself as part of lateral movement.[1]
Enterprise,T1087,Account Discovery: Domain Account,AdFind can enumerate domain users.[1][2][3]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,AdFind can enumerate domain groups.[1][2][3]
Enterprise,T1018,Remote System Discovery,AdFind has the ability to query Active Directory for computers.[1][2][3]
Enterprise,T1016,System Network Configuration Discovery,AdFind can extract subnet information from Active Directory.[1][2][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,The Komplex C2 channel uses HTTP POST requests.[2]
Enterprise,T1543,Create or Modify System Process: Launch Agent,The Komplex trojan creates a persistent launch agent called with $HOME/Library/LaunchAgents/com.apple.updates.plist with launchctl load -w ~/Library/LaunchAgents/com.apple.updates.plist.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,The Komplex C2 channel uses an 11-byte XOR algorithm to hide data.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,The Komplex payload is stored in a hidden directory at /Users/Shared/.local/kextd.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,The Komplex trojan supports file deletion.[2]
Enterprise,T1057,Process Discovery,The OsInfo function in Komplex collects a running process list.[2]
Enterprise,T1033,System Owner/User Discovery,The OsInfo function in Komplex collects the current running username.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,TinyTurla can use HTTPS in C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TinyTurla has been installed using a .bat file.[1]
Enterprise,T1005,Data from Local System,TinyTurla can upload files from a compromised host.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,TinyTurla has the ability to encrypt C2 traffic with SSL/TLS.[1]
Enterprise,T1105,Ingress Tool Transfer,TinyTurla has the ability to act as a second-stage dropper used to infect the system with additional malware.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,TinyTurla has mimicked an existing Windows service by being installed as Windows Time Service.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,TinyTurla has been deployed as w64time.dll to appear legitimate.[1]
Enterprise,T1112,Modify Registry,TinyTurla can set its configuration parameters in the Registry.[1]
Enterprise,T1106,Native API,"TinyTurla has used WinHTTP, CreateProcess, and other APIs for C2 communications and other functions.[1]"
Enterprise,T1012,Query Registry,TinyTurla can query the Registry for its configuration information.[1]
Enterprise,T1569,System Services: Service Execution,TinyTurla can install itself as a service on compromised machines.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,RawPOS encodes credit card data it collected from the victim with XOR.[2][4][3]
Enterprise,T1543,Create or Modify System Process: Windows Service,RawPOS installs itself as a service to maintain persistence.[1][2][4]
Enterprise,T1005,Data from Local System,"RawPOS dumps memory from specific processes on a victim system, parses the dumped files, and scrapes them for credit card data.[1][2][4]"
Enterprise,T1074,Data Staged: Local Data Staging,"Data captured by RawPOS is placed in a temporary file under a directory named ""memdump"".[1]"
Enterprise,T1036,Masquerading: Masquerade Task or Service,"New services created by RawPOS are made to appear like legitimate Windows services, with names such as ""Windows Management Help Service"", ""Microsoft Support"", and ""Windows Advanced Task Manager"".[1][2][4]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,TinyZBot can create a shortcut in the Windows startup folder for persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,TinyZBot can create a shortcut in the Windows startup folder for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TinyZBot supports execution from the command-line.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,TinyZBot can install as a Windows service for persistence.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,TinyZBot can disable Avira anti-virus.[1]
Enterprise,T1056,Input Capture: Keylogging,TinyZBot contains keylogger functionality.[1]
Enterprise,T1113,Screen Capture,TinyZBot contains screen capture functionality.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,FYAnti has the ability to decrypt an embedded .NET module.[1]
Enterprise,T1083,File and Directory Discovery,FYAnti can search the C:\Windows\Microsoft.NET\ directory for files of a specified size.[1]
Enterprise,T1105,Ingress Tool Transfer,FYAnti can download additional payloads to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,FYAnti has used ConfuserEx to pack its .NET module.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sliver has the ability to support C2 communications over HTTP/S.[3][1][2]
Enterprise,T1071,Application Layer Protocol: DNS,Sliver can support C2 communications over DNS.[3][1][4]
Enterprise,T1132,Data Encoding: Standard Encoding,Sliver can use standard encoding techniques like gzip and hex to ASCII to encode the C2 communication payload.[5]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Sliver can use AES-GCM-256 to encrypt a session key for C2 message exchange.[6]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Sliver can use mutual TLS and RSA cryptography to exchange a session key.[3][1][6]
Enterprise,T1041,Exfiltration Over C2 Channel,Sliver can exfiltrate files from the victim using the download command.[7]
Enterprise,T1083,File and Directory Discovery,Sliver can enumerate files on a target system.[8]
Enterprise,T1105,Ingress Tool Transfer,Sliver can upload files from the C2 server to the victim machine using the upload command.[9]
Enterprise,T1027,Obfuscated Files or Information,Sliver can encrypt strings at compile time.[1][2]
Enterprise,T1055,Process Injection,Sliver can inject code into local and remote processes.[1][2]
Enterprise,T1113,Screen Capture,Sliver can take screenshots of the victim’s active display.[10]
Enterprise,T1016,System Network Configuration Discovery,Sliver has the ability to gather network configuration information.[11]
Enterprise,T1049,System Network Connections Discovery,Sliver can collect network connection information.[12]
Enterprise,T1087,Account Discovery: Local Account,Commands under net user can be used in Net to gather information about and manipulate user accounts.[2]
Enterprise,T1087,Account Discovery: Domain Account,Net commands used with the /domain flag can be used to gather information about and manipulate user accounts on the current domain.[3]
Enterprise,T1070,Indicator Removal on Host: Network Share Connection Removal,The net use \system\share /delete command can be used in Net to remove an established connection to a network share.[4]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Commands such as net group and net localgroup can be used in Net to gather information about and manipulate groups.[2]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Commands such as net group /domain can be used in Net to gather information about and manipulate groups.[2]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Lateral movement can be done with Net through net use commands to connect to the on remote systems.[2]
Enterprise,T1018,Remote System Discovery,Commands such as net view can be used in Net to gather information about available remote systems.[2]
Enterprise,T1049,System Network Connections Discovery,Commands such as net use and net session can be used in Net to gather information about network connections from a particular host.[2]
Enterprise,T1569,System Services: Service Execution,The net start and net stop commands can be used in Net to execute or stop Windows services.[2]
Enterprise,T1124,System Time Discovery,The net time command can be used in Net to determine the local or remote system time.[5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"USBStealer registers itself under a Registry Run key with the name ""USB Disk Security.""[1]"
Enterprise,T1074,Data Staged: Local Data Staging,USBStealer collects files matching certain criteria from the victim and stores them in a local directory for later exfiltration.[1][2]
Enterprise,T1083,File and Directory Discovery,"USBStealer searches victim drives for files matching certain extensions ("".skr"","".pkr"" or "".key"") or names.[1][2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,USBStealer has several commands to delete files associated with the malware from the victim.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,USBStealer sets the timestamps of its dropper files to the last-access and last-write timestamps of a standard Windows library chosen on the system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,USBStealer mimics a legitimate Russian program called USB Disk Security.[1]
Enterprise,T1027,Obfuscated Files or Information,Most strings in USBStealer are encrypted using 3DES and XOR and reversed.[1]
Enterprise,T1087,Account Discovery: Local Account,InvisiMole has a command to list account information on the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,InvisiMole uses HTTP for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: DNS,InvisiMole has used a custom implementation of DNS tunneling to embed C2 communications in DNS requests and replies.[2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,InvisiMole uses WinRAR to compress data that is intended to be exfiltrated.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,InvisiMole can use zlib to compress and decompress data.[1][2]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,InvisiMole uses a variation of the XOR cipher to encrypt files before exfiltration.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,InvisiMole can place a lnk file in the Startup Folder to achieve persistence.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,InvisiMole can use a .lnk shortcut for the Control Panel to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,InvisiMole can launch a remote shell to execute commands.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,InvisiMole can use a JavaScript file as part of its execution chain.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,"InvisiMole can register a Windows service named CsPower as part of its execution chain, and a Windows service named clr_optimization_v2.0.51527_X86 to achieve persistence.[2]"
Enterprise,T1132,Data Encoding: Non-Standard Encoding,InvisiMole can use a modified base32 encoding to encode data within the subdomain of C2 requests.[2]
Enterprise,T1005,Data from Local System,"InvisiMole can collect data from the system, and can monitor changes in specified directories.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,InvisiMole determines a working directory where it stores all the gathered data about the compromised machine.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"InvisiMole can decrypt, unpack and load a DLL from its resources, or from blobs encrypted with Data Protection API, two-key triple DES, and variations of the XOR cipher.[1][2]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,InvisiMole uses variations of a simple XOR encryption routine for C&C communications.[1]
Enterprise,T1083,File and Directory Discovery,InvisiMole can list information about files in a directory and recently opened or used documents. InvisiMole can also search for specific files by supplied file mask.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,InvisiMole can create hidden system directories.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,InvisiMole has executed legitimate tools in hidden windows.[2]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,InvisiMole can be launched by using DLL search order hijacking in which the wrapper DLL is placed in the same folder as explorer.exe and loaded during startup into the Windows Explorer process instead of the legitimate library.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,InvisiMole has a command to disable routing and the Firewall on the victim’s machine.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,InvisiMole has deleted files and directories including XML and files successfully uploaded to C2 servers.[1][2]
Enterprise,T1070,Indicator Removal on Host: Network Share Connection Removal,InvisiMole can disconnect previously connected remote drives.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,InvisiMole samples were timestomped by the authors by setting the PE timestamps to all zero values. InvisiMole also has a built-in command to modify file times.[1]
Enterprise,T1105,Ingress Tool Transfer,InvisiMole can upload files to the victim's machine for operations.[1][2]
Enterprise,T1056,Input Capture: Keylogging,InvisiMole can capture keystrokes on a compromised host.[2]
Enterprise,T1036,Masquerading: Masquerade Task or Service,InvisiMole has attempted to disguise itself by registering under a seemingly legitimate service name.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"InvisiMole has disguised its droppers as legitimate software or documents, matching their original names and locations, and saved its files as mpr.dll in the Windows folder.[1][2]"
Enterprise,T1112,Modify Registry,"InvisiMole has a command to create, set, copy, or delete a specified Registry key or value.[1][2]"
Enterprise,T1106,Native API,InvisiMole can use winapiexec tool for indirect execution of ShellExecuteW and CreateProcessA.[2]
Enterprise,T1027,Obfuscated Files or Information,"InvisiMole avoids analysis by encrypting all strings, internal files, configuration data and by using a custom executable format.[1][2]"
Enterprise,T1027,Indicator Removal from Tools,InvisiMole has undergone regular technical improvements in an attempt to evade detection.[2]
Enterprise,T1057,Process Discovery,InvisiMole can obtain a list of running processes.[1][2]
Enterprise,T1055,Process Injection,InvisiMole can inject itself into another process to avoid detection including use of a technique called ListPlanting that customizes the sorting algorithm in a ListView structure.[2]
Enterprise,T1055,Portable Executable Injection,InvisiMole can inject its backdoor as a portable executable into a target process.[2]
Enterprise,T1055,Asynchronous Procedure Call,InvisiMole can inject its code into a trusted process via the APC queue.[2]
Enterprise,T1055,ListPlanting,InvisiMole has used ListPlanting to inject code into a trusted process.[2]
Enterprise,T1090,Proxy: Internal Proxy,"InvisiMole can function as a proxy to create a server that relays communication between the client and C&C server, or between two clients.[1]"
Enterprise,T1090,Proxy: External Proxy,InvisiMole InvisiMole can identify proxy servers used by the victim and use them for C2 communication.[1][2]
Enterprise,T1012,Query Registry,"InvisiMole can enumerate Registry values, keys, and data.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,InvisiMole has used scheduled tasks named MSST and \Microsoft\Windows\Autochk\Scheduled to establish persistence.[2]
Enterprise,T1113,Screen Capture,"InvisiMole can capture screenshots of not only the entire screen, but of each separate window open, in case they are overlapping.[1][2]"
Enterprise,T1518,Software Discovery,"InvisiMole can collect information about installed software used by specific users, software executed on user login, and software executed by each system.[1][2]"
Enterprise,T1518,Security Software Discovery,"InvisiMole can check for the presence of network sniffers, AV, and BitDefender firewall.[2]"
Enterprise,T1218,System Binary Proxy Execution: Control Panel,InvisiMole can register itself for execution and persistence via the Control Panel.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,InvisiMole has used rundll32.exe for execution.[2]
Enterprise,T1082,System Information Discovery,"InvisiMole can gather information on the mapped drives, OS version, computer name, DEP policy, memory size, and system volume serial number.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,"InvisiMole gathers information on the IP forwarding table, MAC address, configured proxy, and network SSID.[1][2]"
Enterprise,T1033,System Owner/User Discovery,InvisiMole lists local users and session information.[1]
Enterprise,T1569,System Services: Service Execution,InvisiMole has used Windows services as a way to execute its malicious payload.[2]
Enterprise,T1124,System Time Discovery,InvisiMole gathers the local system time from the victim’s machine.[1][2]
Enterprise,T1204,User Execution: Malicious File,"InvisiMole can deliver trojanized versions of software and documents, relying on user execution.[2]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"InvisiMole can check for artifacts of VirtualBox, Virtual PC and VMware environment, and terminate itself if they are detected.[2]"
Enterprise,T1071,Application Layer Protocol,"The Regin malware platform supports many standard protocols, including SMB.[1]"
Enterprise,T1071,Web Protocols,"The Regin malware platform supports many standard protocols, including HTTP and HTTPS.[1]"
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,The Regin malware platform uses Extended Attributes to store encrypted executables.[1]
Enterprise,T1564,Hide Artifacts: Hidden File System,Regin has used a hidden file system to store some of its components.[1]
Enterprise,T1056,Input Capture: Keylogging,Regin contains a keylogger.[1]
Enterprise,T1036,Masquerading: Invalid Code Signature,Regin stage 1 modules for 64-bit systems have been found to be signed with fake certificates masquerading as originating from Microsoft Corporation and Broadcom Corporation.[1]
Enterprise,T1112,Modify Registry,Regin appears to have functionality to modify remote Registry information.[1]
Enterprise,T1090,Proxy: External Proxy,Regin leveraged several compromised universities as proxies to obscure its origin.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,The Regin malware platform can use Windows admin shares to move laterally.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GreyEnergy uses HTTP and HTTPS for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,GreyEnergy uses cmd.exe to execute itself in-memory.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"GreyEnergy chooses a service, drops a DLL file, and writes it to that serviceDLL Registry key.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,GreyEnergy encrypts communications using AES256.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,GreyEnergy encrypts communications using RSA-2048.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,GreyEnergy can securely delete a file by hooking into the DeleteFileA and DeleteFileW functions in the Windows API.[1]
Enterprise,T1105,Ingress Tool Transfer,GreyEnergy can download additional modules and payloads.[1]
Enterprise,T1056,Input Capture: Keylogging,GreyEnergy has a module to harvest pressed keystrokes.[1]
Enterprise,T1112,Modify Registry,GreyEnergy modifies conditions in the Registry and adds keys.[1]
Enterprise,T1027,Obfuscated Files or Information,GreyEnergy encrypts its configuration files with AES-256 and also encrypts its strings.[1]
Enterprise,T1027,Software Packing,GreyEnergy is packed for obfuscation.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,GreyEnergy has a module for Mimikatz to collect Windows credentials from the victim’s machine.[1]
Enterprise,T1055,Process Injection: Portable Executable Injection,GreyEnergy has a module to inject a PE binary into a remote process.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,GreyEnergy has used Tor relays for Command and Control servers.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,GreyEnergy digitally signs the malware with a code-signing certificate.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,GreyEnergy uses PsExec locally in order to execute rundll32.exe at the highest privileges (NTAUTHORITY\SYSTEM).[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,adbupd can run a copy of cmd.exe.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,adbupd contains a copy of the OpenSSL library to encrypt C2 traffic.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Okrum uses HTTP for communication with its C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Okrum was seen using a RAR archiver tool to compress/decompress data.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Okrum has used a custom implementation of AES encryption to encrypt collected data.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Okrum establishes persistence by creating a .lnk shortcut to itself in the Startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Okrum can establish persistence by creating a .lnk shortcut to itself in the Startup folder.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Okrum's backdoor has used cmd.exe to execute arbitrary commands as well as batch scripts to update itself to a newer version.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"To establish persistence, Okrum can install itself as a new service named NtmSsvc.[1]"
Enterprise,T1132,Data Encoding: Standard Encoding,Okrum has used base64 to encode C2 communication.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Okrum's loader can decrypt the backdoor code, embedded within the loader or within a legitimate PNG file. A custom XOR cipher or RC4 is used for decryption.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Okrum uses AES to encrypt network traffic. The key can be hardcoded or negotiated with the C2 server in the registration phase. [1]
Enterprise,T1041,Exfiltration Over C2 Channel,Data exfiltration is done by Okrum using the already opened channel with the C2 server.[1]
Enterprise,T1083,File and Directory Discovery,Okrum has used DriveLetterView to enumerate drive information.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"Before exfiltration, Okrum's backdoor has used hidden files to store logs and outputs from backdoor commands.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Okrum's backdoor deletes files after they have been successfully uploaded to C2 servers.[1]
Enterprise,T1105,Ingress Tool Transfer,"Okrum has built-in commands for uploading, downloading, and executing files to the system.[1]"
Enterprise,T1056,Input Capture: Keylogging,Okrum was seen using a keylogger tool to capture keystrokes. [1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Okrum can establish persistence by adding a new service NtmsSvc with the display name Removable Storage to masquerade as a legitimate Removable Storage Manager.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,"Okrum's payload is encrypted and embedded within its loader, or within a legitimate PNG file.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Okrum was seen using MimikatzLite to perform credential dumping.[1]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,Okrum was seen using modified Quarks PwDump to perform credential dumping.[1]
Enterprise,T1090,Proxy: External Proxy,"Okrum can identify proxy servers configured and used by the victim, and use it to make HTTP requests to C2 its server.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Okrum's installer can attempt to achieve persistence by creating a scheduled task.[1]
Enterprise,T1082,System Information Discovery,"Okrum can collect computer name, locale information, and information about the OS and architecture.[1]"
Enterprise,T1016,System Network Configuration Discovery,"Okrum can collect network information, including the host IP address, DNS, and proxy information.[1]"
Enterprise,T1049,System Network Connections Discovery,Okrum was seen using NetSess to discover NetBIOS sessions.[1]
Enterprise,T1033,System Owner/User Discovery,Okrum can collect the victim username.[1]
Enterprise,T1569,System Services: Service Execution,Okrum's loader can create a new service named NtmsSvc to execute the payload.[1]
Enterprise,T1124,System Time Discovery,Okrum can obtain the date and time of the compromised system.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Okrum's loader can check the amount of physical memory and terminates itself if the host has less than 1.5 Gigabytes of physical memory in total.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: User Activity Based Checks,"Okrum loader only executes the payload after the left mouse button has been pressed at least three times, in order to avoid being executed within virtualized or emulated environments.[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"Okrum's loader can detect presence of an emulator by using two calls to GetTickCount API, and checking whether the time has been accelerated.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PLAINTEE gains persistence by adding the Registry key HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\RunOnce.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PLAINTEE uses cmd.exe to execute commands on the victim’s machine.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,PLAINTEE encodes C2 beacons using XOR.[1]
Enterprise,T1105,Ingress Tool Transfer,PLAINTEE has downloaded and executed additional plugins.[1]
Enterprise,T1112,Modify Registry,PLAINTEE uses reg add to add a Registry Run key for persistence.[1]
Enterprise,T1057,Process Discovery,PLAINTEE performs the tasklist command to list running processes.[1]
Enterprise,T1082,System Information Discovery,PLAINTEE collects general system enumeration data about the infected machine and checks the OS version.[1]
Enterprise,T1016,System Network Configuration Discovery,PLAINTEE uses the ipconfig /all command to gather the victim’s IP address.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BLACKCOFFEE has the capability to create a reverse shell.[1]
Enterprise,T1083,File and Directory Discovery,BLACKCOFFEE has the capability to enumerate files.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,BLACKCOFFEE has the capability to delete files.[1]
Enterprise,T1057,Process Discovery,BLACKCOFFEE has the capability to discover processes.[1]
Enterprise,T1102,Web Service: Dead Drop Resolver,BLACKCOFFEE uses Microsoft’s TechNet Web portal to obtain a dead drop resolver containing an encoded tag with the IP address of a command and control server.[1][2]
Enterprise,T1102,Web Service: Bidirectional Communication,BLACKCOFFEE has also obfuscated its C2 traffic as normal traffic to sites such as Github.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,gh0st RAT has added a Registry Run key to establish persistence.[3][5]
Enterprise,T1059,Command and Scripting Interpreter,gh0st RAT is able to open a remote shell to execute commands.[1][3]
Enterprise,T1543,Create or Modify System Process: Windows Service,gh0st RAT can create a new service to establish persistence.[3][5]
Enterprise,T1132,Data Encoding: Standard Encoding,gh0st RAT has used Zlib to compress C2 communications data before encrypting it.[5]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"gh0st RAT has decrypted and loaded the gh0st RAT DLL into memory, once the initial dropper executable is launched.[5]"
Enterprise,T1573,Encrypted Channel,gh0st RAT has encrypted TCP communications to evade detection.[5]
Enterprise,T1573,Symmetric Cryptography,gh0st RAT uses RC4 and XOR to encrypt C2 traffic.[3]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,A gh0st RAT variant has used DLL side-loading.[2]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,gh0st RAT is able to wipe event logs.[1][5]
Enterprise,T1070,Indicator Removal on Host: File Deletion,gh0st RAT has the capability to to delete files.[1][5]
Enterprise,T1105,Ingress Tool Transfer,gh0st RAT can download files to the victim’s machine.[3][5]
Enterprise,T1056,Input Capture: Keylogging,gh0st RAT has a keylogger.[6][5]
Enterprise,T1112,Modify Registry,gh0st RAT has altered the InstallTime subkey.[5]
Enterprise,T1106,Native API,"gh0st RAT has used the InterlockedExchange, SeShutdownPrivilege, and ExitWindowsEx Windows API functions.[5]"
Enterprise,T1057,Process Discovery,gh0st RAT has the capability to list processes.[1]
Enterprise,T1055,Process Injection,"gh0st RAT can inject malicious code into process created by the ""Command_Create&Inject"" function.[5]"
Enterprise,T1012,Query Registry,gh0st RAT has checked for the existence of a Service key to determine if it has already been installed on the system.[5]
Enterprise,T1113,Screen Capture,gh0st RAT can capture the victim’s screen remotely.[3]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,A gh0st RAT variant has used rundll32 for execution.[2]
Enterprise,T1082,System Information Discovery,"gh0st RAT has gathered system architecture, processor, OS configuration, and installed hardware information.[5]"
Enterprise,T1569,System Services: Service Execution,"gh0st RAT can execute its service if the Service key exists. If the key does not exist, gh0st RAT will create and run the service.[5]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,NETWIRE has the ability to communicate over HTTP.[4][5]
Enterprise,T1560,Archive Collected Data,NETWIRE has the ability to compress archived screenshots.[4]
Enterprise,T1560,Archive via Custom Method,NETWIRE has used a custom encryption algorithm to encrypt collected data.[6]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,NETWIRE creates a Registry start-up entry to establish persistence.[2][4][7][5]
Enterprise,T1547,Boot or Logon Autostart Execution: XDG Autostart Entries,NETWIRE can use XDG Autostart Entries to establish persistence.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Login Items,NETWIRE can persist via startup options for Login items.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,The NETWIRE binary has been executed via PowerShell script.[6]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,NETWIRE can issue commands using cmd.exe.[4][5]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,NETWIRE has the ability to use /bin/bash and /bin/sh to execute commands.[4][5]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,NETWIRE has been executed through use of VBScripts.[6][5]
Enterprise,T1543,Create or Modify System Process: Launch Agent,NETWIRE can use launch agents for persistence.[4]
Enterprise,T1555,Credentials from Password Stores,NETWIRE can retrieve passwords from messaging and mail client applications.[4]
Enterprise,T1555,Credentials from Web Browsers,"NETWIRE has the ability to steal credentials from web browsers including Internet Explorer, Opera, Yandex, and Chrome.[6][4][5]"
Enterprise,T1074,Data Staged: Local Data Staging,NETWIRE has the ability to write collected data to a file created in the ./LOGS directory.[6]
Enterprise,T1573,Encrypted Channel,NETWIRE can encrypt C2 communications.[4]
Enterprise,T1573,Symmetric Cryptography,NETWIRE can use AES encryption for C2 data transferred.[4]
Enterprise,T1083,File and Directory Discovery,NETWIRE has the ability to search for files on the compromised host.[5]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,NETWIRE can copy itself to and launch itself from hidden folders.[4]
Enterprise,T1105,Ingress Tool Transfer,NETWIRE can downloaded payloads from C2 to the compromised host.[6][5]
Enterprise,T1056,Input Capture: Keylogging,NETWIRE can perform keylogging.[2][3][6][4][5]
Enterprise,T1036,Masquerading: Invalid Code Signature,The NETWIRE client has been signed by fake and invalid digital certificates.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,NETWIRE has masqueraded as legitimate software including TeamViewer and macOS Finder.[4]
Enterprise,T1112,Modify Registry,NETWIRE stores its configuration file within the Registry.[4]
Enterprise,T1106,Native API,"NETWIRE can use Native API including CreateProcess GetProcessById, and WriteProcessMemory.[6]"
Enterprise,T1027,Obfuscated Files or Information,"NETWIRE has used a custom obfuscation algorithm to hide strings including Registry keys, APIs, and DLL names.[6]"
Enterprise,T1027,Software Packing,NETWIRE has used .NET packer tools to evade detection.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,NETWIRE has been spread via e-mail campaigns utilizing malicious attachments.[7][5]
Enterprise,T1566,Phishing: Spearphishing Link,NETWIRE has been spread via e-mail campaigns utilizing malicious links.[7]
Enterprise,T1057,Process Discovery,NETWIRE can discover processes on compromised hosts.[6]
Enterprise,T1055,Process Injection,"NETWIRE can inject code into system processes including notepad.exe, svchost.exe, and vbc.exe.[4]"
Enterprise,T1055,Process Hollowing,The NETWIRE payload has been injected into benign Microsoft executables via process hollowing.[6][4]
Enterprise,T1090,Proxy,NETWIRE can implement use of proxies to pivot traffic.[4]
Enterprise,T1053,Scheduled Task/Job: Cron,NETWIRE can use crontabs to establish persistence.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,NETWIRE can create a scheduled task to establish persistence.[6]
Enterprise,T1113,Screen Capture,NETWIRE can capture the victim's screen.[2][6][4][5]
Enterprise,T1082,System Information Discovery,NETWIRE can discover and collect victim system information.[2]
Enterprise,T1016,System Network Configuration Discovery,NETWIRE can collect the IP address of a compromised host.[4][5]
Enterprise,T1049,System Network Connections Discovery,NETWIRE can capture session logon details from a compromised host.[6]
Enterprise,T1204,User Execution: Malicious Link,NETWIRE has been executed through convincing victims into clicking malicious links.[6][7]
Enterprise,T1204,User Execution: Malicious File,NETWIRE has been executed through luring victims into opening malicious documents.[6][7][5]
Enterprise,T1102,Web Service,NETWIRE has used web services including Paste.ee to host payloads.[6]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"The original variant of FakeM encrypts C2 traffic using a custom encryption cipher that uses an XOR key of ""YHCRA"" and bit rotation between each XOR operation. Some variants of FakeM use RC4 to encrypt C2 traffic.[1]"
Enterprise,T1056,Input Capture: Keylogging,FakeM contains a keylogger module.[1]
Enterprise,T1083,File and Directory Discovery,Kivars has the ability to list drives on the infected host.[1]
Enterprise,T1564,Hide Artifacts: Hidden Window,Kivars has the ability to conceal its activity through hiding active windows.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Kivars has the ability to uninstall malware from the infected host.[1]
Enterprise,T1105,Ingress Tool Transfer,Kivars has the ability to download and execute files.[1]
Enterprise,T1056,Input Capture: Keylogging,Kivars has the ability to initiate keylogging on the infected host.[1]
Enterprise,T1021,Remote Services,Kivars has the ability to remotely trigger keyboard input and mouse clicks. [1]
Enterprise,T1113,Screen Capture,Kivars has the ability to capture screenshots on the infected host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Micropsia uses HTTP and HTTPS for C2 network communications.[1][2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Micropsia creates a RAR archive based on collected files on the victim's machine.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Micropsia creates a shortcut to maintain persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Micropsia creates a command-line shell using cmd.exe.[2]
Enterprise,T1083,File and Directory Discovery,Micropsia can perform a recursive directory listing for all volume drives available on the victim's machine and can also fetch specific files by their paths.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Micropsia creates a new hidden directory to store all components' outputs in a dedicated sub-folder for each.[2]
Enterprise,T1105,Ingress Tool Transfer,Micropsia can download and execute an executable from the C2 server.[1][2]
Enterprise,T1056,Input Capture: Keylogging,Micropsia has keylogging capabilities.[2]
Enterprise,T1027,Obfuscated Files or Information,Micropsia obfuscates the configuration with a custom Base64 and XOR.[1][2]
Enterprise,T1113,Screen Capture,Micropsia takes screenshots every 90 seconds by calling the Gdi32.BitBlt API.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Micropsia searches for anti-virus software and firewall products installed on the victim’s machine using WMI.[1][2]
Enterprise,T1082,System Information Discovery,Micropsia gathers the hostname and OS version from the victim’s machine.[1][2]
Enterprise,T1033,System Owner/User Discovery,Micropsia collects the username from the victim’s machine.[1]
Enterprise,T1047,Windows Management Instrumentation,Micropsia searches for anti-virus software and firewall products installed on the victim’s machine using WMI.[1][2]
Enterprise,T1071,Application Layer Protocol: DNS,SOUNDBITE communicates via DNS for C2.[1]
Enterprise,T1083,File and Directory Discovery,SOUNDBITE is capable of enumerating and manipulating files and directories.[1]
Enterprise,T1112,Modify Registry,SOUNDBITE is capable of modifying the Registry.[1]
Enterprise,T1082,System Information Discovery,SOUNDBITE is capable of gathering system information.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Conti can utilize command line options to allow an attacker control over how it scans and encrypts files.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Conti has decrypted its payload using a hardcoded AES-256 key.[1][2]
Enterprise,T1083,File and Directory Discovery,Conti can discover files on a local system.[2]
Enterprise,T1106,Native API,Conti has used API calls during execution.[1][2]
Enterprise,T1027,Obfuscated Files or Information,"Conti can use compiler-based obfuscation for its code, encrypt DLLs, and hide Windows API calls.[2][1][4]"
Enterprise,T1057,Process Discovery,"Conti can enumerate through all open processes to search for any that have the string ""sql"" in their process name.[2]"
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Conti has loaded an encrypted DLL into memory and then executes it.[1][2]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,"Conti can spread via SMB and encrypts files on different hosts, potentially compromising an entire network.[1][2]"
Enterprise,T1018,Remote System Discovery,Conti has the ability to discover hosts on a target network.[4]
Enterprise,T1016,System Network Configuration Discovery,"Conti can retrieve the ARP cache from the local system by using the GetIpNetTable() API call and check to ensure IP addresses it connects to are for local, non-Internet, systems.[2]"
Enterprise,T1049,System Network Connections Discovery,Conti can enumerate routine network connections from a compromised host.[2]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Data SPACESHIP copies to the staging area is compressed with zlib. Bytes are rotated by four positions and XOR'ed with 0x23.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SPACESHIP achieves persistence by creating a shortcut in the current user's Startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,SPACESHIP achieves persistence by creating a shortcut in the current user's Startup folder.[1]
Enterprise,T1074,Data Staged: Local Data Staging,SPACESHIP identifies files with certain extensions and copies them to a directory in the user's profile.[1]
Enterprise,T1083,File and Directory Discovery,SPACESHIP identifies files and directories for collection by searching for specific file extensions or file modification time.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,LitePower can use HTTP and HTTPS for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,LitePower can use a PowerShell script to execute commands.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,"LitePower can send collected data, including screenshots, over its C2 channel.[1]"
Enterprise,T1105,Ingress Tool Transfer,LitePower has the ability to download payloads containing system commands to a compromised host.[1]
Enterprise,T1106,Native API,LitePower can use various API calls.[1]
Enterprise,T1012,Query Registry,LitePower can query the Registry for keys added to execute COM hijacking.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,LitePower can create a scheduled task to enable persistence mechanisms.[1]
Enterprise,T1113,Screen Capture,LitePower can take system screenshots and save them to %AppData%.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,LitePower can identify installed AV software.[1]
Enterprise,T1082,System Information Discovery,LitePower has the ability to list local drives and enumerate the OS architecture.[1]
Enterprise,T1033,System Owner/User Discovery,LitePower can determine if the current user has admin privileges.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,MarkiRAT can initiate communication over HTTP/HTTPS for its C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,MarkiRAT can drop its payload into the Startup directory to ensure it automatically runs when the compromised system is started.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,MarkiRAT can modify the shortcut that launches Telegram by replacing its path with the malicious payload to launch with the legitimate executable.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MarkiRAT can utilize cmd.exe to execute commands in a victim's environment.[1]
Enterprise,T1555,Credentials from Password Stores: Password Managers,MarkiRAT can gather information from the Keepass password manager.[1]
Enterprise,T1005,Data from Local System,MarkiRAT can upload data from the victim's machine to the C2 server.[1]
Enterprise,T1074,Data Staged: Local Data Staging,MarkiRAT can store collected data locally in a created .nfo file.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,MarkiRAT can exfiltrate locally stored data via its C2.[1]
Enterprise,T1083,File and Directory Discovery,"MarkiRAT can look for files carrying specific extensions such as: .rtf, .doc, .docx, .xls, .xlsx, .ppt, .pptx, .pps, .ppsx, .txt, .gpg, .pkr, .kdbx, .key, and .jpb.[1]"
Enterprise,T1105,Ingress Tool Transfer,"MarkiRAT can download additional files and tools from its C2 server, including through the use of BITSAdmin.[1]"
Enterprise,T1056,Input Capture: Keylogging,MarkiRAT can capture all keystrokes on a compromised host.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,MarkiRAT can masquerade as update.exe and svehost.exe; it has also mimicked legitimate Telegram and Chrome files.[1]
Enterprise,T1106,Native API,MarkiRAT can run the ShellExecuteW API via the Windows Command Shell.[1]
Enterprise,T1057,Process Discovery,MarkiRAT can search for different processes on a system.[1]
Enterprise,T1113,Screen Capture,MarkiRAT can capture screenshots that are initially saved as ‘scr.jpg’.[1]
Enterprise,T1518,Software Discovery,MarkiRAT can check for the Telegram installation directory by enumerating the files on disk.[1]
Enterprise,T1518,Security Software Discovery,MarkiRAT can check for running processes on the victim’s machine to look for Kaspersky and Bitdefender antivirus products.[1]
Enterprise,T1082,System Information Discovery,MarkiRAT can obtain the computer name from a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,MarkiRAT can retrieve the victim’s username.[1]
Enterprise,T1090,Proxy,Ngrok can be used to proxy connections to machines located behind NAT or firewalls.[5][1]
Enterprise,T1102,Web Service,Ngrok has been used by threat actors to proxy C2 connections to ngrok service subdomains.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,WhisperGate can make an HTTPS connection to download additional files.[2][4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,WhisperGate can use PowerShell to support multiple actions including execution and defense evasion.[2][5][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,WhisperGate can use cmd.exe to execute commands.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,WhisperGate can use a Visual Basic script to exclude the C:\ drive from Windows Defender.[2][5]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WhisperGate can deobfuscate downloaded files stored in reverse byte order and decrypt embedded resources using multiple XOR operations.[5][4]
Enterprise,T1083,File and Directory Discovery,WhisperGate can locate files based on hardcoded file extensions.[3][2][5][4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,WhisperGate can download and execute AdvancedRun.exe to disable Windows Defender Theat Protection via sc.exe.[2][5][4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,WhisperGate can delete tools from a compromised host after execution.[5]
Enterprise,T1105,Ingress Tool Transfer,WhisperGate can download additional stages of malware from a Discord CDN channel.[3][2][5][4]
Enterprise,T1036,Masquerading,WhisperGate has been disguised as a JPG extension to avoid detection as a malicious PE file.[4]
Enterprise,T1106,Native API,WhisperGate has used the ExitWindowsEx API to flush file buffers to disk and stop running processes.[5]
Enterprise,T1027,Obfuscated Files or Information,"WhisperGate can Base64 encode strings, store downloaded files in reverse byte order, and use the Eazfuscator tool to obfuscate its third stage.[5][4]"
Enterprise,T1055,Process Injection,WhisperGate has the ability to inject its fourth stage into a suspended process created by the legitimate Windows utility InstallUtil.exe.[5]
Enterprise,T1518,Software Discovery: Security Software Discovery,WhisperGate can recognize the presence of monitoring tools on a target system.[2]
Enterprise,T1218,System Binary Proxy Execution: InstallUtil,WhisperGate has used InstallUtil.exe as part of its process to disable Windows Defender.[2]
Enterprise,T1082,System Information Discovery,WhisperGate has the ability to enumerate fixed logical drives on a targeted system.[5]
Enterprise,T1049,System Network Connections Discovery,WhisperGate can enumerate connected remote logical drives.[5]
Enterprise,T1078,Valid Accounts: Default Accounts,The WhisperGate third stage can use the AdvancedRun.exe tool to execute commands in the context of the Windows TrustedInstaller group.[5]
Enterprise,T1497,Virtualization/Sandbox Evasion,WhisperGate can stop its execution when it recognizes the presence of certain monitoring tools.[2]
Enterprise,T1497,Time Based Evasion,WhisperGate can pause for 20 seconds to bypass antivirus solutions.[4]
Enterprise,T1102,Web Service,WhisperGate can download additional payloads hosted on a Discord channel.[6][2][3][5][4]
Enterprise,T1087,Account Discovery: Local Account,Valak has the ability to enumerate local admin accounts.[1]
Enterprise,T1087,Account Discovery: Domain Account,Valak has the ability to enumerate domain admin accounts.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Valak has used HTTP in communications with C2.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Valak has used PowerShell to download additional modules.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Valak can execute JavaScript containing configuration data for establishing persistence.[1]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,Valak can use a .NET compiled module named exchgrabber to enumerate credentials from the Credential Manager.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,Valak has returned C2 data as encoded ASCII.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Valak has the ability to decode and decrypt downloaded files.[1][2]
Enterprise,T1041,Exfiltration Over C2 Channel,Valak has the ability to exfiltrate data over the C2 channel.[1][2][3]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Valak has the ability save and execute files as alternate data streams (ADS).[1][2][3]
Enterprise,T1105,Ingress Tool Transfer,"Valak has downloaded a variety of modules and payloads to the compromised host, including IcedID and NetSupport Manager RAT-based malware.[2][1]"
Enterprise,T1112,Modify Registry,Valak has the ability to modify the Registry key HKCU\Software\ApplicationContainer\Appsw64 to store information regarding the C2 server and downloads.[1][2][3]
Enterprise,T1027,Obfuscated Files or Information,Valak has the ability to base64 encode and XOR encrypt strings.[1][2][3]
Enterprise,T1027,Software Packing,Valak has used packed DLL payloads.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Valak has been delivered via spearphishing e-mails with password protected ZIP files.[2]
Enterprise,T1566,Phishing: Spearphishing Link,Valak has been delivered via malicious links in e-mail.[3]
Enterprise,T1057,Process Discovery,Valak has the ability to enumerate running processes on a compromised host.[1]
Enterprise,T1012,Query Registry,Valak can use the Registry for code updates and to collect credentials.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Valak has used scheduled tasks to execute additional payloads and to gain persistence on a compromised host.[1][2][3]
Enterprise,T1113,Screen Capture,Valak has the ability to take screenshots on a compromised host.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Valak can determine if a compromised host has security products installed.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Valak has used regsvr32.exe to launch malicious DLLs.[1][2]
Enterprise,T1082,System Information Discovery,Valak can determine the Windows version and computer name on a compromised host.[1][3]
Enterprise,T1016,System Network Configuration Discovery,Valak has the ability to identify the domain and the MAC and IP addresses of an infected machine.[1]
Enterprise,T1033,System Owner/User Discovery,Valak can gather information regarding the user.[1]
Enterprise,T1204,User Execution: Malicious File,Valak has been executed via Microsoft Word documents containing malicious macros.[1][2][3]
Enterprise,T1047,Windows Management Instrumentation,Valak can use wmic process call create in a scheduled task to launch plugins and for execution.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Xbash uses HTTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Xbash can create a Startup item for persistence if it determines it is on a Windows system.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Xbash can use scripts to invoke PowerShell to download a malicious PE executable or PE DLL for execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Xbash can execute malicious VBScript payloads on the victim’s machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Xbash can execute malicious JavaScript payloads on the victim’s machine.[1]
Enterprise,T1105,Ingress Tool Transfer,Xbash can download additional malicious files from its C2 server.[1]
Enterprise,T1053,Scheduled Task/Job: Cron,Xbash can create a cronjob for persistence if it determines it is on a Linux system.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Xbash can use mshta for executing scripts.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Xbash can use regsvr32 for executing scripts.[1]
Enterprise,T1016,System Network Configuration Discovery,Xbash can collect IP addresses and local intranet information from a victim’s machine.[1]
Enterprise,T1102,Web Service: Dead Drop Resolver,Xbash can obtain a webpage hosted on Pastebin to update its C2 domain list.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,StrongPity can use HTTP and HTTPS in C2 communications.[2][1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,StrongPity can compress and encrypt archived files into multiple .sft files with a repeated xor encryption scheme.[2][1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,StrongPity can use the HKCU\Software\Microsoft\Windows\CurrentVersion\Run Registry key for persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,StrongPity can use PowerShell to add files to the Windows Defender exclusions list.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,StrongPity has created new services and modified existing services for persistence.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,StrongPity has encrypted C2 traffic using SSL/TLS.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,StrongPity can exfiltrate collected documents through C2 channels.[2][1]
Enterprise,T1083,File and Directory Discovery,StrongPity can parse the hard drive on a compromised host to identify specific file extensions.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,StrongPity has the ability to hide the console window for its document search module from the user.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,StrongPity can add directories used by the malware to the Windows Defender exclusions list to prevent detection.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,StrongPity can delete previously exfiltrated files from the compromised host.[2][1]
Enterprise,T1105,Ingress Tool Transfer,StrongPity can download files to specified targets.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,StrongPity has named services to appear legitimate.[2][1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,StrongPity has been bundled with legitimate software installation files for disguise.[2]
Enterprise,T1027,Obfuscated Files or Information,StrongPity has used encrypted strings in its dropper component.[2][1]
Enterprise,T1057,Process Discovery,StrongPity can determine if a user is logged in by checking to see if explorer.exe is running.[2]
Enterprise,T1090,Proxy: Multi-hop Proxy,StrongPity can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,StrongPity can identify if ESET or BitDefender antivirus are installed before dropping its payload.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,StrongPity has been signed with self-signed certificates.[1]
Enterprise,T1082,System Information Discovery,StrongPity can identify the hard disk volume serial number on a compromised host.[2]
Enterprise,T1016,System Network Configuration Discovery,StrongPity can identify the IP address of a compromised host.[2]
Enterprise,T1569,System Services: Service Execution,StrongPity can install a service to execute itself as a service.[2][1]
Enterprise,T1204,User Execution: Malicious File,"StrongPity has been executed via compromised installation files for legitimate software including compression applications, security software, browsers, file recovery applications, and other tools and utilities.[2][1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SQLRat has used PowerShell to create a Meterpreter session.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SQLRat has used SQL to execute JavaScript and VB scripts on the host system.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SQLRat has scripts that are responsible for deobfuscating additional scripts.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SQLRat has used been observed deleting scripts once used.[1]
Enterprise,T1105,Ingress Tool Transfer,"SQLRat can make a direct SQL connection to a Microsoft database controlled by the attackers, retrieve an item from the bindata table, then write and execute the file on disk.[1]"
Enterprise,T1027,Obfuscated Files or Information,"SQLRat has used a character insertion obfuscation technique, making the script appear to contain Chinese characters.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,SQLRat has created scheduled tasks in %appdata%\Roaming\Microsoft\Templates\.[1]
Enterprise,T1204,User Execution: Malicious File,SQLRat relies on users clicking on an embedded image to execute the scripts.[1]
Enterprise,T1087,Account Discovery: Local Account,PUNCHBUGGY can gather user names.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PUNCHBUGGY enables remote interaction and can obtain additional code over HTTPS GET and POST requests.[2][3][1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,PUNCHBUGGY has Gzipped information and saved it to a random temp file before exfil.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PUNCHBUGGY has been observed using a Registry Run key.[3][1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PUNCHBUGGY has used PowerShell scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,PUNCHBUGGY has used python scripts.[1]
Enterprise,T1074,Data Staged: Local Data Staging,PUNCHBUGGY has saved information to a random temp file before exfil.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,PUNCHBUGGY has used PowerShell to decode base64-encoded assembly.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PUNCHBUGGY can delete files written to disk.[3][1]
Enterprise,T1105,Ingress Tool Transfer,PUNCHBUGGY can download additional files and payloads to compromised hosts.[3][1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,PUNCHBUGGY mimics filenames from %SYSTEM%\System32 to hide DLLs in %WINDIR% and/or %TEMP%.[3][1]
Enterprise,T1027,Obfuscated Files or Information,PUNCHBUGGY has hashed most its code's functions and encrypted payloads with base64 and XOR.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,PUNCHBUGGY can gather AVs registered in the system.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,PUNCHBUGGY can load a DLL using Rundll32.[3]
Enterprise,T1082,System Information Discovery,PUNCHBUGGY can gather system information such as computer names.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BBSRAT uses GET and POST requests over HTTP or HTTPS for command and control to obtain commands and send ZLIB compressed data back to the C2 server.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,BBSRAT can compress data with ZLIB prior to sending it back to the C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BBSRAT has been loaded through DLL side-loading of a legitimate Citrix executable that is set to persist through the Registry Run key location HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ssonsvr.exe.
Enterprise,T1543,Create or Modify System Process: Windows Service,BBSRAT can modify service configurations.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BBSRAT uses Expand to decompress a CAB file into executable content.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BBSRAT uses a custom encryption algorithm on data sent back to the C2 server over HTTP.[1]
Enterprise,T1083,File and Directory Discovery,BBSRAT can list file and directory information.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"DLL side-loading has been used to execute BBSRAT through a legitimate Citrix executable, ssonsvr.exe. The Citrix executable was dropped along with BBSRAT by the dropper.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,BBSRAT can delete files and directories.[1]
Enterprise,T1057,Process Discovery,BBSRAT can list running processes.[1]
Enterprise,T1055,Process Injection: Process Hollowing,BBSRAT has been seen loaded into msiexec.exe through process hollowing to hide its execution.[1]
Enterprise,T1569,System Services: Service Execution,"BBSRAT can start, stop, or delete services.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Gazer communicates with its C2 servers over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Gazer can establish persistence by creating a .lnk file in the Start menu.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,"Gazer can establish persistence by setting the value ""Shell"" with ""explorer.exe, %malware_pathfile%"" under the Registry key HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Gazer can establish persistence by creating a .lnk file in the Start menu or by modifying existing .lnk files to execute the malware through cmd.exe.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Gazer uses custom encryption for C2 that uses 3DES.[1][2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Gazer uses custom encryption for C2 that uses RSA.[1][2]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Gazer stores configuration items in alternate data streams (ADSs) if the Registry is not accessible.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Gazer has commands to delete files and persistence mechanisms from the victim.[1][2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,"For early Gazer versions, the compilation timestamp was faked.[1]"
Enterprise,T1105,Ingress Tool Transfer,Gazer can execute a task to download a file.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Gazer logs its actions into files that are encrypted with 3DES. It also uses RSA to encrypt resources.[2]
Enterprise,T1055,Process Injection,Gazer injects its communication module into an Internet accessible process through which it performs C2.[1][2]
Enterprise,T1055,Thread Execution Hijacking,Gazer performs thread execution hijacking to inject its orchestrator into a running thread from a remote process.[1][2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Gazer can establish persistence by creating a scheduled task.[1][2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,"Gazer versions are signed with various valid certificates; one was likely faked and issued by Comodo for ""Solid Loop Ltd,"" and another was issued for ""Ultimate Computer Support Ltd.""[1][2]"
Enterprise,T1033,System Owner/User Discovery,Gazer obtains the current user's security identifier.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Metamorfo has used HTTP for C2.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Metamorfo has configured persistence to the Registry ket HKCU\Software\Microsoft\Windows\CurrentVersion\Run, Spotify =% APPDATA%\Spotify\Spotify.exe and used .LNK files in the startup folder to achieve persistence.[1][3][4][2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Metamorfo has used cmd.exe /c to execute files.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Metamorfo has used VBS code on victims’ systems.[3]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Metamorfo includes payloads written in JavaScript.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Upon execution, Metamorfo has unzipped itself after being downloaded to the system and has performed string decryption.[1][3][2]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Metamorfo has encrypted C2 commands with AES-256.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Metamorfo's C2 communication has been encrypted using OpenSSL.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Metamorfo can send the data it collects to the C2 server.[2]
Enterprise,T1083,File and Directory Discovery,Metamorfo has searched the Program Files directories for specific folders and has searched for strings related to its mutexes.[1][4][3]
Enterprise,T1564,Hide Artifacts: Hidden Window,Metamorfo has hidden its GUI using the ShowWindow() WINAPI call.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Metamorfo has side-loaded its malicious DLL file.[1][3][2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Metamorfo has a function to kill processes associated with defenses and can prevent certain processes from launching.[1][3]
Enterprise,T1070,Indicator Removal on Host,"Metamorfo has a command to delete a Registry key it uses, \Software\Microsoft\Internet Explorer\notes.[3]"
Enterprise,T1070,File Deletion,Metamorfo has deleted itself from the system after execution.[1][4]
Enterprise,T1105,Ingress Tool Transfer,Metamorfo has used MSI files to download additional files to execute.[1][3][4][2]
Enterprise,T1056,Input Capture: Keylogging,Metamorfo has a command to launch a keylogger and capture keystrokes on the victim’s machine.[4][2]
Enterprise,T1056,Input Capture: GUI Input Capture,Metamorfo has displayed fake forms on top of banking sites to intercept credentials from victims.[3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Metamorfo has disguised an MSI file as the Adobe Acrobat Reader Installer and has masqueraded payloads as OneDrive, WhatsApp, or Spotify, for example.[1][2]"
Enterprise,T1112,Modify Registry,"Metamorfo has written process names to the Registry, disabled IE browser features, deleted Registry keys, and changed the ExtendedUIHoverTime key.[1][4][3][2]"
Enterprise,T1106,Native API,Metamorfo has used native WINAPI calls.[1][4]
Enterprise,T1027,Obfuscated Files or Information,Metamorfo has encrypted payloads and strings.[1][2]
Enterprise,T1027,Software Packing,Metamorfo has used VMProtect to pack and protect files.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,Metamorfo has been delivered to victims via emails with malicious HTML attachments.[3][2]
Enterprise,T1057,Process Discovery,Metamorfo has performed process name checks and has monitored applications.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Metamorfo has injected a malicious DLL into the Windows Media Player process (wmplayer.exe).[1]
Enterprise,T1113,Screen Capture,Metamorfo can collect screenshots of the victim’s machine.[3][2]
Enterprise,T1518,Software Discovery,Metamorfo has searched the compromised system for banking applications.[3][2]
Enterprise,T1518,Security Software Discovery,Metamorfo collects a list of installed antivirus software from the victim’s system.[4][2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Metamorfo has digitally signed executables using AVAST Software certificates.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Metamorfo has used mshta.exe to execute a HTA payload.[3]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Metamorfo has used MsiExec.exe to automatically execute files.[4][2]
Enterprise,T1082,System Information Discovery,Metamorfo has collected the hostname and operating system version from the compromised host.[3][4][2]
Enterprise,T1033,System Owner/User Discovery,Metamorfo has collected the username from the victim's machine.[2]
Enterprise,T1124,System Time Discovery,Metamorfo uses JavaScript to get the system time.[1]
Enterprise,T1204,User Execution: Malicious File,Metamorfo requires the user to double-click the executable to run the malicious HTA file or to download a malicious installer.[3][2]
Enterprise,T1497,Virtualization/Sandbox Evasion,"Metamorfo has embedded a ""vmdetect.exe"" executable to identify virtual machines at the beginning of execution.[1]"
Enterprise,T1102,Web Service: Dead Drop Resolver,Metamorfo has used YouTube to store and hide C&C server domains.[2]
Enterprise,T1102,Web Service: One-Way Communication,Metamorfo has downloaded a zip file for execution on the system.[1][3][4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Metamorfo has used HTTP for C2.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Metamorfo has configured persistence to the Registry ket HKCU\Software\Microsoft\Windows\CurrentVersion\Run, Spotify =% APPDATA%\Spotify\Spotify.exe and used .LNK files in the startup folder to achieve persistence.[1][3][4][2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Metamorfo has used cmd.exe /c to execute files.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Metamorfo has used VBS code on victims’ systems.[3]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Metamorfo includes payloads written in JavaScript.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Upon execution, Metamorfo has unzipped itself after being downloaded to the system and has performed string decryption.[1][3][2]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Metamorfo has encrypted C2 commands with AES-256.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Metamorfo's C2 communication has been encrypted using OpenSSL.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Metamorfo can send the data it collects to the C2 server.[2]
Enterprise,T1083,File and Directory Discovery,Metamorfo has searched the Program Files directories for specific folders and has searched for strings related to its mutexes.[1][4][3]
Enterprise,T1564,Hide Artifacts: Hidden Window,Metamorfo has hidden its GUI using the ShowWindow() WINAPI call.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Metamorfo has side-loaded its malicious DLL file.[1][3][2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Metamorfo has a function to kill processes associated with defenses and can prevent certain processes from launching.[1][3]
Enterprise,T1070,Indicator Removal on Host,"Metamorfo has a command to delete a Registry key it uses, \Software\Microsoft\Internet Explorer\notes.[3]"
Enterprise,T1070,File Deletion,Metamorfo has deleted itself from the system after execution.[1][4]
Enterprise,T1105,Ingress Tool Transfer,Metamorfo has used MSI files to download additional files to execute.[1][3][4][2]
Enterprise,T1056,Input Capture: Keylogging,Metamorfo has a command to launch a keylogger and capture keystrokes on the victim’s machine.[4][2]
Enterprise,T1056,Input Capture: GUI Input Capture,Metamorfo has displayed fake forms on top of banking sites to intercept credentials from victims.[3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Metamorfo has disguised an MSI file as the Adobe Acrobat Reader Installer and has masqueraded payloads as OneDrive, WhatsApp, or Spotify, for example.[1][2]"
Enterprise,T1112,Modify Registry,"Metamorfo has written process names to the Registry, disabled IE browser features, deleted Registry keys, and changed the ExtendedUIHoverTime key.[1][4][3][2]"
Enterprise,T1106,Native API,Metamorfo has used native WINAPI calls.[1][4]
Enterprise,T1027,Obfuscated Files or Information,Metamorfo has encrypted payloads and strings.[1][2]
Enterprise,T1027,Software Packing,Metamorfo has used VMProtect to pack and protect files.[4]
Enterprise,T1566,Phishing: Spearphishing Attachment,Metamorfo has been delivered to victims via emails with malicious HTML attachments.[3][2]
Enterprise,T1057,Process Discovery,Metamorfo has performed process name checks and has monitored applications.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Metamorfo has injected a malicious DLL into the Windows Media Player process (wmplayer.exe).[1]
Enterprise,T1113,Screen Capture,Metamorfo can collect screenshots of the victim’s machine.[3][2]
Enterprise,T1518,Software Discovery,Metamorfo has searched the compromised system for banking applications.[3][2]
Enterprise,T1518,Security Software Discovery,Metamorfo collects a list of installed antivirus software from the victim’s system.[4][2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Metamorfo has digitally signed executables using AVAST Software certificates.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Metamorfo has used mshta.exe to execute a HTA payload.[3]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Metamorfo has used MsiExec.exe to automatically execute files.[4][2]
Enterprise,T1082,System Information Discovery,Metamorfo has collected the hostname and operating system version from the compromised host.[3][4][2]
Enterprise,T1033,System Owner/User Discovery,Metamorfo has collected the username from the victim's machine.[2]
Enterprise,T1124,System Time Discovery,Metamorfo uses JavaScript to get the system time.[1]
Enterprise,T1204,User Execution: Malicious File,Metamorfo requires the user to double-click the executable to run the malicious HTA file or to download a malicious installer.[3][2]
Enterprise,T1497,Virtualization/Sandbox Evasion,"Metamorfo has embedded a ""vmdetect.exe"" executable to identify virtual machines at the beginning of execution.[1]"
Enterprise,T1102,Web Service: Dead Drop Resolver,Metamorfo has used YouTube to store and hide C&C server domains.[2]
Enterprise,T1102,Web Service: One-Way Communication,Metamorfo has downloaded a zip file for execution on the system.[1][3][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ThreatNeedle can be loaded into the Startup folder (%APPDATA%\Microsoft\Windows\Start Menu\Programs\Startup\OneDrives.lnk) as a Shortcut file for persistence.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,ThreatNeedle can run in memory and register its payload as a Windows service.[1]
Enterprise,T1005,Data from Local System,ThreatNeedle can collect data and files from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"ThreatNeedle can decrypt its payload using RC4, AES, or one-byte XORing.[1]"
Enterprise,T1083,File and Directory Discovery,ThreatNeedle can obtain file and directory information.[1]
Enterprise,T1105,Ingress Tool Transfer,ThreatNeedle can download additional tools to enable lateral movement.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,ThreatNeedle chooses its payload creation path from a randomly selected service name from netsvc.[1]
Enterprise,T1112,Modify Registry,ThreatNeedle can save its configuration data as the following RC4-encrypted Registry key: HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\GameCon.[1]
Enterprise,T1027,Obfuscated Files or Information,"ThreatNeedle has been compressed and obfuscated using RC4, AES, or XOR.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,ThreatNeedle has been distributed via a malicious Word document within a spearphishing email.[1]
Enterprise,T1082,System Information Discovery,ThreatNeedle can collect system profile information from a compromised host.[1]
Enterprise,T1204,User Execution: Malicious File,ThreatNeedle relies on a victim to click on a malicious document for initial execution.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Ebury has used DNS requests over UDP port 53 for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Ebury has used Python to implement its DGA.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,Ebury has encoded C2 traffic in hexadecimal format.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Ebury has verified C2 domain ownership by decrypting the TXT record using an embedded RSA public key.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"Ebury has encrypted C2 traffic using the client IP address, then encoded it as a hexadecimal string.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Ebury can exfiltrate SSH credentials through custom DNS queries.[4]
Enterprise,T1083,File and Directory Discovery,Ebury can list directory entries.[3]
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,Ebury has injected its dynamic library into descendent processes of sshd via LD_PRELOAD.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Ebury can disable SELinux Role-Based Access Control and deactivate PAM modules.[3]
Enterprise,T1562,Impair Defenses: Indicator Blocking,Ebury can hook logging functions so that nothing from the backdoor gets sent to the logging facility.[1]
Enterprise,T1027,Obfuscated Files or Information,Ebury has obfuscated its strings with a simple XOR encryption with a static key.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Ebury has installed a self-signed RPM package mimicking the original system package on RPM based systems.[1]
Enterprise,T1560,Archive Collected Data,Pillowmint has encrypted stolen credit card information with AES and further encoded it with Base64.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Pillowmint has used a PowerShell script to install a shim database.[1]
Enterprise,T1005,Data from Local System,Pillowmint has collected credit card data using native API functions.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Pillowmint has been decompressed by included shellcode prior to being launched.[1]
Enterprise,T1070,Indicator Removal on Host,Pillowmint can uninstall the malicious service from an infected machine.[1]
Enterprise,T1070,File Deletion,Pillowmint has deleted the filepath %APPDATA%\Intel\devmonsrv.exe.[1]
Enterprise,T1112,Modify Registry,Pillowmint has stored its malicious payload in the registry key HKLM\SOFTWARE\Microsoft\DRM.[1]
Enterprise,T1106,Native API,Pillowmint has used multiple native Windows APIs to execute and conduct process injections.[1]
Enterprise,T1027,Obfuscated Files or Information,Pillowmint has been compressed and stored within a registry key. Pillowmint has also obfuscated the AES key used for encryption.[1]
Enterprise,T1057,Process Discovery,Pillowmint can iterate through running processes every six seconds collecting a list of processes to capture from later.[1]
Enterprise,T1055,Process Injection: Asynchronous Procedure Call,Pillowmint has used the NtQueueApcThread syscall to inject code into svchost.exe.[1]
Enterprise,T1012,Query Registry,Pillowmint has used shellcode which reads code stored in the registry keys \REGISTRY\SOFTWARE\Microsoft\DRM using the native Windows API as well as read HKEY_LOCAL_MACHINE\System\CurrentControlSet\Services\Tcpip\Parameters\Interfaces as part of its C2.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,HTTPBrowser has used HTTP and HTTPS for command and control.[2][1]
Enterprise,T1071,Application Layer Protocol: DNS,HTTPBrowser has used DNS for command and control.[2][1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"HTTPBrowser has established persistence by setting the HKCU\Software\Microsoft\Windows\CurrentVersion\Run key value for wdm to the path of the executable. It has also used the Registry entry HKEY_USERS\Software\Microsoft\Windows\CurrentVersion\Run vpdn ""%ALLUSERPROFILE%\%APPDATA%\vpdn\VPDN_LU.exe"" to establish persistence.[4][1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HTTPBrowser is capable of spawning a reverse shell on a victim.[2]
Enterprise,T1083,File and Directory Discovery,"HTTPBrowser is capable of listing files, folders, and drives on a victim.[2][4]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"HTTPBrowser abuses the Windows DLL load order by using a legitimate Symantec anti-virus binary, VPDN_LU.exe, to load a malicious DLL that mimics a legitimate Symantec DLL, navlu.dll.[4]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,HTTPBrowser has used DLL side-loading.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,HTTPBrowser deletes its original installer file once installation is complete.[4]
Enterprise,T1105,Ingress Tool Transfer,HTTPBrowser is capable of writing a file to the compromised system from the C2 server.[2]
Enterprise,T1056,Input Capture: Keylogging,HTTPBrowser is capable of capturing keystrokes on victims.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,HTTPBrowser's installer contains a malicious file named navlu.dll to decrypt and run the RAT. navlu.dll is also the name of a legitimate Symantec DLL.[4]
Enterprise,T1027,Obfuscated Files or Information,HTTPBrowser's code may be obfuscated through structured exception handling and return-oriented programming.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Mythic supports HTTP-based C2 profiles.[3]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Mythic supports SMB-based peer-to-peer C2 profiles.[3]
Enterprise,T1071,Application Layer Protocol: DNS,Mythic supports DNS-based C2 profiles.[3]
Enterprise,T1132,Data Encoding,Mythic provides various transform functions to encode and/or randomize C2 data.[3]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Mythic supports SSL encrypted C2.[3]
Enterprise,T1090,Proxy: Internal Proxy,Mythic can leverage a peer-to-peer C2 profile between agents.[3]
Enterprise,T1090,Proxy: External Proxy,Mythic can leverage a modified SOCKS5 proxy to tunnel egress C2 traffic.[3]
Enterprise,T1090,Proxy: Domain Fronting,Mythic supports domain fronting via custom request headers.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FatDuke can be controlled via a custom C2 protocol over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FatDuke has used HKLM\SOFTWARE\Microsoft\CurrentVersion\Run to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,FatDuke has the ability to execute PowerShell scripts.[1]
Enterprise,T1005,Data from Local System,FatDuke can copy files and directories from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,FatDuke can decrypt AES encrypted C2 communications.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,FatDuke can AES encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,FatDuke can enumerate directories on target machines.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FatDuke can secure delete its DLL.[1]
Enterprise,T1036,Masquerading,FatDuke has attempted to mimic a compromised user's traffic by using the same user agent as the installed browser.[1]
Enterprise,T1106,Native API,FatDuke can call ShellExecuteW to open the default browser on the URL localhost.[1]
Enterprise,T1027,Obfuscated Files or Information,"FatDuke can use base64 encoding, string stacking, and opaque predicates for obfuscation.[1]"
Enterprise,T1027,Binary Padding,FatDuke has been packed with junk code and strings.[1]
Enterprise,T1027,Software Packing,FatDuke has been regularly repacked by its operators to create large binaries and evade detection.[1]
Enterprise,T1057,Process Discovery,FatDuke can list running processes on the localhost.[1]
Enterprise,T1090,Proxy: Internal Proxy,FatDuke can used pipes to connect machines with restricted internet access to remote machines via other infected hosts.[1]
Enterprise,T1012,Query Registry,FatDuke can get user agent strings for the default browser from HKCU\Software\Classes\http\shell\open\command.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,FatDuke can execute via rundll32.[1]
Enterprise,T1082,System Information Discovery,"FatDuke can collect the user name, Windows version, computer name, and available space on discs from a compromised host.[1]"
Enterprise,T1016,System Network Configuration Discovery,FatDuke can identify the MAC address on the target computer.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,FatDuke can turn itself on or off at random intervals.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BadPatch uses HTTP for C2.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,BadPatch uses SMTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BadPatch establishes a foothold by adding a link to the malware executable in the startup folder.[1]
Enterprise,T1005,Data from Local System,"BadPatch collects files from the local system that have the following extensions, then prepares them for exfiltration: .xls, .xlsx, .pdf, .mdb, .rar, .zip, .doc, .docx.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,BadPatch stores collected data in log files before exfiltration.[1]
Enterprise,T1083,File and Directory Discovery,BadPatch searches for files with specific file extensions.[1]
Enterprise,T1105,Ingress Tool Transfer,BadPatch can download and execute or update malware.[1]
Enterprise,T1056,Input Capture: Keylogging,BadPatch has a keylogging capability.[1]
Enterprise,T1113,Screen Capture,BadPatch captures screenshots in .jpg format and then exfiltrates them.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,BadPatch uses WMI to enumerate installed security products in the victim’s environment.[1]
Enterprise,T1082,System Information Discovery,"BadPatch collects the OS system, OS version, MAC address, and the computer name from the victim’s machine.[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"BadPatch attempts to detect if it is being run in a Virtual Machine (VM) using a WMI query for disk drive name, BIOS, and motherboard information. [1]"
Enterprise,T1087,Account Discovery: Local Account,HyperStack can enumerate all account names on a remote share.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,HyperStack has used RSA encryption for C2 communications.[1]
Enterprise,T1112,Modify Registry,HyperStack can add the name of its communication pipe to HKLM\SYSTEM\CurrentControlSet\Services\lanmanserver\parameters\NullSessionPipes.[1]
Enterprise,T1106,Native API,HyperStack can use Windows API's ConnectNamedPipe and WNetAddConnection2 to detect incoming connections and connect to remote shares.[1]
Enterprise,T1078,Valid Accounts: Default Accounts,HyperStack can use default credentials to connect to IPC$ shares on remote machines.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Spark has used HTTP POST requests to communicate with its C2 server to receive commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Spark can use cmd.exe to run commands.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Spark has encoded communications with the C2 server with base64.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Spark has used a custom XOR algorithm to decrypt the payload.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Spark has exfiltrated data over the C2 channel.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Spark has been packed with Enigma Protector to obfuscate its contents.[1]
Enterprise,T1082,System Information Discovery,"Spark can collect the hostname, keyboard layout, and language from the system.[1]"
Enterprise,T1033,System Owner/User Discovery,Spark has run the whoami command and has a built-in command to identify the user logged in.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: User Activity Based Checks,Spark has used a splash screen to check whether an user actively clicks on the screen before running malicious code.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Smoke Loader uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Smoke Loader adds a Registry Run key for persistence and adds a script in the Startup folder to deploy the payload.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Smoke Loader adds a Visual Basic script in the Startup folder to deploy the payload.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Smoke Loader searches for credentials stored from web browsers.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Smoke Loader deobfuscates its code.[3]
Enterprise,T1083,File and Directory Discovery,Smoke Loader recursively searches through directories for files.[3]
Enterprise,T1105,Ingress Tool Transfer,Smoke Loader downloads a new version of itself once it has installed. It also downloads additional plugins.[1]
Enterprise,T1027,Obfuscated Files or Information,Smoke Loader uses a simple one-byte XOR method to obfuscate values in the malware.[1][3]
Enterprise,T1055,Process Injection,Smoke Loader injects into the Internet Explorer process.[3]
Enterprise,T1055,Process Hollowing,Smoke Loader spawns a new copy of c:\windows\syswow64\explorer.exe and then replaces the executable code in memory with malware.[1][2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Smoke Loader launches a scheduled task.[3]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Smoke Loader scans processes to perform anti-VM checks. [3]
Enterprise,T1555,Credentials from Password Stores,"LaZagne can obtain credentials from databases, mail, and WiFi across multiple platforms.[1]"
Enterprise,T1555,Keychain,LaZagne can obtain credentials from macOS Keychains.[1]
Enterprise,T1555,Credentials from Web Browsers,"LaZagne can obtain credentials from web browsers such as Google Chrome, Internet Explorer, and Firefox.[1]"
Enterprise,T1555,Windows Credential Manager,LaZagne can obtain credentials from Vault files.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,LaZagne can perform credential dumping from memory to obtain account and password information.[1]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,LaZagne can perform credential dumping from LSA secrets to obtain account and password information.[1]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,LaZagne can perform credential dumping from MSCache to obtain account and password information.[1]
Enterprise,T1003,OS Credential Dumping: Proc Filesystem,LaZagne can obtain credential information running Linux processes.[1]
Enterprise,T1003,OS Credential Dumping: /etc/passwd and /etc/shadow,LaZagne can obtain credential information from /etc/shadow using the shadow.py module.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ThiefQuest uploads files via unencrypted HTTP. [2][3]
Enterprise,T1059,Command and Scripting Interpreter: AppleScript,ThiefQuest uses AppleScript's osascript -e command to launch ThiefQuest's persistence via Launch Agent and Launch Daemon. [5]
Enterprise,T1543,Create or Modify System Process: Launch Agent,ThiefQuest installs a launch item using an embedded encrypted launch agent property list template. The plist file is installed in the ~/Library/LaunchAgents/ folder and configured with the path to the persistent binary located in the ~/Library/ folder.[5]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,"When running with root privileges after a Launch Agent is installed, ThiefQuest installs a plist file to the /Library/LaunchDaemons/ folder with the RunAtLoad key set to true establishing persistence as a Launch Daemon. [5]"
Enterprise,T1041,Exfiltration Over C2 Channel,ThiefQuest exfiltrates targeted file extensions in the /Users/ folder to the command and control server via unencrypted HTTP. Network packets contain a string with two pieces of information: a file path and the contents of the file in a base64 encoded string.[2][3]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,ThiefQuest hides a copy of itself in the user's ~/Library directory by using a . at the beginning of the file name followed by 9 random characters.[5]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,ThiefQuest uses the function kill_unwanted to obtain a list of running processes and kills each process matching a list of security related processes.[5]
Enterprise,T1105,Ingress Tool Transfer,ThiefQuest can download and execute payloads in-memory or from disk.[2]
Enterprise,T1056,Input Capture: Keylogging,ThiefQuest uses the CGEventTap functions to perform keylogging.[6]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,ThiefQuest prepends a copy of itself to the beginning of an executable file while maintaining the name of the executable.[2][3]
Enterprise,T1106,Native API,ThiefQuest uses various API to perform behaviors such as executing payloads and performing local enumeration.[2]
Enterprise,T1057,Process Discovery,ThiefQuest obtains a list of running processes using the function kill_unwanted.[5]
Enterprise,T1518,Software Discovery: Security Software Discovery,"ThiefQuest uses the kill_unwanted function to get a list of running processes, compares each process with an encrypted list of ""unwanted"" security related programs, and kills the processes for security related programs.[5]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"ThiefQuest invokes time call to check the system's time, executes a sleep command, invokes a second time call, and then compares the time difference between the two time calls and the amount of time the system slept to identify the sandbox.[5]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Windows Credential Editor can dump credentials.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PoetRAT has used HTTP and HTTPs for C2 communications.[2]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,PoetRAT has used FTP for C2 communications.[2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,PoetRAT has the ability to compress files with zip.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PoetRAT has added a registry key in the hive for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter,PoetRAT has executed a Lua script through a Lua interpreter for Windows.[2]
Enterprise,T1059,Windows Command Shell,PoetRAT has called cmd through a Word document macro.[2]
Enterprise,T1059,Visual Basic,PoetRAT has used Word documents with VBScripts to execute malicious activities.[1][2]
Enterprise,T1059,Python,PoetRAT was executed with a Python script and worked in conjunction with additional Python-based post-exploitation tools.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,PoetRAT has used a Python tool named Browdec.exe to steal browser credentials.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,PoetRAT has used LZMA and base64 libraries to decode obfuscated scripts.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,PoetRAT used TLS to encrypt command and control (C2) communications.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,PoetRAT has exfiltrated data over the C2 channel.[2]
Enterprise,T1083,File and Directory Discovery,PoetRAT has the ability to list files upon receiving the ls command from C2.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,PoetRAT has the ability to hide and unhide files.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PoetRAT has the ability to overwrite scripts and delete itself if a sandbox environment is detected.[1]
Enterprise,T1105,Ingress Tool Transfer,PoetRAT has the ability to copy files and download/upload files into C2 channels using FTP and HTTPS.[1][2]
Enterprise,T1056,Input Capture: Keylogging,PoetRAT has used a Python tool named klog.exe for keylogging.[1]
Enterprise,T1112,Modify Registry,PoetRAT has made registry modifications to alter its behavior upon execution.[1]
Enterprise,T1027,Obfuscated Files or Information,PoetRAT has used a custom encryption scheme for communication between scripts and pyminifier to obfuscate scripts.[1][2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"PoetRAT used voStro.exe, a compiled pypykatz (Python version of Mimikatz), to steal credentials.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,PoetRAT was distributed via malicious Word documents.[1]
Enterprise,T1057,Process Discovery,PoetRAT has the ability to list all running processes.[1]
Enterprise,T1018,Remote System Discovery,PoetRAT used Nmap for remote system discovery.[1]
Enterprise,T1113,Screen Capture,PoetRAT has the ability to take screen captures.[1][3]
Enterprise,T1082,System Information Discovery,PoetRAT has the ability to gather information about the compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,"PoetRAT sent username, computer name, and the previously generated UUID in reply to a ""who"" command from C2.[1]"
Enterprise,T1204,User Execution: Malicious File,PoetRAT has used spearphishing attachments to infect victims.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"PoetRAT checked the size of the hard drive to determine if it was being run in a sandbox environment. In the event of sandbox detection, it would delete itself by overwriting the malware scripts with the contents of ""License.txt"" and exiting.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,RainyDay can use HTTP in C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RainyDay can use the Windows Command Shell for execution.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,RainyDay can use services to establish persistence.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,RainyDay can use tools to collect credentials from web browsers.[1]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,RainyDay can use the QuarksPwDump tool to obtain local passwords and domain cached credentials.[1]
Enterprise,T1005,Data from Local System,RainyDay can use a file exfiltration tool to collect recently changed files on a compromised host.[1]
Enterprise,T1074,Data Staged: Local Data Staging,RainyDay can use a file exfiltration tool to copy files to C:\ProgramData\Adobe\temp prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RainyDay can decrypt its payload via a XOR key.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,RainyDay can use RC4 to encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,RainyDay can use a file exfiltration tool to collect recently changed files with specific extensions.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,RainyDay can use side-loading to run malicious executables.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RainyDay has the ability to uninstall itself by deleting its service and files.[1]
Enterprise,T1105,Ingress Tool Transfer,RainyDay can download files to a compromised host.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"RainyDay has named services and scheduled tasks to appear benign including ""ChromeCheck"" and ""googleupdate.""[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"RainyDay has used names to mimic legitimate software including ""vmtoolsd.exe"" to spoof Vmtools.[1]"
Enterprise,T1106,Native API,The file collection tool used by RainyDay can utilize native API including ReadDirectoryChangeW for folder monitoring.[1]
Enterprise,T1027,Obfuscated Files or Information,RainyDay has downloaded as a XOR-encrypted payload.[1]
Enterprise,T1057,Process Discovery,RainyDay can enumerate processes on a target system.[1]
Enterprise,T1090,Proxy,RainyDay can use proxy tools including boost_proxy_client for reverse proxy functionality.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,RainyDay can use scheduled tasks to achieve persistence.[1]
Enterprise,T1113,Screen Capture,RainyDay has the ability to capture screenshots.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PowerShower has sent HTTP GET and POST requests to C2 servers to send information and receive instructions.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"PowerShower has used 7Zip to compress .txt, .pdf, .xls or .doc files prior to exfiltration.[2]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PowerShower sets up persistence with a Registry run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PowerShower is a backdoor written in PowerShell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,PowerShower has the ability to save and execute VBScript.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,PowerShower has the ability to encode C2 communications with base64 encoding.[1][2]
Enterprise,T1041,Exfiltration Over C2 Channel,"PowerShower has used a PowerShell document stealer module to pack and exfiltrate .txt, .pdf, .xls or .doc files smaller than 5MB that were modified during the past two days.[2]"
Enterprise,T1564,Hide Artifacts: Hidden Window,PowerShower has added a registry key so future powershell.exe instances are spawned with coordinates for a window position off-screen by default.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PowerShower has the ability to remove all files created during the dropper process.[1]
Enterprise,T1112,Modify Registry,"PowerShower has added a registry key so future powershell.exe instances are spawned off-screen by default, and has removed all registry entries that are left behind during the dropper process.[1]"
Enterprise,T1057,Process Discovery,PowerShower has the ability to deploy a reconnaissance module to retrieve a list of the active processes.[2]
Enterprise,T1082,System Information Discovery,PowerShower has collected system information on the infected host.[1]
Enterprise,T1016,System Network Configuration Discovery,PowerShower has the ability to identify the current Windows domain of the infected host.[2]
Enterprise,T1033,System Owner/User Discovery,PowerShower has the ability to identify the current user on the infected host.[2]
Enterprise,T1105,Ingress Tool Transfer,SHUTTERSPEED can download and execute an arbitary executable.[1]
Enterprise,T1113,Screen Capture,SHUTTERSPEED can capture screenshots.[1]
Enterprise,T1082,System Information Discovery,SHUTTERSPEED can collect system information.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Avenger has the ability to use HTTP in communication with C2.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Avenger has the ability to decrypt files downloaded from C2.[1]
Enterprise,T1083,File and Directory Discovery,Avenger has the ability to browse files in directories such as Program Files and the Desktop.[1]
Enterprise,T1105,Ingress Tool Transfer,Avenger has the ability to download files from C2 to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information,Avenger has the ability to XOR encrypt files to be sent to C2.[1]
Enterprise,T1027,Steganography,Avenger can extract backdoor malware from downloaded images.[1]
Enterprise,T1057,Process Discovery,Avenger has the ability to use Tasklist to identify running processes.[1]
Enterprise,T1055,Process Injection,Avenger has the ability to inject shellcode into svchost.exe.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Avenger has the ability to identify installed anti-virus products on a compromised host.[1]
Enterprise,T1082,System Information Discovery,Avenger has the ability to identify the host volume ID and the OS architecture on a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,Avenger can identify the domain of the compromised host.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,EKANS stops processes related to security and management software.[1][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,EKANS has been disguised as update.exe to appear as a valid executable.[1]
Enterprise,T1027,Obfuscated Files or Information,EKANS uses encoded strings in its process kill list.[3]
Enterprise,T1057,Process Discovery,EKANS looks for processes from a hard-coded list.[1][3][4]
Enterprise,T1016,System Network Configuration Discovery,EKANS can determine the domain of a compromised host.[4]
Enterprise,T1047,Windows Management Instrumentation,EKANS can use Windows Mangement Instrumentation (WMI) calls to execute operations.[1]
Enterprise,T1105,Ingress Tool Transfer,ftp may be abused by adversaries to transfer tools or files from an external system into a compromised environment.[1][2]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,XAgentOSX contains the ftpUpload function to use the FTPManager:uploadFile method to upload files from the target system.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,XAgentOSX contains the getFirefoxPassword function to attempt to locate Firefox passwords.[1]
Enterprise,T1083,File and Directory Discovery,XAgentOSX contains the readFiles function to return a detailed listing (sometimes recursive) of a specified directory.[1] XAgentOSX contains the showBackupIosFolder function to check for IOS device backups by running ls -la ~/Library/Application\ Support/MobileSync/Backup/.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,XAgentOSX contains the deletFileFromPath function to delete a specified file using the NSFileManager:removeFileAtPath method.[1]
Enterprise,T1056,Input Capture: Keylogging,"XAgentOSX contains keylogging functionality that will monitor for active application windows and write them to the log, it can handle special characters, and it will buffer by default 50 characters before sending them out over the C2 infrastructure.[1]"
Enterprise,T1106,Native API,XAgentOSX contains the execFile function to execute a specified file on the system using the NSTask:launch method.[1]
Enterprise,T1057,Process Discovery,XAgentOSX contains the getProcessList function to run ps aux to get running processes.[1]
Enterprise,T1113,Screen Capture,"XAgentOSX contains the takeScreenShot (along with startTakeScreenShot and stopTakeScreenShot) functions to take screenshots using the CGGetActiveDisplayList, CGDisplayCreateImage, and NSImage:initWithCGImage methods.[1]"
Enterprise,T1082,System Information Discovery,XAgentOSX contains the getInstalledAPP function to run ls -la /Applications to gather what applications are installed.[1]
Enterprise,T1033,System Owner/User Discovery,XAgentOSX contains the getInfoOSX function to return the OS X version as well as the current user.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,MESSAGETAP has XOR-encrypted and stored contents of SMS messages that matched its target list. [1]
Enterprise,T1074,Data Staged: Local Data Staging,MESSAGETAP stored targeted SMS messages that matched its target list in CSV files on the compromised system.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"After checking for the existence of two files, keyword_parm.txt and parm.txt, MESSAGETAP XOR decodes and read the contents of the files. [1]"
Enterprise,T1083,File and Directory Discovery,MESSAGETAP checks for the existence of two configuration files (keyword_parm.txt and parm.txt) and attempts to read the files every 30 seconds.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Once loaded into memory, MESSAGETAP deletes the keyword_parm.txt and parm.txt configuration files from disk. [1]"
Enterprise,T1049,System Network Connections Discovery,"After loading the keyword and phone data files, MESSAGETAP begins monitoring all network connections to and from the victim server. [1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,CARROTBAT has the ability to execute command line arguments on a compromised host.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,CARROTBAT has the ability to delete downloaded files from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,CARROTBAT has the ability to download and execute a remote file via certutil.[1]
Enterprise,T1027,Obfuscated Files or Information,CARROTBAT has the ability to download a base64 encoded payload and execute obfuscated commands on the infected host.[1]
Enterprise,T1082,System Information Discovery,CARROTBAT has the ability to determine the operating system of the compromised host and whether Windows is being run with x86 or x64 architecture.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Ixeshe uses HTTP for command and control.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Ixeshe can achieve persistence by adding itself to the HKCU\Software\Microsoft\Windows\CurrentVersion\Run Registry key.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Ixeshe is capable of executing commands via cmd.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Ixeshe uses custom Base64 encoding schemes to obfuscate command and control traffic in the message body of HTTP requests.[1][2]
Enterprise,T1005,Data from Local System,Ixeshe can collect data from a local system.[2]
Enterprise,T1083,File and Directory Discovery,Ixeshe can list file and directory information.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Ixeshe sets its own executable file's attributes to hidden.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Ixeshe has a command to delete a file from the machine.[2]
Enterprise,T1105,Ingress Tool Transfer,Ixeshe can download and execute additional files.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Ixeshe has used registry values and file names associated with Adobe software, such as AcroRd32.exe.[2]"
Enterprise,T1057,Process Discovery,Ixeshe can list running processes.[2]
Enterprise,T1082,System Information Discovery,Ixeshe collects the computer name of the victim's system during the initial infection.[2]
Enterprise,T1016,System Network Configuration Discovery,"Ixeshe enumerates the IP address, network proxy settings, and domain name from a victim's system.[2]"
Enterprise,T1033,System Owner/User Discovery,Ixeshe collects the username from the victim’s machine.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Raindrop decrypted its Cobalt Strike payload using an AES-256 encryption algorithm in CBC mode with a unique key per sample.[1][2]
Enterprise,T1036,Masquerading,Raindrop was built to include a modified version of 7-Zip source code (including associated export names) and Far Manager source code.[1][2]
Enterprise,T1036,Match Legitimate Name or Location,Raindrop was installed under names that resembled legitimate Windows file and directory names.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Raindrop encrypted its payload using a simple XOR algorithm with a single-byte key.[1][2]
Enterprise,T1027,Software Packing,"Raindrop used a custom packer for its Cobalt Strike payload, which was compressed using the LZMA algorithm.[1][2]"
Enterprise,T1027,Steganography,Raindrop used steganography to locate the start of its encoded payload within legitimate 7-Zip code.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"After initial installation, Raindrop runs a computation to delay execution.[1]"
Enterprise,T1087,Account Discovery: Local Account,PowerSploit's Get-ProcessTokenGroup Privesc-PowerUp module can enumerate all SIDs associated with its current token.[1][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PowerSploit's New-UserPersistenceOption Persistence argument can be used to establish via the HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run Registry key.[1][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Security Support Provider,PowerSploit's Install-SSP Persistence module can be used to establish by installing a SSP DLL.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PowerSploit modules are written in and executed via PowerShell.[1][3]
Enterprise,T1543,Create or Modify System Process: Windows Service,"PowerSploit contains a collection of Privesc-PowerUp modules that can discover and replace/modify service binaries, paths, and configs.[1][3]"
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,PowerSploit contains a collection of Exfiltration modules that can harvest credentials from Windows vault credential objects.[1][3]
Enterprise,T1005,Data from Local System,"PowerSploit contains a collection of Exfiltration modules that can access data from local files, volumes, and processes.[1][3]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,PowerSploit contains a collection of Privesc-PowerUp modules that can discover and exploit DLL hijacking opportunities in services and processes.[1][3]
Enterprise,T1574,Hijack Execution Flow: Path Interception by PATH Environment Variable,PowerSploit contains a collection of Privesc-PowerUp modules that can discover and exploit path interception opportunities in the PATH environment variable.[1][3]
Enterprise,T1574,Hijack Execution Flow: Path Interception by Search Order Hijacking,PowerSploit contains a collection of Privesc-PowerUp modules that can discover and exploit search order hijacking vulnerabilities.[1][3]
Enterprise,T1574,Hijack Execution Flow: Path Interception by Unquoted Path,PowerSploit contains a collection of Privesc-PowerUp modules that can discover and exploit unquoted path vulnerabilities.[1][3]
Enterprise,T1056,Input Capture: Keylogging,PowerSploit's Get-Keystrokes Exfiltration module can log keystrokes.[1][3]
Enterprise,T1027,Obfuscated Files or Information,PowerSploit contains a collection of ScriptModification modules that compress and encode scripts and payloads.[1][3]
Enterprise,T1027,Indicator Removal from Tools,PowerSploit's Find-AVSignature AntivirusBypass module can be used to locate single byte anti-virus signatures.[1][3]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,PowerSploit contains a collection of Exfiltration modules that can harvest credentials using Mimikatz.[1][3]
Enterprise,T1057,Process Discovery,PowerSploit's Get-ProcessTokenPrivilege Privesc-PowerUp module can enumerate privileges for a given process.[1][3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"PowerSploit contains a collection of CodeExecution modules that inject code (DLL, shellcode) into a process.[1][3]"
Enterprise,T1012,Query Registry,PowerSploit contains a collection of Privesc-PowerUp modules that can query Registry keys for potential opportunities.[1][3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,PowerSploit's New-UserPersistenceOption Persistence argument can be used to establish via a Scheduled Task/Job.[1][3]
Enterprise,T1113,Screen Capture,PowerSploit's Get-TimedScreenshot Exfiltration module can take screenshots at regular intervals.[1][3]
Enterprise,T1047,Windows Management Instrumentation,PowerSploit's Invoke-WmiCommand CodeExecution module uses WMI to execute and retrieve the output from a PowerShell payload.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Trojan.Karagany can communicate with C2 via HTTP POST requests.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Trojan.Karagany can create a link to itself in the Startup folder to automatically start itself upon system restart.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Trojan.Karagany can perform reconnaissance commands on a victim machine via a cmd.exe process.[2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Trojan.Karagany can steal data and credentials from browsers.[2]
Enterprise,T1074,Data Staged: Local Data Staging,Trojan.Karagany can create directories to store plugin output and stage data for exfiltration.[1][2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Trojan.Karagany can secure C2 communications with SSL and TLS.[2]
Enterprise,T1083,File and Directory Discovery,Trojan.Karagany can enumerate files and directories on a compromised host.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Trojan.Karagany has used plugins with a self-delete capability.[2]
Enterprise,T1105,Ingress Tool Transfer,"Trojan.Karagany can upload, download, and execute files on the victim.[1][2]"
Enterprise,T1056,Input Capture: Keylogging,Trojan.Karagany can capture keystrokes on a compromised host.[2]
Enterprise,T1027,Obfuscated Files or Information,Trojan.Karagany can base64 encode and AES-128-CBC encrypt data prior to transmission.[2]
Enterprise,T1027,Software Packing,Trojan.Karagany samples sometimes use common binary packers such as UPX and Aspack on top of a custom Delphi binary packer.[1][2]
Enterprise,T1003,OS Credential Dumping,Trojan.Karagany can dump passwords and save them into \ProgramData\Mail\MailAg\pwds.txt.[1]
Enterprise,T1057,Process Discovery,Trojan.Karagany can use Tasklist to collect a list of running tasks.[1][2]
Enterprise,T1055,Process Injection: Thread Execution Hijacking,Trojan.Karagany can inject a suspended thread of its own process into a new process and initiate via the ResumeThread API.[2]
Enterprise,T1113,Screen Capture,Trojan.Karagany can take a desktop screenshot and save the file into \ProgramData\Mail\MailAg\shot.png.[1][2]
Enterprise,T1082,System Information Discovery,"Trojan.Karagany can capture information regarding the victim's OS, security, and hardware configuration.[2]"
Enterprise,T1016,System Network Configuration Discovery,Trojan.Karagany can gather information on the network configuration of a compromised host.[2]
Enterprise,T1049,System Network Connections Discovery,Trojan.Karagany can use netstat to collect a list of network connections.[2]
Enterprise,T1033,System Owner/User Discovery,Trojan.Karagany can gather information about the user on a compromised host.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Trojan.Karagany can detect commonly used and generic virtualization platforms based primarily on drivers and file paths.[2]
Enterprise,T1059,Command and Scripting Interpreter,Bandook can support commands to execute Java-based payloads.[3]
Enterprise,T1059,PowerShell,Bandook has used PowerShell loaders as part of execution.[3]
Enterprise,T1059,Windows Command Shell,Bandook is capable of spawning a Windows command shell.[1][3]
Enterprise,T1059,Visual Basic,Bandook has used malicious VBA code against the target system.[3]
Enterprise,T1059,Python,Bandook can support commands to execute Python-based payloads.[3]
Enterprise,T1005,Data from Local System,Bandook can collect local files from the system .[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Bandook has decoded its PowerShell script.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Bandook has used AES encryption for C2 communication.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,Bandook can upload files from a victim's machine over the C2 channel.[3]
Enterprise,T1083,File and Directory Discovery,Bandook has a command to list files on a system.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Bandook has a command to delete a file.[3]
Enterprise,T1105,Ingress Tool Transfer,Bandook can download files to the system.[3]
Enterprise,T1056,Input Capture: Keylogging,Bandook contains keylogging capabilities.[4]
Enterprise,T1106,Native API,Bandook has used the ShellExecuteW() function call.[3]
Enterprise,T1027,Obfuscated Files or Information: Steganography,Bandook has used .PNG images within a zip file to build the executable. [3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Bandook is delivered via a malicious Word document inside a zip file.[3]
Enterprise,T1055,Process Injection: Process Hollowing,Bandook has been launched by starting iexplore.exe and replacing it with Bandook's payload.[2][1][3]
Enterprise,T1113,Screen Capture,Bandook is capable of taking an image of and uploading the current desktop.[2][3]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Bandook was signed with valid Certum certificates.[3]
Enterprise,T1082,System Information Discovery,Bandook can collect information about the drives available on the system.[3]
Enterprise,T1016,System Network Configuration Discovery,Bandook has a command to get the public IP address from a system.[3]
Enterprise,T1204,User Execution: Malicious File,Bandook has used lure documents to convince the user to enable macros.[3]
Enterprise,T1087,Account Discovery: Domain Account,CrackMapExec can enumerate the domain user accounts on a targeted system.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,CrackMapExec can execute PowerShell commands via WMI.[1]
Enterprise,T1083,File and Directory Discovery,CrackMapExec can discover specified filetypes and log files on a targeted system.[1]
Enterprise,T1112,Modify Registry,CrackMapExec can create a registry key using wdigest.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,CrackMapExec can dump usernames and hashed passwords from the SAM.[1]
Enterprise,T1003,OS Credential Dumping: NTDS,"CrackMapExec can dump hashed passwords associated with Active Directory using Windows' Directory Replication Services API (DRSUAPI), or Volume Shadow Copy.[1]"
Enterprise,T1003,OS Credential Dumping: LSA Secrets,CrackMapExec can dump hashed passwords from LSA secrets for the targeted system.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,CrackMapExec can gather the user accounts within domain groups.[1]
Enterprise,T1018,Remote System Discovery,"CrackMapExec can discover active IP addresses, along with the machine name, within a targeted network.[1]"
Enterprise,T1053,Scheduled Task/Job: At,CrackMapExec can set a scheduled task on the target system to execute commands remotely using at.[1]
Enterprise,T1082,System Information Discovery,CrackMapExec can enumerate the system drives and associated system name.[1]
Enterprise,T1016,System Network Configuration Discovery,CrackMapExec can collect DNS information from the targeted system.[1]
Enterprise,T1049,System Network Connections Discovery,CrackMapExec can discover active sessions for a targeted system.[1]
Enterprise,T1047,Windows Management Instrumentation,CrackMapExec can execute remote commands using Windows Management Instrumentation.[1]
Enterprise,T1560,Archive Collected Data,Proton zips up files before exfiltrating them.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Proton uses macOS' .command file type to script actions.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Proton persists via Launch Agent.[1]
Enterprise,T1555,Credentials from Password Stores: Keychain,Proton gathers credentials in files for keychains.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Proton gathers credentials for Google Chrome.[1]
Enterprise,T1555,Credentials from Password Stores: Password Managers,Proton gathers credentials in files for 1password.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Proton uses an encrypted file to store commands and configuration values.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Proton kills security tools like Wireshark that are running.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Linux or Mac System Logs,Proton removes logs from /var/logs and /Library/logs.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Proton removes all files in the /tmp directory.[1]
Enterprise,T1056,Input Capture: Keylogging,Proton uses a keylogger to capture keystrokes.[1]
Enterprise,T1056,Input Capture: GUI Input Capture,Proton prompts users for their credentials.[1]
Enterprise,T1021,Remote Services: VNC,Proton uses VNC to connect into systems.[1]
Enterprise,T1113,Screen Capture,Proton captures the content of the desktop with the screencapture binary.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,One variant of CloudDuke uses HTTP and HTTPS for C2.[1]
Enterprise,T1105,Ingress Tool Transfer,CloudDuke downloads and executes additional malware from either a Web address or a Microsoft OneDrive account.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,One variant of CloudDuke uses a Microsoft OneDrive account to exchange commands and stolen data with its operators.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,CosmicDuke can use HTTP or HTTPS for command and control to hard-coded C2 servers.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,"CosmicDuke uses Windows services typically named ""javamtsup"" for persistence.[2]"
Enterprise,T1555,Credentials from Password Stores,"CosmicDuke collects user credentials, including passwords, for various programs including popular instant messaging applications and email clients as well as WLAN keys.[1]"
Enterprise,T1555,Credentials from Web Browsers,"CosmicDuke collects user credentials, including passwords, for various programs including Web browsers.[1]"
Enterprise,T1005,Data from Local System,CosmicDuke steals user files from local hard drives with file extensions that match a predefined list.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CosmicDuke contains a custom version of the RC4 algorithm that includes a programming error.[2]
Enterprise,T1083,File and Directory Discovery,CosmicDuke searches attached and mounted drives for file extensions and keywords that match a predefined list.[2]
Enterprise,T1056,Input Capture: Keylogging,CosmicDuke uses a keylogger.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,CosmicDuke collects Windows account hashes.[1]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,CosmicDuke collects LSA secrets.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"CosmicDuke uses scheduled tasks typically named ""Watchmon Service"" for persistence.[2]"
Enterprise,T1113,Screen Capture,CosmicDuke takes periodic screenshots and exfiltrates them.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GoldMax has used HTTPS and HTTP GET requests with custom HTTP cookies for C2.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"GoldMax can spawn a command shell, and execute native commands.[1][2]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,GoldMax has decoded and decrypted the configuration file when executed.[1][2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,GoldMax has RSA-encrypted its communication with the C2 server.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,GoldMax can exfiltrate files over the existing C2 channel.[1][2]
Enterprise,T1105,Ingress Tool Transfer,GoldMax can download and execute additional files.[1][2]
Enterprise,T1036,Masquerading: Masquerade Task or Service,GoldMax has impersonated systems management software to avoid detection.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"GoldMax has used filenames that matched the system name, and appeared as a scheduled task impersonating systems management software within the corresponding ProgramData subfolder.[1][3]"
Enterprise,T1027,Obfuscated Files or Information,GoldMax has written AES-encrypted and Base64-encoded configuration files to disk.[1][2]
Enterprise,T1027,Software Packing,GoldMax has been packed for obfuscation.[2]
Enterprise,T1053,Scheduled Task/Job: Cron,The GoldMax Linux variant has used a crontab entry with a @reboot line to gain persistence.[3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,GoldMax has used scheduled tasks to maintain persistence.[1]
Enterprise,T1016,System Network Configuration Discovery,GoldMax retrieved a list of the system's network interface after execution.[1]
Enterprise,T1124,System Time Discovery,"GoldMax can check the current date-time value of the compromised system, comparing it to the hardcoded execution trigger and can send the current timestamp to the C2 server.[1][2]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,GoldMax will check if it is being run in a virtualized environment by comparing the collected MAC address to c8:27:cc:c2:37:5a.[1][2]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"GoldMax has set an execution trigger date and time, stored as an ASCII Unix/Epoch time value.[1]"
Enterprise,T1105,Ingress Tool Transfer,can download and execute a second-stage payload.[1]
Enterprise,T1082,System Information Discovery,"can collect system information, including computer name, system manufacturer, IsDebuggerPresent state, and execution path.[1]"
Enterprise,T1033,System Owner/User Discovery,can collect the victim user name.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,DropBook can execute arbitrary shell commands on the victims' machines.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Python,DropBook is a Python-based backdoor compiled with PyInstaller.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,DropBook can unarchive data downloaded from the C2 to obtain the payload and persistence modules.[1]
Enterprise,T1083,File and Directory Discovery,DropBook can collect the names of all files and folders in the Program Files directories.[1][2]
Enterprise,T1105,Ingress Tool Transfer,DropBook can download and execute additional files.[1][2]
Enterprise,T1082,System Information Discovery,DropBook has checked for the presence of Arabic language in the infected machine's settings.[1]
Enterprise,T1102,Web Service,"DropBook can communicate with its operators by exploiting the Simplenote, DropBox, and the social media platform, Facebook, where it can create fake accounts to control the backdoor and receive instructions.[1][2]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,MacSpy uses HTTP for command and control.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,MacSpy persists via a Launch Agent.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,MacSpy stores itself in ~/Library/.DS_Stores/ [2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,MacSpy deletes any temporary files it creates[2]
Enterprise,T1056,Input Capture: Keylogging,MacSpy captures keystrokes.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,MacSpy uses Tor for command and control.[1]
Enterprise,T1113,Screen Capture,MacSpy can capture screenshots of the desktop over multiple monitors.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Expand can be used to decompress a local or remote CAB file into an executable.[1]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Expand can be used to download or copy a file into an alternate data stream.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,XTunnel has been used to execute remote commands.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,XTunnel uses SSL/TLS and RC4 to encrypt traffic.[2][3]
Enterprise,T1027,Obfuscated Files or Information,A version of XTunnel introduced in July 2015 obfuscated the binary using opaque predicates and other techniques in a likely attempt to obfuscate it and bypass security products.[3]
Enterprise,T1027,Binary Padding,A version of XTunnel introduced in July 2015 inserted junk code into the binary in a likely attempt to obfuscate it and bypass security products.[3]
Enterprise,T1090,Proxy,XTunnel relays traffic between a C2 server and a victim.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HOMEFRY uses a command-line interface.[1]
Enterprise,T1027,Obfuscated Files or Information,Some strings in HOMEFRY are obfuscated with XOR x56.[1]
Enterprise,T1003,OS Credential Dumping,HOMEFRY can perform credential dumping.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: XDG Autostart Entries,Fysbis has installed itself as an autostart entry under ~/.config/autostart/dbus-inotifier.desktop to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Fysbis has the ability to create and execute commands in a remote shell for CLI.[1]
Enterprise,T1543,Create or Modify System Process: Systemd Service,Fysbis has established persistence using a systemd service.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Fysbis can use Base64 to encode its C2 traffic.[2]
Enterprise,T1083,File and Directory Discovery,Fysbis has the ability to search for files.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Fysbis has the ability to delete files.[2]
Enterprise,T1056,Input Capture: Keylogging,Fysbis can perform keylogging.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Fysbis has masqueraded as the rsyncd and dbus-inotifier services.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Fysbis has masqueraded as trusted software rsyncd and dbus-inotifier.[2]
Enterprise,T1027,Obfuscated Files or Information,Fysbis has been encrypted using XOR and RC4.[2]
Enterprise,T1057,Process Discovery,Fysbis can collect information about running processes.[2]
Enterprise,T1082,System Information Discovery,"Fysbis has used the command ls /etc | egrep -e""fedora*|debian*|gentoo*|mandriva*|mandrake*|meego*|redhat*|lsb-*|sun-*|SUSE*|release"" to determine which Linux OS version is running.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,LookBack’s C2 proxy tool sends data to a C2 server over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,LookBack sets up a Registry Run key to establish a persistence mechanism.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,LookBack executes the cmd.exe command.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,LookBack has used VBA macros in Microsoft Word attachments to drop additional files to the host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,LookBack has a function that decrypts malicious data.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,LookBack uses a modified version of RC4 for data transfer.[1]
Enterprise,T1083,File and Directory Discovery,LookBack can retrieve file listings from the victim machine.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,LookBack side loads its communications module as a DLL into the libcurl.dll loader.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,LookBack removes itself after execution and can delete files on the system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"LookBack has a C2 proxy tool that masquerades as GUP.exe, which is software used by Notepad++.[1]"
Enterprise,T1057,Process Discovery,LookBack can list running processes.[1]
Enterprise,T1113,Screen Capture,LookBack can take desktop screenshots.[1]
Enterprise,T1083,File and Directory Discovery,CaddyWiper can enumerate all files and directories on a compromised host.[3]
Enterprise,T1106,Native API,"CaddyWiper has the ability to dynamically resolve and use APIs, including SeTakeOwnershipPrivilege.[2]"
Enterprise,T1057,Process Discovery,CaddyWiper can obtain a list of current processes.[3]
Enterprise,T1082,System Information Discovery,CaddyWiper can use DsRoleGetPrimaryDomainInformation to determine the role of the infected machine. CaddyWiper can also halt execution if the compromised host is identified as a domain controller.[2][3]
Enterprise,T1087,Account Discovery: Local Account,SMOKEDHAM has used net.exe user and net.exe users to enumerate local accounts on a compromised host.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SMOKEDHAM has communicated with its C2 servers via HTTPS and HTTP POST requests.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SMOKEDHAM has used reg.exe to create a Registry Run key.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SMOKEDHAM can execute Powershell commands sent from its C2 server.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,SMOKEDHAM has encoded its C2 traffic with Base64.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SMOKEDHAM has encrypted its C2 traffic with RC4.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,SMOKEDHAM has exfiltrated data to its C2 server.[2]
Enterprise,T1564,Hide Artifacts: Hidden Users,SMOKEDHAM has modified the Registry to hide created user accounts from the Windows logon screen. [2]
Enterprise,T1105,Ingress Tool Transfer,SMOKEDHAM has used Powershell to download UltraVNC and Ngrok from third-party file sharing sites.[2]
Enterprise,T1056,Input Capture: Keylogging,SMOKEDHAM can continuously capture keystrokes.[1][2]
Enterprise,T1112,Modify Registry,"SMOKEDHAM has modified registry keys for persistence, to enable credential caching for credential access, and to facilitate lateral movement via RDP.[2]"
Enterprise,T1027,Obfuscated Files or Information,The SMOKEDHAM source code is embedded in the dropper as an encrypted string.[2]
Enterprise,T1090,Proxy: Domain Fronting,SMOKEDHAM has used a fronted domain to obfuscate its hard-coded C2 server domain.[2]
Enterprise,T1113,Screen Capture,SMOKEDHAM can capture screenshots of the victim’s desktop.[1][2]
Enterprise,T1082,System Information Discovery,SMOKEDHAM has used the systeminfo command on a compromised host.[2]
Enterprise,T1033,System Owner/User Discovery,SMOKEDHAM has used whoami commands to identify system owners.[2]
Enterprise,T1204,User Execution: Malicious Link,SMOKEDHAM has relied upon users clicking on a malicious link delivered through phishing.[1]
Enterprise,T1102,Web Service,SMOKEDHAM has used Google Drive and Dropbox to host files downloaded by victims via malicious links.[1]
Enterprise,T1087,Account Discovery: Local Account,Elise executes net user after initial communication is made to the remote server.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Elise communicates over HTTP or HTTPS for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"If establishing persistence by installation as a new service fails, one variant of Elise establishes persistence for the created .exe file by setting the following Registry key: HKCU\Software\Microsoft\Windows\CurrentVersion\Run\svchost : %APPDATA%\Microsoft\Network\svchost.exe. Other variants have set the following Registry keys for persistence: HKCU\Software\Microsoft\Windows\CurrentVersion\Run\imejp : [self] and HKCU\Software\Microsoft\Windows\CurrentVersion\Run\IAStorD.[1][2]"
Enterprise,T1543,Create or Modify System Process: Windows Service,Elise configures itself as a service.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Elise exfiltrates data using cookie values that are Base64-encoded.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Elise creates a file in AppData\Local\Microsoft\Windows\Explorer and stores all harvested data in that file.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Elise encrypts exfiltrated data with RC4.[1]
Enterprise,T1083,File and Directory Discovery,A variant of Elise executes dir C:\progra~1 when initially run.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Elise is capable of launching a remote shell on the host to delete itself.[2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Elise performs timestomping of a CAB file it creates.[1]
Enterprise,T1105,Ingress Tool Transfer,Elise can download additional files from the C2 server for execution.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"If installing itself as a service fails, Elise instead writes itself as a file named svchost.exe saved in %APPDATA%\Microsoft\Network.[1]"
Enterprise,T1027,Obfuscated Files or Information,"Elise encrypts several of its files, including configuration files.[1]"
Enterprise,T1057,Process Discovery,Elise enumerates processes via the tasklist command.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Elise injects DLL files into iexplore.exe.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"After copying itself to a DLL file, a variant of Elise calls the DLL file using rundll32.exe.[1]"
Enterprise,T1082,System Information Discovery,Elise executes systeminfo after initial communication is made to the remote server.[1]
Enterprise,T1016,System Network Configuration Discovery,Elise executes ipconfig /all after initial communication is made to the remote server.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Kerrdown can use a VBS base64 decoder function published by Motobit.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Kerrdown can decode, decrypt, and decompress multiple layers of shellcode.[2]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Kerrdown can use DLL side-loading to load malicious DLLs.[2]
Enterprise,T1105,Ingress Tool Transfer,Kerrdown can download specific payloads to a compromised host based on OS architecture.[2]
Enterprise,T1027,Obfuscated Files or Information,"Kerrdown can encrypt, encode, and compress multiple layers of shellcode.[2]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Kerrdown has been distributed through malicious e-mail attachments.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Kerrdown has been distributed via e-mails containing a malicious link.[1]
Enterprise,T1082,System Information Discovery,Kerrdown has the ability to determine if the compromised host is running a 32 or 64 bit OS architecture.[2]
Enterprise,T1204,User Execution: Malicious Link,Kerrdown has gained execution through victims opening malicious links.[1]
Enterprise,T1204,User Execution: Malicious File,Kerrdown has gained execution through victims opening malicious files.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,EvilBunny has executed C2 commands directly via HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,EvilBunny has created Registry keys for persistence in [HKLM|HKCU]\…\CurrentVersion\Run.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,EvilBunny has an integrated scripting engine to download and execute Lua scripts.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,EvilBunny has deleted the initial dropper after running through the environment checks.[1]
Enterprise,T1105,Ingress Tool Transfer,EvilBunny has downloaded additional Lua scripts from the C2.[1]
Enterprise,T1106,Native API,EvilBunny has used various API calls as part of its checks to see if the malware is running in a sandbox.[1]
Enterprise,T1057,Process Discovery,EvilBunny has used EnumProcesses() to identify how many process are running in the environment.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,EvilBunny has executed commands via scheduled tasks.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,EvilBunny has been observed querying installed antivirus software.[1]
Enterprise,T1124,System Time Discovery,"EvilBunny has used the API calls NtQuerySystemTime, GetSystemTimeAsFileTime, and GetTickCount to gather time metrics as part of its checks to see if the malware is running in a sandbox.[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,EvilBunny's dropper has checked the number of processes and the length and strings of its own file name to identify if the malware is in a sandbox environment.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,EvilBunny has used time measurements from 3 different APIs before and after performing sleep operations to check and abort if the malware is running in a sandbox.[1]
Enterprise,T1047,Windows Management Instrumentation,EvilBunny has used WMI to gather information about the system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,OSX_OCEANLOTUS.D can use HTTP POST and GET requests to send and receive C2 information.[2]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,OSX_OCEANLOTUS.D scrambles and encrypts data using AES256 before sending it to the C2 server.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,OSX_OCEANLOTUS.D uses PowerShell scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,OSX_OCEANLOTUS.D uses a shell script as the main executable inside an app bundle and drops an embedded base64-encoded payload to the /tmp folder.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,OSX_OCEANLOTUS.D uses Word macros for execution.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,OSX_OCEANLOTUS.D can create a persistence file in the folder /Library/LaunchAgents.[1][2]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,"If running with root permissions, OSX_OCEANLOTUS.D can create a persistence file in the folder /Library/LaunchDaemons.[1][3]"
Enterprise,T1005,Data from Local System,OSX_OCEANLOTUS.D has the ability to upload files from a compromised host.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,OSX_OCEANLOTUS.D sets the main loader file’s attributes to hidden.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,OSX_OCEANLOTUS.D has a command to delete a file from the system. OSX_OCEANLOTUS.D deletes the app bundle and dropper after execution.[1][2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,OSX_OCEANLOTUS.D can use the touch -t command to change timestamps.[2][4]
Enterprise,T1105,Ingress Tool Transfer,OSX_OCEANLOTUS.D has a command to download and execute a file on the victim’s machine.[1][2]
Enterprise,T1036,Masquerading: Masquerade Task or Service,OSX_OCEANLOTUS.D has disguised its app bundle by adding special characters to the filename and using the icon for legitimate Word documents.[2]
Enterprise,T1027,Obfuscated Files or Information,OSX_OCEANLOTUS.D encrypts its strings in RSA256 and encodes them in a custom base64 scheme and XOR.[1]
Enterprise,T1027,Software Packing,OSX_OCEANLOTUS.D has a variant that is packed with UPX.[5]
Enterprise,T1553,Subvert Trust Controls: Gatekeeper Bypass,OSX_OCEANLOTUS.D uses the command xattr -d com.apple.quarantine to remove the quarantine file attribute used by Gatekeeper and Notarization checks.[2][4]
Enterprise,T1082,System Information Discovery,"OSX_OCEANLOTUS.D collects processor information, memory information, computer name, hardware UUID, serial number, and operating system version. OSX_OCEANLOTUS.D has used the ioreg command to gather some of this information.[1][2][4]"
Enterprise,T1016,System Network Configuration Discovery,OSX_OCEANLOTUS.D can collect the network interface MAC address on the infected host.[1][2]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"OSX_OCEANLOTUS.D has variants that check a number of system parameters to see if it is being run on real hardware or in a virtual machine environment, such as sysctl hw.model.[5][4]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,MiniDuke uses HTTP and HTTPS for command and control.[1][2]
Enterprise,T1083,File and Directory Discovery,MiniDuke can enumerate local drives.[2]
Enterprise,T1105,Ingress Tool Transfer,MiniDuke can download additional encrypted backdoors onto the victim via GIF files.[3][2]
Enterprise,T1027,Obfuscated Files or Information,MiniDuke can use control flow flattening to obscure code.[2]
Enterprise,T1090,Proxy: Internal Proxy,MiniDuke can can use a named pipe to forward communications from one compromised machine with internet access to other compromised machines.[2]
Enterprise,T1082,System Information Discovery,MiniDuke can gather the hostname on a compromised machine.[2]
Enterprise,T1102,Web Service: Dead Drop Resolver,Some MiniDuke components use Twitter to initially obtain the address of a C2 server or as a backup if no hard-coded C2 server responds.[1][3][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SodaMaster can use RC4 to encrypt C2 communications.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,SodaMaster can use a hardcoded RSA key to encrypt some of its C2 traffic.[1]
Enterprise,T1105,Ingress Tool Transfer,SodaMaster has the ability to download additional payloads from C2 to the targeted system.[1]
Enterprise,T1106,Native API,SodaMaster can use RegOpenKeyW to access the Registry.[1]
Enterprise,T1027,Obfuscated Files or Information,"SodaMaster can use ""stackstrings"" for obfuscation.[1]"
Enterprise,T1057,Process Discovery,SodaMaster can search a list of running processes.[1]
Enterprise,T1012,Query Registry,SodaMaster has the ability to query the Registry to detect a key specific to VMware.[1]
Enterprise,T1082,System Information Discovery,SodaMaster can enumerate the host name and OS version on a target system.[1]
Enterprise,T1033,System Owner/User Discovery,SodaMaster can identify the username on a compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,SodaMaster can check for the presence of the Registry key HKEY_CLASSES_ROOT\Applications\VMwareHostOpen.exe before proceeding to its main functionality.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"SodaMaster has the ability to put itself to ""sleep"" for a specified time.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Industroyer’s main backdoor connected to a remote C2 server using HTTPS.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Industroyer can use an arbitrary system service to load at system boot for persistence and replaces the ImagePath registry value of a Windows service with a new backdoor binary.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Industroyer decrypts code to connect to a remote C2 server.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Industroyer sends information about hardware profiles and previously-received commands back to the C2 server in a POST-request.[1]
Enterprise,T1083,File and Directory Discovery,Industroyer’s data wiper component enumerates specific files on all the Windows drives.[1]
Enterprise,T1105,Ingress Tool Transfer,Industroyer downloads a shellcode payload from a remote C2 server and loads it into memory.[1]
Enterprise,T1027,Obfuscated Files or Information,Industroyer uses heavily obfuscated code in its Windows Notepad backdoor.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,Industroyer used Tor nodes for C2.[2]
Enterprise,T1012,Query Registry,Industroyer has a data wiper component that enumerates keys in the Registry HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services.[1]
Enterprise,T1018,Remote System Discovery,Industroyer can enumerate remote computers in the compromised network.[1]
Enterprise,T1082,System Information Discovery,Industroyer collects the victim machine’s Windows GUID.[2]
Enterprise,T1016,System Network Configuration Discovery,Industroyer’s 61850 payload component enumerates connected network adapters and their corresponding IP addresses.[1]
Enterprise,T1078,Valid Accounts,Industroyer can use supplied user credentials to execute processes and stop services.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Ferocious can use PowerShell scripts for execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Ferocious has the ability to use Visual Basic scripts for execution.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Ferocious can delete files from a compromised host.[1]
Enterprise,T1112,Modify Registry,Ferocious has the ability to add a Class ID in the current user Registry hive to enable persistence mechanisms.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Ferocious has checked for AV software as part of its persistence process.[1]
Enterprise,T1082,System Information Discovery,Ferocious can use GET.WORKSPACE in Microsoft Excel to determine the OS version of the compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"Ferocious can run anti-sandbox checks using the Microsoft Excel 4.0 function GET.WORKSPACE to determine the OS version, if there is a mouse present, and if the host is capable of playing sounds.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Bundlore uses HTTP requests for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: AppleScript,Bundlore can use AppleScript to inject malicious JavaScript into a browser.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Bundlore has leveraged /bin/sh and /bin/bash to execute commands on the victim machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Bundlore has used Python scripts to execute payloads.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Bundlore can execute JavaScript by injecting it into the victim's browser.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Bundlore can persist via a LaunchAgent.[1]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,Bundlore can persist via a LaunchDaemon.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Bundlore has used openssl to decrypt AES encrypted payload data. Bundlore has also used base64 and RC4 with a hardcoded key to deobfuscate data.[1]
Enterprise,T1564,Hide Artifacts,"Bundlore uses the mktemp utility to make unique file and directory names for payloads, such as TMP_DIR=`mktemp -d -t x.[2]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Bundlore can change browser security settings to enable extensions to be installed. Bundlore uses the pkill cfprefsd command to prevent users from inspecting processes.[1][2]
Enterprise,T1105,Ingress Tool Transfer,Bundlore can download and execute new versions of itself.[1]
Enterprise,T1056,Input Capture: GUI Input Capture,Bundlore prompts the user for their credentials.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Bundlore has disguised a malicious .app file as a Flash Player update.[1]
Enterprise,T1027,Obfuscated Files or Information,"Bundlore has obfuscated data with base64, AES, RC4, and bz2.[1]"
Enterprise,T1057,Process Discovery,Bundlore has used the ps command to list processes.[1]
Enterprise,T1518,Software Discovery,Bundlore has the ability to enumerate what browser is being used as well as version information for Safari.[1]
Enterprise,T1082,System Information Discovery,Bundlore will enumerate the macOS version to determine which follow-on behaviors to execute using /usr/bin/sw_vers -productVersion.[1][2]
Enterprise,T1204,User Execution: Malicious File,Bundlore has attempted to get users to execute a malicious .app file that looks like a Flash Player update.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,H1N1 kills and disables services by using cmd.exe.[2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"H1N1 dumps usernames and passwords from Firefox, Internet Explorer, and Outlook.[2]"
Enterprise,T1132,Data Encoding,H1N1 obfuscates C2 traffic with an altered version of base64.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,H1N1 encrypts C2 traffic using an RC4 key.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"H1N1 kills and disables services for Windows Security Center, and Windows Defender.[2]"
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,H1N1 kills and disables services for Windows Firewall.[2]
Enterprise,T1105,Ingress Tool Transfer,H1N1 contains a command to download and execute a file from a remotely hosted URL using WinINet HTTP requests.[2]
Enterprise,T1027,Obfuscated Files or Information,"H1N1 uses multiple techniques to obfuscate strings, including XOR.[1]"
Enterprise,T1027,Software Packing,H1N1 uses a custom packing algorithm.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PinchDuke transfers files from the compromised host via HTTP or HTTPS to a C2 server.[1]
Enterprise,T1555,Credentials from Password Stores,"PinchDuke steals credentials from compromised hosts. PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by PinchDuke include ones associated with many sources such as The Bat!, Yahoo!, Mail.ru, Passport.Net, Google Talk, and Microsoft Outlook.[1]"
Enterprise,T1555,Credentials from Web Browsers,"PinchDuke steals credentials from compromised hosts. PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by PinchDuke include ones associated with many sources such as Netscape Navigator, Mozilla Firefox, Mozilla Thunderbird, and Internet Explorer. [1]"
Enterprise,T1005,Data from Local System,PinchDuke collects user files from the compromised host based on predefined file extensions.[1]
Enterprise,T1083,File and Directory Discovery,PinchDuke searches for files created within a certain timeframe and whose file extension matches a predefined list.[1]
Enterprise,T1003,OS Credential Dumping,"PinchDuke steals credentials from compromised hosts. PinchDuke's credential stealing functionality is believed to be based on the source code of the Pinch credential stealing malware (also known as LdPinch). Credentials targeted by PinchDuke include ones associated many sources such as WinInet Credential Cache, and Lightweight Directory Access Protocol (LDAP).[1]"
Enterprise,T1082,System Information Discovery,PinchDuke gathers system configuration information.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Login Items,Dok uses AppleScript to install a login Item by sending Apple events to the System Events process.[2]
Enterprise,T1059,Command and Scripting Interpreter: AppleScript,Dok uses AppleScript to create a login item for persistence.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Dok installs two LaunchAgents to redirect all network traffic with a randomly generated name for each plist file maintaining the format com.random.name.plist.[1][3]
Enterprise,T1056,Input Capture: GUI Input Capture,Dok prompts the user for credentials.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Dok is packed with an UPX executable packer.[2]
Enterprise,T1090,Proxy: Multi-hop Proxy,Dok downloads and installs Tor via homebrew.[1]
Enterprise,T1553,Subvert Trust Controls: Install Root Certificate,Dok installs a root certificate to aid in Adversary-in-the-Middle actions using the command add-trusted-cert -d -r trustRoot -k /Library/Keychains/System.keychain /tmp/filename.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PowerStallion uses PowerShell loops to iteratively check for available commands in its OneDrive C2 server.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,PowerStallion modifies the MAC times of its local log files to match that of the victim's desktop.ini file.[1]
Enterprise,T1027,Obfuscated Files or Information,PowerStallion uses a XOR cipher to encrypt command output written to its OneDrive C2 server.[1]
Enterprise,T1057,Process Discovery,PowerStallion has been used to monitor process lists.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,PowerStallion uses Microsoft OneDrive as a C2 server via a network drive mapped with net use.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Neoichor can use HTTP for C2 communications.[1]
Enterprise,T1005,Data from Local System,Neoichor can upload files from a victim's machine.[1]
Enterprise,T1070,Indicator Removal on Host,Neoichor can clear the browser history on a compromised host by changing the ClearBrowsingHistoryOnExit value to 1 in the HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer\Privacy Registry key.[1]
Enterprise,T1105,Ingress Tool Transfer,Neoichor can download additional files onto a compromised host.[1]
Enterprise,T1112,Modify Registry,Neoichor has the ability to configure browser settings by modifying Registry entries under HKEY_CURRENT_USER\Software\Microsoft\Internet Explorer.[1]
Enterprise,T1082,System Information Discovery,Neoichor can collect the OS version and computer name from a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,Neoichor can gather the IP address from an infected host.[1]
Enterprise,T1016,Internet Connection Discovery,Neoichor can check for Internet connectivity by contacting bing[.]com with the request format bing[.]com?id=<GetTickCount>.[1]
Enterprise,T1033,System Owner/User Discovery,Neoichor can collect the user name from a victim's machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,CSPY Downloader can use GET requests to download additional payloads from C2.[1]
Enterprise,T1070,Indicator Removal on Host,CSPY Downloader has the ability to remove values it writes to the Registry.[1]
Enterprise,T1070,File Deletion,CSPY Downloader has the ability to self delete.[1]
Enterprise,T1105,Ingress Tool Transfer,CSPY Downloader can download additional tools to a compromised host.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,CSPY Downloader has attempted to appear as a legitimate Windows service with a fake description claiming it is used to support packed applications.[1]
Enterprise,T1112,Modify Registry,CSPY Downloader can write to the Registry under the %windir% variable to execute tasks.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,CSPY Downloader has been packed with UPX.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,CSPY Downloader can use the schtasks utility to bypass UAC.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,CSPY Downloader has come signed with revoked certificates.[1]
Enterprise,T1204,User Execution: Malicious File,CSPY Downloader has been delivered via malicious documents with embedded macros.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"CSPY Downloader can search loaded modules, PEB structure, file paths, Registry keys, and memory to determine if it is being debugged or running in a virtual environment.[1]"
Enterprise,T1071,Application Layer Protocol: DNS,Matryoshka uses DNS for C2.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Matryoshka can establish persistence by adding Registry Run keys.[1][2]
Enterprise,T1059,Command and Scripting Interpreter,Matryoshka is capable of providing Meterpreter shell access.[1]
Enterprise,T1555,Credentials from Password Stores,Matryoshka is capable of stealing Outlook passwords.[1][2]
Enterprise,T1056,Input Capture: Keylogging,Matryoshka is capable of keylogging.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Matryoshka obfuscates API function names using a substitute cipher combined with Base64 encoding.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Matryoshka uses reflective DLL injection to inject the malicious library and execute the RAT.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Matryoshka can establish persistence by adding a Scheduled Task named ""Microsoft Boost Kernel Optimization"".[1][2]"
Enterprise,T1113,Screen Capture,Matryoshka is capable of performing screen captures.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Matryoshka uses rundll32.exe in a Registry Run key value for execution as part of its persistence mechanism.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: LSASS Driver,"Wingbird drops a malicious file (sspisrv.dll) alongside a copy of lsass.exe, which is used to register a service that loads sspisrv.dll as a driver. The payload of the malicious driver (located in its entry-point function) is executed when loaded by lsass.exe before the spoofed service becomes unstable and crashes.[1][3]"
Enterprise,T1543,Create or Modify System Process: Windows Service,"Wingbird uses services.exe to register a new autostart service named ""Audit Service"" using a copy of the local lsass.exe file.[1][3]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Wingbird side loads a malicious file, sspisrv.dll, in part of a spoofed lssas.exe service.[1][3]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Wingbird deletes its payload along with the payload's parent process after it finishes copying files.[1]
Enterprise,T1055,Process Injection,Wingbird performs multiple process injections to hijack system processes and execute malicious code.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Wingbird checks for the presence of Bitdefender security software.[1]
Enterprise,T1082,System Information Discovery,Wingbird checks the victim OS version after executing to determine where to drop files based on whether the victim is 32-bit or 64-bit.[1]
Enterprise,T1569,System Services: Service Execution,"Wingbird uses services.exe to register a new autostart service named ""Audit Service"" using a copy of the local lsass.exe file.[1][3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,ROKRAT can use HTTP and HTTPS for command and control communication.[1][4][5]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,ROKRAT has used Visual Basic for execution.[5]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,ROKRAT can steal credentials stored in Web browsers by querying the sqlite database.[2]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,ROKRAT can steal credentials by leveraging the Windows Vault mechanism.[2]
Enterprise,T1005,Data from Local System,ROKRAT can collect host data and specific file types.[4][3][5]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ROKRAT can decrypt strings using the victim's hostname as the key.[3][5]
Enterprise,T1041,Exfiltration Over C2 Channel,ROKRAT can send collected files back over same C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,ROKRAT has the ability to gather a list of files and directories on the infected system.[6][4][3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,ROKRAT can request to delete files.[4]
Enterprise,T1105,Ingress Tool Transfer,ROKRAT can retrieve additional malicious payloads from its C2 server.[1][4][3][5]
Enterprise,T1056,Input Capture: Keylogging,ROKRAT can use SetWindowsHookEx and GetKeyNameText to capture keystrokes.[1][3]
Enterprise,T1112,Modify Registry,ROKRAT can modify the HKEY_CURRENT_USER\Software\Microsoft\Office\ registry key so it can bypass the VB object model (VBOM) on a compromised host.[5]
Enterprise,T1106,Native API,ROKRAT can use a variety of API calls to execute shellcode.[5]
Enterprise,T1027,Obfuscated Files or Information,ROKRAT can encrypt data prior to exfiltration by using an RSA public key.[3][5]
Enterprise,T1566,Phishing: Spearphishing Attachment,ROKRAT has been delivered via spearphishing emails that contain a malicious Hangul Office or Microsoft Word document.[5]
Enterprise,T1057,Process Discovery,ROKRAT can list the current running processes on the system.[1][4]
Enterprise,T1055,Process Injection,"ROKRAT can use VirtualAlloc, WriteProcessMemory, and then CreateRemoteThread to execute shellcode within the address space of Notepad.exe.[5]"
Enterprise,T1012,Query Registry,ROKRAT can access the HKLM\System\CurrentControlSet\Services\mssmbios\Data\SMBiosData Registry key to obtain the System manufacturer value to identify the machine type.[2]
Enterprise,T1113,Screen Capture,ROKRAT can capture screenshots of the infected system using the gdi32 library.[1][7][6][4][5]
Enterprise,T1082,System Information Discovery,ROKRAT can gather the hostname and the OS version to ensure it doesn’t run on a Windows XP or Windows Server 2003 systems.[1][7][6][4][3][5]
Enterprise,T1033,System Owner/User Discovery,ROKRAT can collect the username from a compromised host.[5]
Enterprise,T1204,User Execution: Malicious File,ROKRAT has relied upon users clicking on a malicious attachment delivered through spearphishing.[5]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,ROKRAT can check for VMware-related files and DLLs related to sandboxes.[2][4][5]
Enterprise,T1102,Web Service: Bidirectional Communication,"ROKRAT has used legitimate social networking sites and cloud platforms (including but not limited to Twitter, Yandex, Dropbox, and Mediafire) for C2 communications.[1][6][3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,VERMIN uses HTTP for C2 communications.[1]
Enterprise,T1560,Archive Collected Data,VERMIN encrypts the collected files using 3-DES.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"VERMIN decrypts code, strings, and commands to use once it's on the victim's machine.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,VERMIN can delete files on the victim’s machine.[1]
Enterprise,T1105,Ingress Tool Transfer,VERMIN can download and upload files to the victim's machine.[1]
Enterprise,T1056,Input Capture: Keylogging,VERMIN collects keystrokes from the victim machine.[1]
Enterprise,T1027,Obfuscated Files or Information,VERMIN is obfuscated using the obfuscation tool called ConfuserEx.[1]
Enterprise,T1027,Software Packing,VERMIN is initially packed.[1]
Enterprise,T1057,Process Discovery,VERMIN can get a list of the processes and running tasks on the system.[1]
Enterprise,T1113,Screen Capture,VERMIN can perform screen captures of the victim’s machine.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,VERMIN uses WMI to check for anti-virus software installed on the system.[1]
Enterprise,T1082,System Information Discovery,"VERMIN collects the OS name, machine name, and architecture information.[1]"
Enterprise,T1016,System Network Configuration Discovery,VERMIN gathers the local IP address.[1]
Enterprise,T1033,System Owner/User Discovery,VERMIN gathers the username from the victim’s machine.[1]
Enterprise,T1105,Ingress Tool Transfer,"KARAE can upload and download files, including second-stage malware.[1]"
Enterprise,T1082,System Information Discovery,KARAE can collect system information.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,KARAE can use public cloud-based storage providers for command and control.[1]
Enterprise,T1083,File and Directory Discovery,Brave Prince gathers file and directory information from the victim’s machine.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Brave Prince terminates antimalware processes.[1]
Enterprise,T1057,Process Discovery,Brave Prince lists the running processes.[1]
Enterprise,T1012,Query Registry,Brave Prince gathers information about the Registry.[1]
Enterprise,T1082,System Information Discovery,Brave Prince collects hard drive content and system configuration information.[1]
Enterprise,T1016,System Network Configuration Discovery,Brave Prince gathers network configuration information as well as the ARP cache.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Denis has used DNS tunneling for C2 communications.[1][2][3]
Enterprise,T1560,Archive Collected Data: Archive via Library,Denis compressed collected data using zlib.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Denis has a version written in PowerShell.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Denis can launch a remote shell to execute arbitrary commands on the victim’s machine.[1][3]
Enterprise,T1132,Data Encoding: Standard Encoding,Denis encodes the data sent to the server in Base64.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Denis will decrypt important strings used for C&C communication.[3]
Enterprise,T1083,File and Directory Discovery,Denis has several commands to search directories for files.[1][3]
Enterprise,T1574,Hijack Execution Flow,"Denis replaces the nonexistent Windows DLL ""msfte.dll"" with its own malicious version, which is loaded by the SearchIndexer.exe and SearchProtocolHost.exe.[3]"
Enterprise,T1574,DLL Side-Loading,Denis exploits a security vulnerability to load a fake DLL and execute its code.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Denis has a command to delete files from the victim’s machine.[1][3]
Enterprise,T1105,Ingress Tool Transfer,Denis deploys additional backdoors and hacking tools to the system.[3]
Enterprise,T1106,Native API,"Denis used the IsDebuggerPresent, OutputDebugString, and SetLastError APIs to avoid debugging. Denis used GetProcAddress and LoadLibrary to dynamically resolve APIs. Denis also used the Wow64SetThreadContext API as part of a process hollowing process.[3]"
Enterprise,T1027,Obfuscated Files or Information,Denis obfuscates its code and encrypts the API names. Denis also encodes its payload in Base64.[2][3]
Enterprise,T1055,Process Injection: Process Hollowing,"Denis performed process hollowing through the API calls CreateRemoteThread, ResumeThread, and Wow64SetThreadContext.[3]"
Enterprise,T1012,Query Registry,Denis queries the Registry for keys and values.[3]
Enterprise,T1082,System Information Discovery,Denis collects OS information and the computer name from the victim’s machine.[2][3]
Enterprise,T1016,System Network Configuration Discovery,Denis uses ipconfig to gather the IP address from the system.[3]
Enterprise,T1033,System Owner/User Discovery,Denis enumerates and collects the username from the victim’s machine.[2][3]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"Denis ran multiple system checks, looking for processor and register characteristics, to evade emulation and analysis.[3]"
Enterprise,T1560,Archive Collected Data: Archive via Utility,Calisto uses the zip -r command to compress the data collected on the local system.[1][2]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Calisto adds a .plist file to the /Library/LaunchAgents folder to maintain persistence.[1]
Enterprise,T1555,Credentials from Password Stores: Keychain,Calisto collects Keychain storage data and copies those passwords/tokens to a file.[1][2]
Enterprise,T1005,Data from Local System,Calisto can collect data from user directories.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Calisto uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.[1][2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Calisto uses a hidden directory named .calisto to store data from the victim’s machine before exfiltration.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Calisto has the capability to use rm -rf to remove folders and files from the victim's machine.[1]
Enterprise,T1105,Ingress Tool Transfer,Calisto has the capability to upload and download files to the victim's machine.[2]
Enterprise,T1056,Input Capture: GUI Input Capture,Calisto presents an input prompt asking for the user's login and password.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Calisto's installation file is an unsigned DMG image under the guise of Intego’s security solution for mac.[1]
Enterprise,T1016,System Network Configuration Discovery,Calisto runs the ifconfig command to obtain the IP address from the victim’s machine.[1]
Enterprise,T1569,System Services: Launchctl,Calisto uses launchctl to enable screen sharing on the victim’s machine.[1]
Enterprise,T1005,Data from Local System,Zox has the ability to upload files from a targeted system.[1]
Enterprise,T1083,File and Directory Discovery,Zox can enumerate files on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,Zox can download files to a compromised machine.[1]
Enterprise,T1027,Obfuscated Files or Information,Zox has been encoded with Base64.[1]
Enterprise,T1057,Process Discovery,Zox has the ability to list processes.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Zox has the ability to use SMB for communication.[1]
Enterprise,T1082,System Information Discovery,Zox can enumerate attached drives.[1]
Enterprise,T1071,Application Layer Protocol: DNS,NanHaiShu uses DNS for the C2 communications.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,NanHaiShu modifies the %regrun% Registry to point itself to an autostart mechanism.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,NanHaiShu executes additional VBScript code on the victim's machine.[2]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,NanHaiShu executes additional Jscript code on the victim's machine.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,NanHaiShu can change Internet Explorer settings to reduce warnings about malware activity.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,NanHaiShu launches a script to delete their original decoy file to cover tracks.[2]
Enterprise,T1105,Ingress Tool Transfer,NanHaiShu can download additional files from URLs.[1]
Enterprise,T1027,Obfuscated Files or Information,NanHaiShu encodes files in Base64.[2]
Enterprise,T1218,System Binary Proxy Execution: Mshta,NanHaiShu uses mshta.exe to load its program and files.[2]
Enterprise,T1082,System Information Discovery,NanHaiShu can gather the victim computer name and serial number.[1]
Enterprise,T1016,System Network Configuration Discovery,NanHaiShu can gather information about the victim proxy server.[1]
Enterprise,T1033,System Owner/User Discovery,NanHaiShu collects the username from the victim.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BBK has the ability to use HTTP in communications with C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BBK has the ability to use cmd to run a Portable Executable (PE) on the compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BBK has the ability to decrypt AES encrypted payloads.[1]
Enterprise,T1105,Ingress Tool Transfer,BBK has the ability to download files from C2 to the infected host.[1]
Enterprise,T1106,Native API,BBK has the ability to use the CreatePipe API to add a sub-process for execution via cmd.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,BBK can extract a malicious Portable Executable (PE) from a photo.[1]
Enterprise,T1055,Process Injection,BBK has the ability to inject shellcode into svchost.exe.[1]
Enterprise,T1057,Process Discovery,HELLOKITTY can search for specific processes to terminate.[1]
Enterprise,T1082,System Information Discovery,HELLOKITTY can enumerate logical drives on a target system.[1]
Enterprise,T1047,Windows Management Instrumentation,HELLOKITTY can use WMI to delete volume shadow copies.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ShimRat communicated over HTTP and HTTPS with C2 servers.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ShimRat has installed a registry based start-up key HKCU\Software\microsoft\windows\CurrentVersion\Run to maintain persistence should other methods fail.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ShimRat can be issued a command shell function from the C2.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,ShimRat has installed a Windows service to maintain persistence on victim machines.[1]
Enterprise,T1005,Data from Local System,ShimRat has the capability to upload collected files to a C2.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ShimRat has decompressed its core DLL using shellcode once an impersonated antivirus component was running on a system.[1]
Enterprise,T1083,File and Directory Discovery,ShimRat can list directories.[1]
Enterprise,T1574,Hijack Execution Flow,ShimRat can hijack the cryptbase.dll within migwiz.exe to escalate privileges and bypass UAC controls.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"ShimRat can uninstall itself from compromised hosts, as well create and modify directories, delete, move, copy, and rename files.[1]"
Enterprise,T1105,Ingress Tool Transfer,ShimRat can download additional files.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,ShimRat can impersonate Windows services and antivirus products to avoid detection on compromised systems.[1]
Enterprise,T1112,Modify Registry,ShimRat has registered two registry keys for shim databases.[1]
Enterprise,T1106,Native API,ShimRat has used Windows API functions to install the service and shim.[1]
Enterprise,T1027,Obfuscated Files or Information,ShimRat has been delivered as a package that includes compressed DLL and shellcode payloads within a .dat file.[1]
Enterprise,T1027,Software Packing,ShimRat's loader has been packed with the compressed ShimRat core DLL and the legitimate DLL for it to hijack.[1]
Enterprise,T1090,Proxy: External Proxy,ShimRat can use pre-configured HTTP proxies.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Ryuk has used the Windows command line to create a Registry entry under HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Ryuk has used cmd.exe to create a Registry entry to establish persistence.[1]
Enterprise,T1083,File and Directory Discovery,Ryuk has enumerated files and folders on all mounted drives.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Ryuk has stopped services related to anti-virus.[2]
Enterprise,T1036,Masquerading,Ryuk can create .dll files that actually contain a Rich Text File format document.[5]
Enterprise,T1036,Match Legitimate Name or Location,"Ryuk has constructed legitimate appearing installation folder paths by calling GetWindowsDirectoryW and then inserting a null byte at the fourth character of the path. For Windows Vista or higher, the path would appear as C:\Users\Public.[1]"
Enterprise,T1106,Native API,"Ryuk has used multiple native APIs including ShellExecuteW to run executables,GetWindowsDirectoryW to create folders, and VirtualAlloc, WriteProcessMemory, and CreateRemoteThread for process injection.[1]"
Enterprise,T1027,Obfuscated Files or Information,Ryuk can use anti-disassembly and code transformation obfuscation techniques.[4]
Enterprise,T1057,Process Discovery,Ryuk has called CreateToolhelp32Snapshot to enumerate all running processes.[1]
Enterprise,T1055,Process Injection,"Ryuk has injected itself into remote processes to encrypt files using a combination of VirtualAlloc, WriteProcessMemory, and CreateRemoteThread.[1]"
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Ryuk has used the C$ network share for lateral movement.[6]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Ryuk can remotely create a scheduled task to execute itself on a system.[5]
Enterprise,T1082,System Information Discovery,"Ryuk has called GetLogicalDrives to emumerate all mounted drives, and GetDriveTypeW to determine the drive type.[1]"
Enterprise,T1016,System Network Configuration Discovery,Ryuk has called GetIpNetTable in attempt to identify all mounted drives and hosts that have Address Resolution Protocol (ARP) entries.[1][6]
Enterprise,T1078,Valid Accounts: Domain Accounts,Ryuk can use stolen domain admin accounts to move laterally within a victim domain.[5]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ServHelper uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ServHelper may attempt to establish persistence via the HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ run key.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,ServHelper has the ability to execute a PowerShell script to get information from the infected host.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ServHelper can execute shell commands against cmd.[1][2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"ServHelper may set up a reverse SSH tunnel to give the attacker access to services running on the victim, such as RDP.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,ServHelper has a module to delete itself from the infected machine.[1][2]
Enterprise,T1105,Ingress Tool Transfer,ServHelper may download additional files to execute.[1][2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,ServHelper has commands for adding a remote desktop user and sending RDP traffic to the attacker through a reverse SSH tunnel.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,ServHelper contains modules that will use schtasks to carry out malicious operations.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,ServHelper contains a module for downloading and executing DLLs that leverages rundll32.exe.[2]
Enterprise,T1082,System Information Discovery,ServHelper will attempt to enumerate Windows version and system architecture.[1]
Enterprise,T1033,System Owner/User Discovery,ServHelper will attempt to enumerate the username of the victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Out1 can use HTTP and HTTPS in communications with remote hosts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Out1 can use native command line for execution.[1]
Enterprise,T1005,Data from Local System,Out1 can copy files and Registry data from compromised hosts.[1]
Enterprise,T1027,Obfuscated Files or Information,Out1 has the ability to encode data.[1]
Enterprise,T1005,Data from Local System,MobileOrder exfiltrates data collected from the victim mobile device.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,MobileOrder exfiltrates data to its C2 server over the same protocol as C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,"MobileOrder has a command to upload to its C2 server information about files on the victim mobile device, including SD card size, installed app list, SMS content, contacts, and calling history.[1]"
Enterprise,T1105,Ingress Tool Transfer,MobileOrder has a command to download a file from the C2 server to the victim mobile device's SD card.[1]
Enterprise,T1057,Process Discovery,MobileOrder has a command to upload information about all running processes to its C2 server.[1]
Enterprise,T1082,System Information Discovery,"MobileOrder has a command to upload to its C2 server victim mobile device information, including IMEI, IMSI, SIM card serial number, phone number, Android version, and other information.[1]"
Enterprise,T1132,Data Encoding,Linux Rabbit sends the payload from the C2 server as an encoded URL parameter. [1]
Enterprise,T1033,System Owner/User Discovery,Linux Rabbit opens a socket on port 22 and if it receives a response it attempts to obtain the machine's hostname and Top-Level Domain. [1]
Enterprise,T1078,Valid Accounts,Linux Rabbit acquires valid SSH accounts through brute force. [1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Winnti for Windows has the ability to use encapsulated HTTP/S in C2 communications.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Winnti for Windows can add a service named wind0ws to the Registry to achieve persistence after reboot.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Winnti for Windows sets its DLL file as a new service in the Registry to establish persistence.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,The Winnti for Windows dropper can decrypt and decompresses a data blob.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Winnti for Windows can XOR encrypt C2 traffic.[3]
Enterprise,T1083,File and Directory Discovery,Winnti for Windows can check for the presence of specific files prior to moving to the next phase of execution.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Winnti for Windows can delete the DLLs for its various components from a compromised host.[3]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Winnti for Windows can set the timestamps for its worker and service components to match that of cmd.exe.[3]
Enterprise,T1105,Ingress Tool Transfer,The Winnti for Windows dropper can place malicious payloads on targeted systems.[3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"A Winnti for Windows implant file was named ASPNET_FILTER.DLL, mimicking the legitimate ASP.NET ISAPI filter DLL with the same name.[2]"
Enterprise,T1106,Native API,Winnti for Windows can use Native API to create a new process and to start services.[3]
Enterprise,T1027,Obfuscated Files or Information,Winnti for Windows has the ability to encrypt and compress its payload.[3]
Enterprise,T1057,Process Discovery,Winnti for Windows can check if the explorer.exe process is responsible for calling its install function.[3]
Enterprise,T1090,Proxy: Internal Proxy,The Winnti for Windows HTTP/S C2 mode can make use of a local proxy.[3]
Enterprise,T1090,Proxy: External Proxy,The Winnti for Windows HTTP/S C2 mode can make use of an external proxy.[3]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,The Winnti for Windows installer loads a DLL using rundll32.[2][3]
Enterprise,T1082,System Information Discovery,Winnti for Windows can determine if the OS on a compromised host is newer than Windows XP.[3]
Enterprise,T1569,System Services: Service Execution,Winnti for Windows can run as a service using svchost.exe.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Revenge RAT creates a Registry key at HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Shell to survive a system reboot.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Revenge RAT uses the PowerShell command Reflection.Assembly to load itself into memory to aid in execution.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Revenge RAT uses cmd.exe to execute commands and run scripts on the victim's machine.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Revenge RAT uses Base64 to encode information sent to the C2 server.[1]
Enterprise,T1105,Ingress Tool Transfer,Revenge RAT has the ability to upload and download files.[1]
Enterprise,T1056,Input Capture: Keylogging,Revenge RAT has a plugin for keylogging.[1][2]
Enterprise,T1003,OS Credential Dumping,Revenge RAT has a plugin for credential harvesting.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Revenge RAT has a plugin to perform RDP access.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Revenge RAT schedules tasks to run malicious scripts at different intervals.[2]
Enterprise,T1113,Screen Capture,Revenge RAT has a plugin for screen capture.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Revenge RAT uses mshta.exe to run malicious scripts on the system.[2]
Enterprise,T1082,System Information Discovery,"Revenge RAT collects the CPU information, OS information, and system language.[1]"
Enterprise,T1016,System Network Configuration Discovery,Revenge RAT collects the IP address and MAC address from the system.[1]
Enterprise,T1033,System Owner/User Discovery,Revenge RAT gathers the username from the system.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Revenge RAT used blogpost.com as its primary command and control server during a campaign.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Vasport creates a backdoor by making a connection using a HTTP POST.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Vasport copies itself to disk and creates an associated run key Registry entry to establish.[2]
Enterprise,T1105,Ingress Tool Transfer,Vasport can download files.[2]
Enterprise,T1090,Proxy,Vasport is capable of tunneling though a proxy.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,OopsIE uses HTTP for C2 communications.[1][2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,OopsIE compresses collected files with GZipStream before sending them to its C2 server.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,OopsIE compresses collected files with a simple character replacement scheme before sending them to its C2 server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,OopsIE uses the command prompt to execute commands on the victim's machine.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,OopsIE creates and uses a VBScript as part of its persistent execution.[1][2]
Enterprise,T1132,Data Encoding: Standard Encoding,OopsIE encodes data in hexadecimal format over the C2 channel.[1]
Enterprise,T1074,Data Staged: Local Data Staging,OopsIE stages the output from command execution and collected files in specific folders before exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,OopsIE concatenates then decompresses multiple resources to load an embedded .Net Framework assembly.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,OopsIE can upload files from the victim's machine to its C2 server.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,OopsIE has the capability to delete files and scripts from the victim's machine.[2]
Enterprise,T1105,Ingress Tool Transfer,OopsIE can download files from its C2 server to the victim's machine.[1][2]
Enterprise,T1027,Obfuscated Files or Information,OopsIE uses the Confuser protector to obfuscate an embedded .Net Framework assembly used for C2. OopsIE also encodes collected data in hexadecimal format before writing to files on disk and obfuscates strings.[1][2]
Enterprise,T1027,Software Packing,OopsIE uses the SmartAssembly obfuscator to pack an embedded .Net Framework assembly used for C2.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,OopsIE creates a scheduled task to run itself every three minutes.[1][2]
Enterprise,T1082,System Information Discovery,"OopsIE checks for information on the CPU fan, temperature, mouse, hard disk, and motherboard as part of its anti-VM checks.[2]"
Enterprise,T1124,System Time Discovery,"OopsIE checks to see if the system is configured with ""Daylight"" time and checks for a specific region to be set for the timezone.[2]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,OopsIE performs several anti-VM and sandbox checks on the victim's machine. One technique the group has used was to perform a WMI query SELECT * FROM MSAcpi_ThermalZoneTemperature to check the temperature to see if it’s running in a virtual environment.[2]
Enterprise,T1047,Windows Management Instrumentation,OopsIE uses WMI to perform discovery techniques.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DarkComet can use HTTP for C2 communications.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,DarkComet adds several Registry entries to enable automatic execution at every system startup.[1][2]
Enterprise,T1059,Command and Scripting Interpreter,DarkComet can execute various types of scripts on the victim’s machine.[2]
Enterprise,T1059,Windows Command Shell,DarkComet can launch a remote shell to execute commands on the victim’s machine.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,DarkComet can disable Security Center functions like anti-virus.[1][2]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,DarkComet can disable Security Center functions like the Windows Firewall.[1][2]
Enterprise,T1105,Ingress Tool Transfer,DarkComet can load any files onto the infected machine to execute.[1][2]
Enterprise,T1056,Input Capture: Keylogging,DarkComet has a keylogging capability.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,DarkComet has dropped itself onto victim machines with file names such as WinDefender.Exe and winupdate.exe in an apparent attempt to masquerade as a legitimate file.[1]
Enterprise,T1112,Modify Registry,"DarkComet adds a Registry value for its installation routine to the Registry Key HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Policies\System Enable LUA=""0"" and HKEY_CURRENT_USER\Software\DC3_FEXEC.[1][2]"
Enterprise,T1027,Obfuscated Files or Information: Software Packing,DarkComet has the option to compress its payload using UPX or MPRESS.[2]
Enterprise,T1057,Process Discovery,DarkComet can list active processes running on the victim’s machine.[2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,DarkComet can open an active screen of the victim’s machine and take control of the mouse and keyboard.[2]
Enterprise,T1082,System Information Discovery,"DarkComet can collect the computer name, RAM used, and operating system version from the victim’s machine.[1][2]"
Enterprise,T1033,System Owner/User Discovery,DarkComet gathers the username from the victim’s machine.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,TURNEDUP is capable of writing to a Registry Run key to establish.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TURNEDUP is capable of creating a reverse shell.[1]
Enterprise,T1105,Ingress Tool Transfer,TURNEDUP is capable of downloading additional files.[1]
Enterprise,T1055,Process Injection: Asynchronous Procedure Call,"TURNEDUP is capable of injecting code into the APC queue of a created Rundll32 process as part of an ""Early Bird injection.""[3]"
Enterprise,T1113,Screen Capture,TURNEDUP is capable of taking screenshots.[1]
Enterprise,T1082,System Information Discovery,TURNEDUP is capable of gathering system information.[1]
Enterprise,T1083,File and Directory Discovery,KillDisk has used the FindNextFile command as part of its file deletion process.[4]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,"KillDisk deletes Application, Security, Setup, and System Windows Event Logs.[2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,KillDisk has the ability to quit and delete itself.[5]
Enterprise,T1036,Masquerading: Masquerade Task or Service,KillDisk registers as a service under the Plug-And-Play Support name.[5]
Enterprise,T1106,Native API,KillDisk has called the Windows API to retrieve the hard disk handle and shut down the machine.[3]
Enterprise,T1027,Obfuscated Files or Information,KillDisk uses VMProtect to make reverse engineering the malware more difficult.[3]
Enterprise,T1057,Process Discovery,KillDisk has called GetCurrentProcess.[4]
Enterprise,T1082,System Information Discovery,KillDisk retrieves the hard disk name by calling the CreateFileA to \.\PHYSICALDRIVE0 API.[3]
Enterprise,T1102,Web Service: Bidirectional Communication,GLOOXMAIL communicates to servers operated by Google using the Jabber/XMPP protocol.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Print Processors,The PipeMon installer has modified the Registry key HKLM\SYSTEM\CurrentControlSet\Control\Print\Environments\Windows x64\Print Processors to install PipeMon as a Print Processor.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,PipeMon can establish persistence by registering a malicious DLL as an alternative Print Processor which is loaded when the print spooler service starts.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,PipeMon can decrypt password-protected executables.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,PipeMon communications are RC4 encrypted.[1]
Enterprise,T1105,Ingress Tool Transfer,PipeMon can install additional modules via C2 commands.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,PipeMon modules are stored on disk with seemingly benign names including use of a file extension associated with a popular word processor.[1]
Enterprise,T1112,Modify Registry,PipeMon has stored its encrypted payload in the Registry.[1]
Enterprise,T1106,Native API,PipeMon's first stage has been executed by a call to CreateProcess with the decryption password in an argument. PipeMon has used a call to LoadLibrary to load its installer.[1]
Enterprise,T1027,Obfuscated Files or Information,PipeMon modules are stored encrypted on disk.[1]
Enterprise,T1057,Process Discovery,PipeMon can iterate over the running processes to find a suitable injection target.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,PipeMon can inject its modules into various processes using reflective DLL loading.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,PipeMon can check for the presence of ESET and Kaspersky security software.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,"PipeMon, its installer, and tools are signed with stolen code-signing certificates.[1]"
Enterprise,T1082,System Information Discovery,PipeMon can collect and send OS version and computer name as a part of its C2 beacon.[1]
Enterprise,T1016,System Network Configuration Discovery,"PipeMon can collect and send the local IP address, RDP information, and the network adapter physical address as a part of its C2 beacon.[1]"
Enterprise,T1124,System Time Discovery,PipeMon can send time zone information from a compromised host to C2.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,njRAT has used HTTP for C2 communications.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,njRAT has added persistence via the Registry key HKCU\Software\Microsoft\CurrentVersion\Run\ and dropped a shortcut in %STARTUP%.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,njRAT has executed PowerShell commands via auto-run registry key persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,njRAT can launch a command shell interface for executing commands.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,njRAT has a module that steals passwords saved in victim web browsers.[1][3][4]
Enterprise,T1132,Data Encoding: Standard Encoding,njRAT uses Base64 encoding for C2 traffic.[1]
Enterprise,T1005,Data from Local System,njRAT can collect data from a local system.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,njRAT has used HTTP to receive stolen information from the infected machine.[3]
Enterprise,T1083,File and Directory Discovery,njRAT can browse file systems using a file manager module.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,njRAT has modified the Windows firewall to allow itself to communicate through the firewall.[1][3]
Enterprise,T1070,Indicator Removal on Host,njRAT is capable of manipulating and deleting registry keys.[3]
Enterprise,T1070,File Deletion,njRAT is capable of deleting files.[1][3]
Enterprise,T1105,Ingress Tool Transfer,njRAT can download files to the victim’s machine.[1][3]
Enterprise,T1056,Input Capture: Keylogging,njRAT is capable of logging keystrokes.[1][3][4]
Enterprise,T1112,Modify Registry,"njRAT can create, delete, or modify a specified Registry key or value.[1][3]"
Enterprise,T1106,Native API,njRAT has used the ShellExecute() function within a script.[3]
Enterprise,T1027,Obfuscated Files or Information,njRAT has included a base64 encoded executable.[3]
Enterprise,T1027,Compile After Delivery,njRAT has used AutoIt to compile the payload and main script into a single executable after delivery.[3]
Enterprise,T1057,Process Discovery,njRAT can search a list of running processes for Tr.exe.[3]
Enterprise,T1012,Query Registry,njRAT can read specific registry values.[3]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,njRAT has a module for performing remote desktop access.[1]
Enterprise,T1018,Remote System Discovery,njRAT can identify remote hosts on connected networks.[1]
Enterprise,T1113,Screen Capture,njRAT can capture screenshots of the victim’s machines.[3]
Enterprise,T1082,System Information Discovery,njRAT enumerates the victim operating system and computer name during the initial infection.[1]
Enterprise,T1033,System Owner/User Discovery,njRAT enumerates the current user during the initial infection.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,pwdump can be used to dump credentials from the SAM.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BendyBear has decrypted function blocks using a XOR key during runtime to evade detection.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BendyBear communicates to a C2 server over port 443 using modified RC4 and XOR-encrypted chunks.[1]
Enterprise,T1105,Ingress Tool Transfer,BendyBear is designed to download an implant from a C2 server.[1]
Enterprise,T1106,Native API,BendyBear can load and execute modules and Windows Application Programming (API) calls using standard shellcode API hashing.[1]
Enterprise,T1027,Obfuscated Files or Information,BendyBear has encrypted payloads using RC4 and XOR.[1]
Enterprise,T1012,Query Registry,BendyBear can query the host's Registry key at HKEY_CURRENT_USER\Console\QuickEdit to retrieve data.[1]
Enterprise,T1124,System Time Discovery,BendyBear has the ability to determine local time on a compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,BendyBear can check for analysis environments and signs of debugging using the Windows API kernel32!GetTickCountKernel32 call.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Peppy can use HTTP to communicate with C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Peppy has the ability to execute shell commands.[1]
Enterprise,T1083,File and Directory Discovery,Peppy can identify specific files for exfiltration.[1]
Enterprise,T1105,Ingress Tool Transfer,Peppy can download and execute remote files.[1]
Enterprise,T1056,Input Capture: Keylogging,Peppy can log keystrokes on compromised hosts.[1]
Enterprise,T1113,Screen Capture,Peppy can take screenshots on targeted systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,pngdowner uses HTTP for command and control.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,pngdowner deletes content from C2 communications that was saved to the user's temporary directory.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DRATzarus can use HTTP or HTTPS for C2 communications.[1]
Enterprise,T1005,Data from Local System,DRATzarus can collect information from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,DRATzarus can deploy additional tools onto an infected machine.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"DRATzarus has been named Flash.exe, and its dropper has been named IExplorer.[1]"
Enterprise,T1106,Native API,DRATzarus can use various API calls to see if it is running in a sandbox.[1]
Enterprise,T1027,Obfuscated Files or Information,DRATzarus can be partly encrypted with XOR.[1]
Enterprise,T1027,Software Packing,DRATzarus's dropper can be packed with UPX.[1]
Enterprise,T1057,Process Discovery,DRATzarus can enumerate and examine running processes to determine if a debugger is present.[1]
Enterprise,T1018,Remote System Discovery,DRATzarus can search for other machines connected to compromised host and attempt to map the network.[1]
Enterprise,T1033,System Owner/User Discovery,DRATzarus can obtain a list of users from an infected machine.[1]
Enterprise,T1124,System Time Discovery,DRATzarus can use the GetTickCount and GetSystemTimeAsFileTime API calls to inspect system time.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,DRATzarus can use the GetTickCount and GetSystemTimeAsFileTime API calls to measure function timing.[1] DRATzarus can also remotely shut down into sleep mode under specific conditions to evade detection.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SpeakUp uses POST and GET requests over HTTP to communicate with its main C&C server. [1]
Enterprise,T1059,Command and Scripting Interpreter,SpeakUp uses Perl scripts.[1]
Enterprise,T1059,Python,SpeakUp uses Python scripts.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,SpeakUp encodes C&C communication using Base64. [1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SpeakUp deletes files to remove evidence on the machine. [1]
Enterprise,T1105,Ingress Tool Transfer,SpeakUp downloads and executes additional files from a remote server. [1]
Enterprise,T1027,Obfuscated Files or Information,SpeakUp encodes its second-stage payload with Base64. [1]
Enterprise,T1053,Scheduled Task/Job: Cron,SpeakUp uses cron tasks to ensure persistence. [1]
Enterprise,T1082,System Information Discovery,"SpeakUp uses the cat /proc/cpuinfo | grep -c ""cpu family"" 2>&1 command to gather system information. [1]"
Enterprise,T1016,System Network Configuration Discovery,SpeakUp uses the ifconfig -a command. [1]
Enterprise,T1049,System Network Connections Discovery,SpeakUp uses the arp -a command. [1]
Enterprise,T1033,System Owner/User Discovery,SpeakUp uses the whoami command. [1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,JHUHUGIT variants have communicated with C2 servers over HTTP and HTTPS.[3][7][8]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,JHUHUGIT has used a Registry Run key to establish persistence by executing JavaScript code within the rundll32.exe process.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,JHUHUGIT uses a .bat file to execute a .dll.[6]
Enterprise,T1543,Create or Modify System Process: Windows Service,JHUHUGIT has registered itself as a service to establish persistence.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,A JHUHUGIT variant encodes C2 POST data base64.[8]
Enterprise,T1070,Indicator Removal on Host: File Deletion,The JHUHUGIT dropper can delete itself from the victim. Another JHUHUGIT variant has the capability to delete specified files.[3][7]
Enterprise,T1105,Ingress Tool Transfer,JHUHUGIT can retrieve an additional payload from its C2 server.[3][7] JHUHUGIT has a command to download files to the victim’s machine.[6]
Enterprise,T1027,Obfuscated Files or Information,Many strings in JHUHUGIT are obfuscated with a XOR algorithm.[2][3][6]
Enterprise,T1057,Process Discovery,JHUHUGIT obtains a list of running processes on the victim.[3][7]
Enterprise,T1055,Process Injection,JHUHUGIT performs code injection injecting its own functions to browser processes.[2][7]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,JHUHUGIT has registered itself as a scheduled task to run each time the current user logs in.[3][9]
Enterprise,T1113,Screen Capture,"A JHUHUGIT variant takes screenshots by simulating the user pressing the ""Take Screenshot"" key (VK_SCREENSHOT), accessing the screenshot saved in the clipboard, and converting it to a JPG image.[8][6]"
Enterprise,T1218,System Binary Proxy Execution: Rundll32,JHUHUGIT is executed using rundll32.exe.[2][6]
Enterprise,T1082,System Information Discovery,JHUHUGIT obtains a build identifier as well as victim hard drive information from Windows registry key HKLM\SYSTEM\CurrentControlSet\Services\Disk\Enum. Another JHUHUGIT variant gathers the victim storage volume serial number and the storage device name.[3][7]
Enterprise,T1016,System Network Configuration Discovery,A JHUHUGIT variant gathers network interface card information.[8]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Astaroth creates a startup item for persistence. [2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Astaroth's initial payload is a malicious .LNK file. [2][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Astaroth spawns a CMD process to execute commands. [1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Astaroth has used malicious VBS e-mail attachments for execution.[3]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Astaroth uses JavaScript to perform its core functionalities. [2][3]
Enterprise,T1555,Credentials from Password Stores,Astaroth uses an external software known as NetPass to recover passwords. [1]
Enterprise,T1132,Data Encoding: Standard Encoding,Astaroth encodes data using Base64 before sending it to the C2 server. [2]
Enterprise,T1074,Data Staged: Local Data Staging,Astaroth collects data in a plaintext file named r1.log before exfiltration. [2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Astaroth uses a fromCharCode() deobfuscation method to avoid explicitly writing execution commands and to hide its code. [1][3]
Enterprise,T1041,Exfiltration Over C2 Channel,Astaroth exfiltrates collected information from its r1.log file to the external C2 server. [1]
Enterprise,T1564,Hide Artifacts: Hidden Window,"Astaroth loads its module with the XSL script parameter vShow set to zero, which opens the application with a hidden window. [1]"
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Astaroth can abuse alternate data streams (ADS) to store content for malicious payloads.[3]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Astaroth can launch itself via DLL Search Order Hijacking.[3]
Enterprise,T1105,Ingress Tool Transfer,Astaroth uses certutil and BITSAdmin to download additional malware. [2][1][3]
Enterprise,T1056,Input Capture: Keylogging,Astaroth logs keystrokes from the victim's machine. [2]
Enterprise,T1027,Obfuscated Files or Information,"Astaroth obfuscates its JScript code, and has used an XOR-based algorithm to encrypt payloads twice with different keys.[1][3]"
Enterprise,T1027,Software Packing,Astaroth uses a software packer called Pe123\RPolyCryptor.[1]
Enterprise,T1057,Process Discovery,Astaroth searches for different processes on the system.[1]
Enterprise,T1055,Process Injection: Process Hollowing,Astaroth can create a new process in a suspended state from a targeted legitimate process in order to unmap its memory and replace it with malicious code.[1][3]
Enterprise,T1518,Software Discovery: Security Software Discovery,Astaroth checks for the presence of Avast antivirus in the C:\Program\Files\ folder. [2]
Enterprise,T1218,System Binary Proxy Execution: Compiled HTML File,Astaroth uses ActiveX objects for file execution and manipulation. [2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Astaroth can be loaded through regsvr32.exe.[1]
Enterprise,T1082,System Information Discovery,Astaroth collects the machine name and keyboard language from the system. [2][1]
Enterprise,T1016,System Network Configuration Discovery,Astaroth collects the external IP address from the system. [2]
Enterprise,T1124,System Time Discovery,Astaroth collects the timestamp from the infected machine. [2]
Enterprise,T1204,User Execution: Malicious File,"Astaroth has used malicious files including VBS, LNK, and HTML for execution.[3]"
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Astaroth can check for Windows product ID's used by sandboxes and usernames and disk serial numbers associated with analyst environments.[3]
Enterprise,T1102,Web Service: Dead Drop Resolver,Astaroth can store C2 information on cloud hosting services such as AWS and CloudFlare and websites like YouTube and Facebook.[3]
Enterprise,T1047,Windows Management Instrumentation,Astaroth uses WMIC to execute payloads. [2]
Enterprise,T1543,Create or Modify System Process: Windows Service,PsExec can leverage Windows services to escalate privileges from administrator to SYSTEM with the -s argument.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,"PsExec, a tool that has been used by adversaries, writes programs to the ADMIN$ network share to execute commands on remote systems.[4]"
Enterprise,T1569,System Services: Service Execution,Microsoft Sysinternals PsExec is a popular administration tool that can be used to execute binaries on remote systems using a temporary Windows service.[1]
Enterprise,T1087,Account Discovery: Cloud Account,AADInternals can enumerate Azure AD users.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,AADInternals is written and executed via PowerShell.[2]
Enterprise,T1112,Modify Registry,AADInternals can modify registry keys as part of setting a new pass-through authentication agent.[2]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,AADInternals can dump secrets from the Local Security Authority.[2]
Enterprise,T1069,Permission Groups Discovery: Cloud Groups,AADInternals can enumerate Azure AD groups.[2]
Enterprise,T1566,Phishing: Spearphishing Link,"AADInternals can send ""consent phishing"" emails containing malicious links designed to steal users’ access tokens.[2]"
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Javali has used embedded VBScript to download malicious payloads from C2.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"Javali can capture login credentials from open browsers including Firefox, Chrome, Internet Explorer, and Edge.[1]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Javali can use DLL side-loading to load malicious DLLs into legitimate executables.[1]
Enterprise,T1105,Ingress Tool Transfer,Javali can download payloads from remote C2 servers.[1]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,Javali can use large obfuscated libraries to hinder detection and analysis.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Javali has been delivered as malicious e-mail attachments.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Javali has been delivered via malicious links embedded in e-mails.[1]
Enterprise,T1057,Process Discovery,Javali can monitor processes for open browsers and custom banking applications.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Javali has used the MSI installer to download and execute malicious payloads.[1]
Enterprise,T1204,User Execution: Malicious Link,Javali has achieved execution through victims clicking links to malicious websites.[1]
Enterprise,T1204,User Execution: Malicious File,"Javali has achieved execution through victims opening malicious attachments, including MSI files with embedded VBScript.[1]"
Enterprise,T1102,Web Service: Dead Drop Resolver,Javali can read C2 information from Google Documents and YouTube.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,hcdLoader provides command-line access to the compromised system.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,hcdLoader installs itself as a service for persistence.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,DDKONG decodes an embedded configuration using XOR.[1]
Enterprise,T1083,File and Directory Discovery,DDKONG lists files on the victim’s machine.[1]
Enterprise,T1105,Ingress Tool Transfer,DDKONG downloads and uploads files on the victim’s machine.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,DDKONG uses Rundll32 to ensure only a single instance of itself is running at once.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MegaCortex has used .cmd scripts on the victim's system.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,MegaCortex has used a Base64 key to decode its components.[1]
Enterprise,T1083,File and Directory Discovery,MegaCortex can parse the available drives and directories to determine which files to encrypt.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,MegaCortex was used to kill endpoint security processes.[1]
Enterprise,T1112,Modify Registry,MegaCortex has added entries to the Registry for ransom contact information.[1]
Enterprise,T1106,Native API,"After escalating privileges, MegaCortex calls TerminateProcess(), CreateRemoteThread, and other Win32 APIs.[1]"
Enterprise,T1588,Obtain Capabilities: Code Signing Certificates,MegaCortex has used code signing certificates issued to fake companies to bypass security controls.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,MegaCortex loads injecthelper.dll into a newly created rundll32.exe process.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,MegaCortex has used rundll32.exe to load a DLL for file encryption.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,MegaCortex has checked the number of CPUs in the system to avoid being run in a sandbox or emulator.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,zwShell can launch command-line shells.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,zwShell has established persistence by adding itself as a new service.[1]
Enterprise,T1083,File and Directory Discovery,zwShell can browse the file system.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,zwShell has deleted itself after creating a service as well as deleted a temporary file when the system reboots.[1]
Enterprise,T1112,Modify Registry,zwShell can modify the Registry.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,zwShell has used RDP for lateral movement.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,zwShell has been copied over network shares to move laterally.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,zwShell has used SchTasks for execution.[1]
Enterprise,T1082,System Information Discovery,zwShell can obtain the victim PC name and OS version.[1]
Enterprise,T1016,System Network Configuration Discovery,zwShell can obtain the victim IP address.[1]
Enterprise,T1033,System Owner/User Discovery,zwShell can obtain the name of the logged-in user on the victim.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TDTESS provides a reverse shell on the victim.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"If running as administrator, TDTESS installs itself as a new service named bmwappushservice to establish persistence.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,TDTESS creates then deletes log files during installation of itself as a service.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,"After creating a new service for persistence, TDTESS sets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file.[1]"
Enterprise,T1105,Ingress Tool Transfer,TDTESS has a command to download and execute an additional file.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,QUADAGENT uses HTTPS and HTTP for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: DNS,QUADAGENT uses DNS for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,QUADAGENT uses PowerShell scripts for execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,QUADAGENT uses cmd.exe to execute scripts and commands on the victim’s machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,QUADAGENT uses VBScripts.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,QUADAGENT encodes C2 communications with base64.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,QUADAGENT uses AES and a preshared key to decrypt the custom Base64 routine used to encode strings and scripts.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,QUADAGENT has a command to delete its Registry key and scheduled task.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,QUADAGENT used the PowerShell filenames Office365DCOMCheck.ps1 and SystemDiskClean.ps1.[1]
Enterprise,T1112,Modify Registry,QUADAGENT modifies an HKCU Registry key to store a session identifier unique to the compromised system as well as a pre-shared key used for encrypting and decrypting C2 communications.[1]
Enterprise,T1027,Obfuscated Files or Information,QUADAGENT was likely obfuscated using Invoke-Obfuscation.[1][2]
Enterprise,T1012,Query Registry,QUADAGENT checks if a value exists within a Registry key in the HKCU hive whose name is the same as the scheduled task it has created.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,QUADAGENT creates a scheduled task to maintain persistence on the victim’s machine.[1]
Enterprise,T1016,System Network Configuration Discovery,QUADAGENT gathers the current domain the victim system belongs to.[1]
Enterprise,T1033,System Owner/User Discovery,QUADAGENT gathers the victim username.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,JPIN can communicate over FTP.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,JPIN can send email over SMTP.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,JPIN can use the command-line utility cacls.exe to change file permissions.[1]
Enterprise,T1083,File and Directory Discovery,JPIN can enumerate drives and their types. It can also change file permissions using cacls.exe.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,JPIN can lower security settings by changing Registry keys.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,JPIN's installer/uninstaller component deletes itself if it encounters a version of Windows earlier than Windows XP or identifies security-related processes running.[1]
Enterprise,T1105,Ingress Tool Transfer,JPIN can download files and upgrade itself.[1]
Enterprise,T1056,Input Capture: Keylogging,JPIN contains a custom keylogger.[1]
Enterprise,T1027,Obfuscated Files or Information,A JPIN uses a encrypted and compressed payload that is disguised as a bitmap within the resource section of the installer.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,JPIN can obtain the permissions of the victim user.[1]
Enterprise,T1057,Process Discovery,JPIN can list running processes.[1]
Enterprise,T1055,Process Injection,JPIN can inject content into lsass.exe to load a module.[1]
Enterprise,T1012,Query Registry,JPIN can enumerate Registry keys.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,JPIN checks for the presence of certain security-related processes and deletes its installer/uninstaller component if it identifies any of them.[1]
Enterprise,T1082,System Information Discovery,JPIN can obtain system information such as OS version and disk space.[1]
Enterprise,T1016,System Network Configuration Discovery,"JPIN can obtain network information, including DNS, IP, and proxies.[1]"
Enterprise,T1033,System Owner/User Discovery,JPIN can obtain the victim user name.[1]
Enterprise,T1056,Input Capture: Keylogging,NetTraveler contains a keylogger.[1]
Enterprise,T1560,Archive Collected Data,Kessel can RC4-encrypt credentials before sending to the C2.[1]
Enterprise,T1059,Command and Scripting Interpreter,Kessel can create a reverse shell between the infected host and a specified system.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Kessel has exfiltrated data via hexadecimal-encoded subdomain fields of DNS queries.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Kessel has decrypted the binary's configuration once the main function was launched.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Kessel has exfiltrated information gathered from the infected system to the C2 server.[1]
Enterprise,T1105,Ingress Tool Transfer,Kessel can download additional modules from the C2 server.[1]
Enterprise,T1027,Obfuscated Files or Information,Kessel's configuration is hardcoded and RC4 encrypted within the binary.[1]
Enterprise,T1090,Proxy,Kessel can use a proxy during exfiltration if set in the configuration.[1]
Enterprise,T1082,System Information Discovery,"Kessel has collected the system architecture, OS version, and MAC address information.[1]"
Enterprise,T1016,System Network Configuration Discovery,Kessel has collected the DNS address of the infected host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DealersChoice uses HTTP for communication with the C2 server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,DealersChoice makes modifications to open-source scripts from GitHub and executes them on the victim’s machine.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"GRIFFON has used a persistence module that stores the implant inside the Registry, which executes at logon.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,GRIFFON has used PowerShell to execute the Meterpreter downloader TinyMet.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,GRIFFON is written in and executed as JavaScript.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,GRIFFON has used a reconnaissance module that can be used to retrieve Windows domain membership information.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,GRIFFON has used sctasks for persistence. [1]
Enterprise,T1113,Screen Capture,GRIFFON has used a screenshot module that can be used to take a screenshot of the remote system.[1]
Enterprise,T1082,System Information Discovery,"GRIFFON has used a reconnaissance module that can be used to retrieve information about a victim's computer, including the resolution of the workstation .[1]"
Enterprise,T1124,System Time Discovery,GRIFFON has used a reconnaissance module that can be used to retrieve the date and time of the system.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Lslsass can dump active logon session password hashes from the lsass process.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HARDRAIN uses cmd.exe to execute netshcommands.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,HARDRAIN opens the Windows Firewall to modify incoming connections.[1]
Enterprise,T1090,Proxy,"HARDRAIN uses the command cmd.exe /c netsh firewall add portopening TCP 443 ""adp"" and makes the victim machine function as a proxy server.[1]"
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,T9000 encrypts collected data using a single byte XOR key.[2]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"During the T9000 installation process, it drops a copy of the legitimate Microsoft binary igfxtray.exe. The executable contains a side-loading weakness which is used to load a portion of the malware.[2]"
Enterprise,T1113,Screen Capture,"T9000 can take screenshots of the desktop and target application windows, saving them to user directories as one byte XOR encrypted .dat files.[2]"
Enterprise,T1518,Software Discovery: Security Software Discovery,T9000 performs checks for various antivirus and security products during installation.[2]
Enterprise,T1082,System Information Discovery,T9000 gathers and beacons the operating system build number and CPU Architecture (32-bit/64-bit) during installation.[2]
Enterprise,T1016,System Network Configuration Discovery,T9000 gathers and beacons the MAC and IP addresses during installation.[2]
Enterprise,T1033,System Owner/User Discovery,T9000 gathers and beacons the username of the logged in account during installation. It will also gather the username of running processes to determine if it is running as SYSTEM.[2]
Enterprise,T1124,System Time Discovery,T9000 gathers and beacons the system time during installation.[2]
Enterprise,T1087,Account Discovery: Local Account,Kwampirs collects a list of accounts with the command net users.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Kwampirs creates a new service named WmiApSrvEx to establish persistence.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Kwampirs decrypts and extracts a copy of its main DLL payload when executing.[1]
Enterprise,T1083,File and Directory Discovery,"Kwampirs collects a list of files and directories in C:\ with the command dir /s /a c:\ >> ""C:\windows\TEMP[RANDOM].tmp"".[1]"
Enterprise,T1105,Ingress Tool Transfer,Kwampirs downloads additional files from C2 servers.[2]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Kwampirs establishes persistence by adding a new service with the display name ""WMI Performance Adapter Extension"" in an attempt to masquerade as a legitimate WMI service.[1]"
Enterprise,T1027,Obfuscated Files or Information,Kwampirs downloads additional files that are base64-encoded and encrypted with another cipher.[2]
Enterprise,T1027,Binary Padding,"Before writing to disk, Kwampirs inserts a randomly generated string into the middle of the decrypted payload in an attempt to evade hash-based detections.[1]"
Enterprise,T1069,Permission Groups Discovery: Local Groups,Kwampirs collects a list of users belonging to the local users and administrators groups with the commands net localgroup administrators and net localgroup users.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Kwampirs collects a list of domain groups with the command net localgroup /domain.[1]
Enterprise,T1057,Process Discovery,Kwampirs collects a list of running services with the command tasklist /v.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Kwampirs copies itself over network shares to move laterally on a victim network.[1]
Enterprise,T1018,Remote System Discovery,Kwampirs collects a list of available servers with the command net view.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Kwampirs uses rundll32.exe in a Registry value added to establish persistence.[1]
Enterprise,T1082,System Information Discovery,"Kwampirs collects OS version information such as registered owner details, manufacturer details, processor type, available storage, installed patches, hostname, version info, system date, and other system information by using the commands systeminfo, net config workstation, hostname, ver, set, and date /t.[1]"
Enterprise,T1016,System Network Configuration Discovery,"Kwampirs collects network adapter and interface information by using the commands ipconfig /all, arp -a and route print. It also collects the system's MAC address with getmac and domain configuration with net config workstation.[1]"
Enterprise,T1049,System Network Connections Discovery,Kwampirs collects a list of active and listening connections by using the command netstat -nao as well as a list of available network mappings with net use.[1]
Enterprise,T1033,System Owner/User Discovery,Kwampirs collects registered owner details by using the commands systeminfo and net config workstation.[1]
Enterprise,T1560,Archive Collected Data,Dtrack packs collected data into a password protected archive.[2]
Enterprise,T1547,Boot or Logon Autostart Execution,Dtrack’s RAT makes a persistent target file with auto execution on the host start.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Dtrack has used cmd.exe to add a persistent service.[4]
Enterprise,T1543,Create or Modify System Process: Windows Service,Dtrack can add a service called WBService to establish persistence.[4]
Enterprise,T1005,Data from Local System,Dtrack can collect a variety of information from victim machines.[4]
Enterprise,T1074,Data Staged: Local Data Staging,"Dtrack can save collected data to disk, different file formats, and network shares.[2][4]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,Dtrack has used a decryption routine that is part of an executable physical patch.[2]
Enterprise,T1083,File and Directory Discovery,Dtrack can list files on available disk volumes.[2][4]
Enterprise,T1574,Hijack Execution Flow,One of Dtrack can replace the normal flow of a program execution with malicious code.[4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Dtrack can remove its persistence and delete itself.[2]
Enterprise,T1105,Ingress Tool Transfer,Dtrack’s can download and upload a file to the victim’s computer.[2][4]
Enterprise,T1056,Input Capture: Keylogging,Dtrack’s dropper contains a keylogging executable.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"One of Dtrack can hide in replicas of legitimate programs like OllyDbg, 7-Zip, and FileZilla.[4]"
Enterprise,T1027,Obfuscated Files or Information,Dtrack has used a dropper that embeds an encrypted payload as extra data.[2]
Enterprise,T1057,Process Discovery,Dtrack’s dropper can list all running processes.[2][4]
Enterprise,T1055,Process Injection: Process Hollowing,Dtrack has used process hollowing shellcode to target a predefined list of processes from %SYSTEM32%.[2]
Enterprise,T1012,Query Registry,"Dtrack can collect the RegisteredOwner, RegisteredOrganization, and InstallDate registry values.[4]"
Enterprise,T1082,System Information Discovery,"Dtrack can collect the victim's computer name, hostname and adapter information to create a unique identifier.[2][4]"
Enterprise,T1016,System Network Configuration Discovery,Dtrack can collect the host's IP addresses using the ipconfig command.[2][4]
Enterprise,T1049,System Network Connections Discovery,Dtrack can collect network and active connection information.[2]
Enterprise,T1078,Valid Accounts,Dtrack used hard-coded credentials to gain access to a network share.[4]
Enterprise,T1071,Application Layer Protocol: DNS,Pisloader uses DNS as its C2 protocol.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Pisloader establishes persistence via a Registry Run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Pisloader uses cmd.exe to set the Registry Run key value. It also has a command to spawn a command shell.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Responses from the Pisloader C2 server are base32-encoded.[1]
Enterprise,T1083,File and Directory Discovery,Pisloader has commands to list drives on the victim machine and to list file information for a given directory.[1]
Enterprise,T1105,Ingress Tool Transfer,Pisloader has a command to upload a file to the victim machine.[1]
Enterprise,T1027,Obfuscated Files or Information,"Pisloader obfuscates files by splitting strings into smaller sub-strings and including ""garbage"" strings that are never used. The malware also uses return-oriented programming (ROP) technique and single-byte XOR to obfuscate data.[1]"
Enterprise,T1082,System Information Discovery,"Pisloader has a command to collect victim system information, including the system name and OS version.[1]"
Enterprise,T1016,System Network Configuration Discovery,Pisloader has a command to collect the victim's IP address.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,CORESHELL can communicate over HTTP for C2.[1][4]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,CORESHELL can communicate over SMTP and POP3 for C2.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"CORESHELL has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.[4]"
Enterprise,T1132,Data Encoding: Standard Encoding,CORESHELL C2 messages are Base64-encoded.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CORESHELL C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.[1]
Enterprise,T1105,Ingress Tool Transfer,CORESHELL downloads another dropper from its C2 server.[1]
Enterprise,T1027,Obfuscated Files or Information,CORESHELL obfuscates strings using a custom stream cipher.[1]
Enterprise,T1027,Binary Padding,CORESHELL contains unused machine instructions in a likely attempt to hinder analysis.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"CORESHELL is installed via execution of rundll32 with an export named ""init"" or ""InitW.""[4]"
Enterprise,T1082,System Information Discovery,"CORESHELL collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,CORESHELL can communicate over HTTP for C2.[1][4]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,CORESHELL can communicate over SMTP and POP3 for C2.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"CORESHELL has established persistence by creating autostart extensibility point (ASEP) Registry entries in the Run key and other Registry keys, as well as by creating shortcuts in the Internet Explorer Quick Start folder.[4]"
Enterprise,T1132,Data Encoding: Standard Encoding,CORESHELL C2 messages are Base64-encoded.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CORESHELL C2 messages are encrypted with custom stream ciphers using six-byte or eight-byte keys.[1]
Enterprise,T1105,Ingress Tool Transfer,CORESHELL downloads another dropper from its C2 server.[1]
Enterprise,T1027,Obfuscated Files or Information,CORESHELL obfuscates strings using a custom stream cipher.[1]
Enterprise,T1027,Binary Padding,CORESHELL contains unused machine instructions in a likely attempt to hinder analysis.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"CORESHELL is installed via execution of rundll32 with an export named ""init"" or ""InitW.""[4]"
Enterprise,T1082,System Information Discovery,"CORESHELL collects hostname, volume serial number and OS version data from the victim and sends the information to its C2 server.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,GrimAgent has the ability to use HTTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,GrimAgent can set persistence with a Registry run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"GrimAgent can use the Windows Command Shell to execute commands, including its own removal.[1]"
Enterprise,T1132,Data Encoding: Standard Encoding,GrimAgent can base64 encode C2 replies.[1]
Enterprise,T1005,Data from Local System,GrimAgent can collect data and files from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,GrimAgent can use a decryption algorithm for strings based on Rotate on Right (RoR) and Rotate on Left (RoL) functionality.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,GrimAgent can use an AES key to encrypt C2 communications.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,GrimAgent can use a hardcoded server public RSA key to encrypt the first request to C2.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,GrimAgent has sent data related to a compromise host over its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,GrimAgent has the ability to enumerate files and directories on a compromised host.[1]
Enterprise,T1070,Indicator Removal on Host,GrimAgent can delete previously created tasks on a compromised host.[1]
Enterprise,T1070,File Deletion,GrimAgent can delete old binaries on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,GrimAgent has the ability to download and execute additional payloads.[1]
Enterprise,T1106,Native API,GrimAgent can use Native API including GetProcAddress and ShellExecuteW.[1]
Enterprise,T1027,Obfuscated Files or Information,GrimAgent has used Rotate on Right (RoR) and Rotate on Left (RoL) functionality to encrypt strings.[1]
Enterprise,T1027,Binary Padding,GrimAgent has the ability to add bytes to change the file hash.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,GrimAgent has the ability to set persistence using the Task Scheduler.[1]
Enterprise,T1082,System Information Discovery,"GrimAgent can collect the OS, and build version on a compromised host.[1]"
Enterprise,T1016,System Network Configuration Discovery,GrimAgent can enumerate the IP and domain of a target system.[1]
Enterprise,T1033,System Owner/User Discovery,GrimAgent can identify the user id on a target machine.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,GrimAgent can sleep for 195 - 205 seconds after payload execution and before deleting its task.[1]
Enterprise,T1087,Account Discovery: Local Account,Stuxnet enumerates user accounts of the local host.[1]
Enterprise,T1087,Account Discovery: Domain Account,Stuxnet enumerates user accounts of the domain.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Stuxnet uses HTTP to communicate with a command and control server. [1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Stuxnet encrypts exfiltrated data via C2 with static 31-byte long XOR keys.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Stuxnet used copies of .lnk shortcuts to propagate through removable media.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Stuxnet uses a driver registered as a boot start service as the main load-point.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Stuxnet transforms encrypted binary data into an ASCII string in order to use it as a URL parameter value.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Stuxnet decrypts resources that are loaded into memory and executed.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Stuxnet encodes the payload of system information sent to the command and control servers using a one byte 0xFF XOR key. Stuxnet also uses a 31-byte long static byte string to XOR data sent to command and control servers. The servers use a different static key to encrypt replies to the implant.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Stuxnet sends compromised victim information via HTTP.[1]
Enterprise,T1083,File and Directory Discovery,Stuxnet uses a driver to scan for specific filesystem driver objects.[1]
Enterprise,T1562,Impair Defenses,Stuxnet reduces the integrity level of objects to allow write actions.[1]
Enterprise,T1070,Indicator Removal on Host,Stuxnet can delete OLE Automation and SQL stored procedures used to store malicious payloads.[1]
Enterprise,T1070,File Deletion,Stuxnet uses an RPC server that contains a routine for file deletion and also removes itself from the system through a DLL export by deleting specific files.[1]
Enterprise,T1070,Timestomp,Stuxnet extracts and writes driver files that match the times of other legitimate files.[1]
Enterprise,T1112,Modify Registry,Stuxnet can create registry keys to load driver files.[1]
Enterprise,T1106,Native API,Stuxnet uses the SetSecurityDescriptorDacl API to reduce object integrity levels.[1]
Enterprise,T1027,Obfuscated Files or Information,Stuxnet uses encrypted configuration blocks and writes encrypted files to disk.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"Stuxnet injects an entire DLL into an existing, newly created, or preselected trusted process.[1]"
Enterprise,T1090,Proxy: Internal Proxy,Stuxnet installs an RPC server for P2P communications.[1]
Enterprise,T1012,Query Registry,Stuxnet searches the Registry for indicators of security programs.[1]
Enterprise,T1021,Remote Services,Stuxnet can propagate via peer-to-peer communication and updates using RPC.[1]
Enterprise,T1021,SMB/Windows Admin Shares,Stuxnet propagates to available network shares.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Stuxnet schedules a network job to execute two minutes after host infection.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Stuxnet enumerates the currently running processes related to a variety of security products.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Stuxnet used a digitally signed driver with a compromised Realtek certificate.[1]
Enterprise,T1082,System Information Discovery,"Stuxnet collects system information including computer and domain names, OS version, and S7P paths.[1]"
Enterprise,T1016,System Network Configuration Discovery,Stuxnet collects the IP address of a compromised system.[1]
Enterprise,T1124,System Time Discovery,Stuxnet collects the time and date of a system when it is infected.[1]
Enterprise,T1078,Valid Accounts: Default Accounts,Stuxnet infected WinCC machines via a hardcoded database server password.[1]
Enterprise,T1078,Valid Accounts: Domain Accounts,Stuxnet attempts to access network resources with a domain account’s credentials.[1]
Enterprise,T1047,Windows Management Instrumentation,Stuxnet used WMI with an explorer.exe token to execute on a remote share.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Tor encapsulates traffic in multiple layers of encryption, using TLS by default.[1]"
Enterprise,T1090,Proxy: Multi-hop Proxy,Traffic traversing the Tor network will be forwarded to multiple nodes before exiting the Tor network and continuing on to its intended destination.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Tor encapsulates traffic in multiple layers of encryption, using TLS by default.[1]"
Enterprise,T1090,Proxy: Multi-hop Proxy,Traffic traversing the Tor network will be forwarded to multiple nodes before exiting the Tor network and continuing on to its intended destination.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Crutch has conducted C2 communications with a Dropbox account using the HTTP API.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Crutch has used the WinRAR utility to compress and encrypt stolen files.[1]
Enterprise,T1005,Data from Local System,Crutch can exfiltrate files from compromised systems.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Crutch has staged stolen files in the C:\AMD\Temp directory.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Crutch can exfiltrate data over the primary C2 channel (Dropbox HTTP API).[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,"Crutch can persist via DLL search order hijacking on Google Chrome, Mozilla Firefox, or Microsoft OneDrive.[1]"
Enterprise,T1036,Masquerading: Masquerade Task or Service,Crutch has established persistence with a scheduled task impersonating the Outlook item finder.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Crutch has the ability to persist using scheduled tasks.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Crutch can use Dropbox to receive commands and upload stolen data.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Seth-Locker can execute commands via the command line shell.[1]
Enterprise,T1105,Ingress Tool Transfer,Seth-Locker has the ability to download and execute files on a compromised host.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,"Chaos provides a reverse shell connection on 8338/TCP, encrypted via AES.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"Chaos provides a reverse shell connection on 8338/TCP, encrypted via AES.[1]"
Enterprise,T1560,Archive Collected Data,Cadelspy has the ability to compress stolen data into a .cab file.[1]
Enterprise,T1056,Input Capture: Keylogging,Cadelspy has the ability to log keystrokes on the compromised host.[1]
Enterprise,T1113,Screen Capture,Cadelspy has the ability to capture screenshots and webcam photos.[1]
Enterprise,T1082,System Information Discovery,Cadelspy has the ability to discover information about the compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"APT12 has used RIPTIDE, a RAT that uses HTTP to communicate.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"APT12 has used the RIPTIDE RAT, which communicates over HTTP with a payload encrypted with RC4.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,CallMe has the capability to create a reverse shell on victims.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CallMe uses AES to encrypt C2 traffic.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,CallMe exfiltrates data to its C2 server over the same protocol as C2 communications.[1]
Enterprise,T1105,Ingress Tool Transfer,CallMe has the capability to download a file to the victim from the C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SharpStage has the ability to create persistence for the malware using the Registry autorun key and startup folder.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SharpStage can execute arbitrary commands with PowerShell.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SharpStage can execute arbitrary commands with the command line.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SharpStage has decompressed data received from the C2 server.[2]
Enterprise,T1105,Ingress Tool Transfer,SharpStage has the ability to download and execute additional payloads via a DropBox API.[1][2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,SharpStage has a persistence component to write a scheduled task for the payload.[1]
Enterprise,T1113,Screen Capture,SharpStage has the ability to capture the victim's screen.[1][2]
Enterprise,T1082,System Information Discovery,SharpStage has checked the system settings to see if Arabic is the configured language.[2]
Enterprise,T1102,Web Service,SharpStage has used a legitimate web service for evading detection.[1]
Enterprise,T1047,Windows Management Instrumentation,SharpStage can use WMI for execution.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Hydraq creates new services to establish persistence.[3][10][11]
Enterprise,T1005,Data from Local System,Hydraq creates a backdoor through which remote attackers can read data from files.[3][10]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Hydraq C2 traffic is encrypted using bitwise NOT and XOR operations.[10]
Enterprise,T1083,File and Directory Discovery,"Hydraq creates a backdoor through which remote attackers can check for the existence of files, including its own components, as well as retrieve a list of logical drives.[3][10]"
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Hydraq creates a backdoor through which remote attackers can clear all system event logs.[3][10]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Hydraq creates a backdoor through which remote attackers can delete files.[3][10]
Enterprise,T1105,Ingress Tool Transfer,Hydraq creates a backdoor through which remote attackers can download files and additional malware components.[3][10]
Enterprise,T1112,Modify Registry,"Hydraq creates a Registry subkey to register its created service, and can also uninstall itself later by deleting this value. Hydraq's backdoor also enables remote attackers to modify and delete subkeys.[3][10]"
Enterprise,T1027,Obfuscated Files or Information,Hydraq uses basic obfuscation in the form of spaghetti code.[2][3]
Enterprise,T1057,Process Discovery,Hydraq creates a backdoor through which remote attackers can monitor processes.[3][10]
Enterprise,T1012,Query Registry,"Hydraq creates a backdoor through which remote attackers can retrieve system information, such as CPU speed, from Registry keys.[3][10]"
Enterprise,T1113,Screen Capture,Hydraq includes a component based on the code of VNC that can stream a live feed of the desktop of an infected host.[10]
Enterprise,T1082,System Information Discovery,"Hydraq creates a backdoor through which remote attackers can retrieve information such as computer name, OS version, processor speed, memory size, and CPU speed.[10]"
Enterprise,T1016,System Network Configuration Discovery,Hydraq creates a backdoor through which remote attackers can retrieve IP addresses of compromised machines.[3][10]
Enterprise,T1569,System Services: Service Execution,Hydraq uses svchost.exe to execute a malicious DLL included in a new service group.[11]
Enterprise,T1071,Application Layer Protocol: Web Protocols,CharmPower can use HTTP to communicate with C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,CharmPower can use PowerShell for payload execution and C2 communication.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,The C# implementation of the CharmPower command execution module can use cmd.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,CharmPower can send additional modules over C2 encoded with base64.[1]
Enterprise,T1005,Data from Local System,CharmPower can collect data and files from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,CharmPower can decrypt downloaded modules prior to execution.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CharmPower can send additional modules over C2 encrypted with a simple substitution cipher.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,CharmPower can exfiltrate gathered data to a hardcoded C2 URL via HTTP POST.[1]
Enterprise,T1083,File and Directory Discovery,CharmPower can enumerate drives and list the contents of the C: drive on a victim's computer.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,CharmPower can delete created files from a compromised system.[1]
Enterprise,T1105,Ingress Tool Transfer,CharmPower has the ability to download additional modules to a compromised host.[1]
Enterprise,T1112,Modify Registry,CharmPower can remove persistence-related artifacts from the Registry.[1]
Enterprise,T1057,Process Discovery,CharmPower has the ability to list running processes through the use of tasklist.[1]
Enterprise,T1012,Query Registry,CharmPower has the ability to enumerate Uninstall registry values.[1]
Enterprise,T1113,Screen Capture,CharmPower has the ability to capture screenshots.[1]
Enterprise,T1518,Software Discovery,CharmPower can list the installed applications on a compromised host.[1]
Enterprise,T1082,System Information Discovery,CharmPower can enumerate the OS version and computer name on a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,CharmPower has the ability to use ipconfig to enumerate system network settings.[1]
Enterprise,T1049,System Network Connections Discovery,CharmPower can use netsh wlan show profiles to list specific Wi-Fi profile details.[1]
Enterprise,T1102,Web Service,CharmPower can download additional modules from actor-controlled Amazon S3 buckets.[1]
Enterprise,T1102,Dead Drop Resolver,CharmPower can retrieve C2 domain information from actor-controlled S3 buckets.[1]
Enterprise,T1047,Windows Management Instrumentation,CharmPower can use wmic to gather information from a system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,WindTail has the ability to use HTTP for C2 communications.[3]
Enterprise,T1560,Archive Collected Data: Archive via Utility,WindTail has the ability to use the macOS built-in zip utility to archive files.[3]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,WindTail can use the open command to execute an application.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WindTail has the ability to decrypt strings using hard-coded AES keys.[2]
Enterprise,T1083,File and Directory Discovery,WindTail has the ability to enumerate the users home directory and the path to its own application bundle.[2][3]
Enterprise,T1564,Hide Artifacts: Hidden Window,WindTail can instruct the OS to execute an application without a dock icon or menu.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,WindTail has the ability to receive and execute a self-delete command.[3]
Enterprise,T1036,Masquerading,WindTail has used icons mimicking MS Office files to mask payloads.[2]
Enterprise,T1036,Invalid Code Signature,WindTail has been incompletely signed with revoked certificates.[2]
Enterprise,T1106,Native API,"WindTail can invoke Apple APIs contentsOfDirectoryAtPath, pathExtension, and (string) compare.[3]"
Enterprise,T1027,Obfuscated Files or Information,"WindTail can be delivered as a compressed, encrypted, and encoded payload.[3]"
Enterprise,T1124,System Time Discovery,WindTail has the ability to generate the current date and time.[2]
Enterprise,T1059,Command and Scripting Interpreter,WINERACK can create a reverse shell that utilizes statically-linked Wine cmd.exe code to emulate Windows command prompt commands.[1]
Enterprise,T1083,File and Directory Discovery,WINERACK can enumerate files and directories.[1]
Enterprise,T1057,Process Discovery,WINERACK can enumerate processes.[1]
Enterprise,T1082,System Information Discovery,WINERACK can gather information about the host.[1]
Enterprise,T1033,System Owner/User Discovery,WINERACK can gather information on the victim username.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FlawedAmmyy has used HTTP for C2.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,FlawedAmmyy has used SEAL encryption during the initial C2 handshake.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,FlawedAmmyy enumerates the privilege level of the victim during the initial infection.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,FlawedAmmyy will attempt to detect anti-virus products during the initial infection.[1]
Enterprise,T1082,System Information Discovery,FlawedAmmyy beacons out the victim operating system and computer name during the initial infection.[1]
Enterprise,T1033,System Owner/User Discovery,FlawedAmmyy enumerates the current user during the initial infection.[1]
Enterprise,T1047,Windows Management Instrumentation,FlawedAmmyy leverages WMI to enumerate anti-virus on the victim.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PHOREAL is capable of creating reverse shell.[1]
Enterprise,T1112,Modify Registry,PHOREAL is capable of manipulating the Registry.[1]
Enterprise,T1105,Ingress Tool Transfer,RemoteCMD copies a file over to the remote system before execution.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,RemoteCMD can execute commands remotely by creating a new schedule task on the remote system[1]
Enterprise,T1569,System Services: Service Execution,RemoteCMD can execute commands remotely by creating a new service on the remote system.[1]
Enterprise,T1105,Ingress Tool Transfer,RemoteCMD copies a file over to the remote system before execution.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,RemoteCMD can execute commands remotely by creating a new schedule task on the remote system[1]
Enterprise,T1569,System Services: Service Execution,RemoteCMD can execute commands remotely by creating a new service on the remote system.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,CrossRAT uses run keys for persistence on Windows
Enterprise,T1543,Create or Modify System Process: Launch Agent,CrossRAT creates a Launch Agent on macOS.[1]
Enterprise,T1083,File and Directory Discovery,CrossRAT can list all files on a system.
Enterprise,T1113,Screen Capture,CrossRAT is capable of taking screen captures.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SeaDuke uses HTTP and HTTPS for C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,SeaDuke compressed data with zlib prior to sending it over C2.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SeaDuke is capable of persisting via the Registry Run key or a .lnk file stored in the Startup directory.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,SeaDuke is capable of persisting via a .lnk file stored in the Startup directory.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SeaDuke uses a module to execute Mimikatz with PowerShell to perform Pass the Ticket.[4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SeaDuke is capable of executing commands.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,SeaDuke C2 traffic is base64-encoded.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SeaDuke C2 traffic has been encrypted with RC4 and AES.[2][3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"SeaDuke can securely delete files, including deleting itself from the victim.[4]"
Enterprise,T1105,Ingress Tool Transfer,SeaDuke is capable of uploading and downloading files.[3]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,SeaDuke has been packed with the UPX packer.[3]
Enterprise,T1078,Valid Accounts,Some SeaDuke samples have a module to extract email from Microsoft Exchange servers using compromised credentials.[4]
Enterprise,T1087,Account Discovery: Email Account,MailSniper can be used to obtain account names from Exchange and Office 365 using the Get-GlobalAddressList cmdlet.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SHARPSTATS has the ability to employ a custom PowerShell script.[1]
Enterprise,T1105,Ingress Tool Transfer,SHARPSTATS has the ability to upload and download files.[1]
Enterprise,T1027,Obfuscated Files or Information,SHARPSTATS has used base64 encoding and XOR to obfuscate PowerShell scripts.[1]
Enterprise,T1082,System Information Discovery,"SHARPSTATS has the ability to identify the IP address, machine name, and OS of the compromised host.[1]"
Enterprise,T1016,System Network Configuration Discovery,SHARPSTATS has the ability to identify the domain of the compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,SHARPSTATS has the ability to identify the username on the compromised host.[1]
Enterprise,T1124,System Time Discovery,SHARPSTATS has the ability to identify the current date and time on the compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Koadic has used HTTP for C2 communications.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Koadic has added persistence to the HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run Registry key.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Koadic has used PowerShell to establish persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Koadic can open an interactive command-shell to perform command line functions on victim machines. Koadic performs most of its operations using Windows Script Host (Jscript) and to run arbitrary shellcode.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Koadic performs most of its operations using Windows Script Host (VBScript) and runs arbitrary shellcode .[1]
Enterprise,T1005,Data from Local System,Koadic can download files off the target system to send back to the server.[1][3]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Koadic can use SSL and TLS for communications.[1]
Enterprise,T1083,File and Directory Discovery,Koadic can obtain a list of directories.[3]
Enterprise,T1564,Hide Artifacts: Hidden Window,Koadic has used the command Powershell.exe -ExecutionPolicy Bypass -WindowStyle Hidden to hide its window.[3]
Enterprise,T1105,Ingress Tool Transfer,Koadic can download additional files and tools.[1][3]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Koadic can gather hashed passwords by dumping SAM/SECURITY hive.[1]
Enterprise,T1003,OS Credential Dumping: NTDS,Koadic can gather hashed passwords by gathering domain controller hashes from NTDS.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Koadic can perform process injection by using a reflective DLL.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Koadic can enable remote desktop on the victim's machine.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Koadic has used scheduled tasks to add persistence.[3]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Koadic can use mshta to serve additional payloads and to help schedule tasks for persistence.[1][3]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Koadic can use Regsvr32 to execute additional payloads.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Koadic can use Rundll32 to execute additional payloads.[1]
Enterprise,T1082,System Information Discovery,"Koadic can obtain the OS version and build, computer name, and processor architecture from a compromised host.[3]"
Enterprise,T1016,System Network Configuration Discovery,Koadic can retrieve the contents of the IP routing table as well as information about the Windows domain.[1][3]
Enterprise,T1033,System Owner/User Discovery,Koadic can identify logged in users across the domain and views user sessions.[1][3]
Enterprise,T1569,System Services: Service Execution,Koadic can run a command on another machine using PsExec.[1]
Enterprise,T1047,Windows Management Instrumentation,Koadic can use WMI to execute commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Orz can execute shell commands.[1] Orz can execute commands with JavaScript.[1]
Enterprise,T1083,File and Directory Discovery,Orz can gather victim drive information.[1]
Enterprise,T1070,Indicator Removal on Host,Orz can overwrite Registry settings to reduce its visibility on the victim.[1]
Enterprise,T1105,Ingress Tool Transfer,Orz can download files onto the victim.[1]
Enterprise,T1112,Modify Registry,Orz can perform Registry operations.[1]
Enterprise,T1027,Obfuscated Files or Information,"Some Orz strings are base64 encoded, such as the embedded DLL known as MockDll.[1]"
Enterprise,T1057,Process Discovery,Orz can gather a process list from the victim.[1]
Enterprise,T1055,Process Injection: Process Hollowing,Some Orz versions have an embedded DLL known as MockDll that uses process hollowing and Regsvr32 to execute another payload.[1]
Enterprise,T1518,Software Discovery,Orz can gather the victim's Internet Explorer version.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Some Orz versions have an embedded DLL known as MockDll that uses Process Hollowing and regsvr32 to execute another payload.[1]
Enterprise,T1082,System Information Discovery,Orz can gather the victim OS version and whether it is 64 or 32 bit.[1]
Enterprise,T1016,System Network Configuration Discovery,Orz can gather victim proxy information.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Orz has used Technet and Pastebin web pages for command and control.[1]
Enterprise,T1560,Archive Collected Data,Exaramel for Windows automatically encrypts files before sending them to the C2 server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Exaramel for Windows has a command to launch a remote shell and executes commands on the victim’s machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Exaramel for Windows has a command to execute VBS scripts on the victim’s machine.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"The Exaramel for Windows dropper creates and starts a Windows service named wsmprovav with the description ""Windows Check AV.""[1]"
Enterprise,T1074,Data Staged: Local Data Staging,Exaramel for Windows specifies a path to store files scheduled for exfiltration.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"The Exaramel for Windows dropper creates and starts a Windows service named wsmprovav with the description ""Windows Check AV"" in an apparent attempt to masquerade as a legitimate service.[1]"
Enterprise,T1112,Modify Registry,Exaramel for Windows adds the configuration to the Registry in XML format.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,More_eggs uses HTTPS for C2.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,More_eggs has used cmd.exe for execution.[2][5]
Enterprise,T1132,Data Encoding: Standard Encoding,"More_eggs has used basE91 encoding, along with encryption, for C2 communication.[2]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,More_eggs will decode malware components that are then dropped to the system.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,More_eggs has used an RC4-based encryption method for its C2 communications.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,More_eggs can remove itself from a system.[1][2]
Enterprise,T1105,Ingress Tool Transfer,More_eggs can download and launch additional payloads.[1][2]
Enterprise,T1027,Obfuscated Files or Information,More_eggs's payload has been encrypted with a key that has the hostname and processor family information appended to the end.[5]
Enterprise,T1518,Software Discovery: Security Software Discovery,More_eggs can obtain information on installed anti-malware programs.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,More_eggs has used a signed binary shellcode loader and a signed Dynamic Link Library (DLL) to create a reverse shell.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,More_eggs has used regsvr32.exe to execute the malicious DLL.[2]
Enterprise,T1082,System Information Discovery,More_eggs has the capability to gather the OS version and computer name.[1][2]
Enterprise,T1016,System Network Configuration Discovery,More_eggs has the capability to gather the IP address from the victim's machine.[1]
Enterprise,T1016,Internet Connection Discovery,More_eggs has used HTTP GET requests to check internet connectivity.[2]
Enterprise,T1033,System Owner/User Discovery,More_eggs has the capability to gather the username from the victim's machine.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SHIPSHAPE achieves persistence by creating a shortcut in the Startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,SHIPSHAPE achieves persistence by creating a shortcut in the Startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution,BoxCaon established persistence by setting the HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load registry key to point to its executable.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"BoxCaon can execute arbitrary commands and utilize the ""ComSpec"" environment variable.[1]"
Enterprise,T1005,Data from Local System,BoxCaon can upload files from a compromised host.[1]
Enterprise,T1074,Data Staged: Local Data Staging,BoxCaon has created a working folder for collected files that it sends to the C2 server.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,BoxCaon uploads files and data from a compromised host over the existing C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,"BoxCaon has searched for files on the system, such as documents located in the desktop folder.[1]"
Enterprise,T1105,Ingress Tool Transfer,BoxCaon can download files.[1]
Enterprise,T1106,Native API,BoxCaon has used Windows API calls to obtain information about the compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information,"BoxCaon used the ""StackStrings"" obfuscation technique to hide malicious functionalities.[1]"
Enterprise,T1016,System Network Configuration Discovery,BoxCaon can collect the victim's MAC address by using the GetAdaptersInfo API.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,BoxCaon has used DropBox for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,StoneDrill has several VBS scripts used throughout the malware's lifecycle.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,StoneDrill has been observed deleting the temporary files once they fulfill their task.[2]
Enterprise,T1105,Ingress Tool Transfer,StoneDrill has downloaded and dropped temporary files containing scripts; it additionally has a function to upload files from the victims machine.[2]
Enterprise,T1027,Obfuscated Files or Information,StoneDrill has obfuscated its module with an alphabet-based table or XOR encryption.[2]
Enterprise,T1055,Process Injection,StoneDrill has relied on injecting its payload directly into the process memory of the victim's preferred browser.[2]
Enterprise,T1012,Query Registry,StoneDrill has looked in the registry to find the default browser path.[2]
Enterprise,T1113,Screen Capture,StoneDrill can take screenshots.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,StoneDrill can check for antivirus and antimalware programs.[2]
Enterprise,T1082,System Information Discovery,"StoneDrill has the capability to discover the system OS, Windows version, architecture and environment.[2]"
Enterprise,T1124,System Time Discovery,StoneDrill can obtain the current date and time of the victim machine.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion,StoneDrill has used several anti-emulation techniques to prevent automated analysis by emulators or sandboxes.[2]
Enterprise,T1047,Windows Management Instrumentation,StoneDrill has used the WMI command-line (WMIC) utility to run tasks.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,NOKKI has used HTTP for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,NOKKI has used FTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,NOKKI has established persistence by writing the payload to the Registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run.[1]
Enterprise,T1074,Data Staged: Local Data Staging,NOKKI can collect data from the victim and stage it in LOCALAPPDATA%\MicroSoft Updatea\uplog.tmp.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"NOKKI uses a unique, custom de-obfuscation technique.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,NOKKI can delete files to cover tracks.[1]
Enterprise,T1105,Ingress Tool Transfer,NOKKI has downloaded a remote module for execution.[1]
Enterprise,T1056,Input Capture: Credential API Hooking,NOKKI uses the Windows call SetWindowsHookEx and begins injecting it into every GUI process running on the victim's machine.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,NOKKI is written to %LOCALAPPDATA%\MicroSoft Updatea\svServiceUpdate.exe prior being executed in a new process in an apparent attempt to masquerade as a legitimate folder and file.[1]
Enterprise,T1027,Obfuscated Files or Information,NOKKI uses Base64 encoding for strings.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,NOKKI has used rundll32 for execution.[1]
Enterprise,T1082,System Information Discovery,NOKKI can gather information on drives and the operating system on the victim’s machine.[1]
Enterprise,T1016,System Network Configuration Discovery,NOKKI can gather information on the victim IP address.[1]
Enterprise,T1033,System Owner/User Discovery,NOKKI can collect the username from the victim’s machine.[1]
Enterprise,T1124,System Time Discovery,NOKKI can collect the current timestamp of the victim's machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,OnionDuke uses HTTP and HTTPS for C2.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,OnionDuke can use a custom decryption algorithm to decrypt strings.[2]
Enterprise,T1003,OS Credential Dumping,OnionDuke steals credentials from its victims.[1]
Enterprise,T1102,Web Service: One-Way Communication,OnionDuke uses Twitter as a backup C2.[1]
Enterprise,T1569,System Services: Service Execution,"Winexe installs a service on the remote system, executes the command, then uninstalls the service.[3]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HOPLIGHT can launch cmd.exe to execute commands on the system.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,HOPLIGHT has utilized Zlib compression to obfuscate the communications payload. [1]
Enterprise,T1041,Exfiltration Over C2 Channel,HOPLIGHT has used its C2 channel to exfiltrate data.[1]
Enterprise,T1083,File and Directory Discovery,HOPLIGHT has been observed enumerating system drives and partitions.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,HOPLIGHT has modified the firewall using netsh.[1]
Enterprise,T1105,Ingress Tool Transfer,HOPLIGHT has the ability to connect to a remote host in order to upload and download files.[1]
Enterprise,T1112,Modify Registry,HOPLIGHT has modified Managed Object Format (MOF) files within the Registry to run specific commands and create persistence on the system.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,HOPLIGHT has the capability to harvest credentials and passwords from the SAM database.[1]
Enterprise,T1055,Process Injection,HOPLIGHT has injected into running processes.[1]
Enterprise,T1090,Proxy,HOPLIGHT has multiple proxy options that mask traffic between the malware and the remote operators.[1]
Enterprise,T1012,Query Registry,"A variant of HOPLIGHT hooks lsass.exe, and lsass.exe then checks the Registry for the data value 'rdpproto' under the key SYSTEM\CurrentControlSet\Control\Lsa Name.[1]"
Enterprise,T1082,System Information Discovery,"HOPLIGHT has been observed collecting victim machine information like OS version, drivers, volume information and more.[1]"
Enterprise,T1569,System Services: Service Execution,HOPLIGHT has used svchost.exe to execute a malicious DLL .[1]
Enterprise,T1124,System Time Discovery,HOPLIGHT has been observed collecting system time from victim machines.[1]
Enterprise,T1047,Windows Management Instrumentation,HOPLIGHT has used WMI to recompile the Managed Object Format (MOF) files in the WMI repository.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BACKSPACE uses HTTP as a transport to communicate with its command server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BACKSPACE achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,BACKSPACE achieves persistence by creating a shortcut to itself in the CSIDL_STARTUP directory.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Adversaries can direct BACKSPACE to execute from the command line on infected hosts, or have BACKSPACE create a reverse shell.[1]"
Enterprise,T1132,Data Encoding: Non-Standard Encoding,Newer variants of BACKSPACE will encode C2 communications with a custom system.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Adversaries can direct BACKSPACE to upload files to the C2 Server.[1]
Enterprise,T1083,File and Directory Discovery,BACKSPACE allows adversaries to search for files.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,"The ""ZR"" variant of BACKSPACE will check to see if known host-based firewalls are installed on the infected systems. BACKSPACE will attempt to establish a C2 channel, then will examine open windows to identify a pop-up from the firewall software and will simulate a mouse-click to allow the connection to proceed.[1]"
Enterprise,T1112,Modify Registry,"BACKSPACE is capable of deleting Registry keys, sub-keys, and values on a victim system.[1]"
Enterprise,T1057,Process Discovery,BACKSPACE may collect information about running processes.[1]
Enterprise,T1090,Proxy: Internal Proxy,"The ""ZJ"" variant of BACKSPACE allows ""ZJ link"" infections with Internet access to relay traffic from ""ZJ listen"" to a command server.[1]"
Enterprise,T1012,Query Registry,BACKSPACE is capable of enumerating and making modifications to an infected system's Registry.[1]
Enterprise,T1082,System Information Discovery,"During its initial execution, BACKSPACE extracts operating system information from the infected host.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Python,IronNetInjector can use IronPython scripts to load payloads with the help of a .NET injector.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,IronNetInjector has the ability to decrypt embedded .NET and PE payloads.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,IronNetInjector has been disguised as a legitimate service using the name PythonUpdateSrvc.[1]
Enterprise,T1027,Obfuscated Files or Information,"IronNetInjector can obfuscate variable names, encrypt strings, as well as base64 encode and Rijndael encrypt payloads.[1]"
Enterprise,T1057,Process Discovery,IronNetInjector can identify processes via C# methods such as GetProcessesByName and running Tasklist with the Python os.popen function.[1]
Enterprise,T1055,Process Injection,IronNetInjector can use an IronPython scripts to load a .NET injector to inject a payload into its own or a remote process.[1]
Enterprise,T1055,Dynamic-link Library Injection,"IronNetInjector has the ability to inject a DLL into running processes, including the IronNetInjector DLL into explorer.exe.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,IronNetInjector has used a task XML file named mssch.xml to run an IronPython script when a user logs in or when specific system events are created.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GravityRAT uses HTTP for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,GravityRAT executes commands remotely on the infected host.[1]
Enterprise,T1005,Data from Local System,"GravityRAT steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.[1]"
Enterprise,T1083,File and Directory Discovery,"GravityRAT collects the volumes mapped on the system, and also steals files with the following extensions: .docx, .doc, .pptx, .ppt, .xlsx, .xls, .rtf, and .pdf.[1]"
Enterprise,T1027,Obfuscated Files or Information,"GravityRAT supports file encryption (AES with the key ""lolomycin2017"").[1]"
Enterprise,T1027,Indicator Removal from Tools,"The author of GravityRAT submitted samples to VirusTotal for testing, showing that the author modified the code to try to hide the DDE object in a different part of the document.[1]"
Enterprise,T1057,Process Discovery,GravityRAT lists the running processes on the system.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,GravityRAT creates a scheduled task to ensure it is re-executed everyday.[1]
Enterprise,T1082,System Information Discovery,"GravityRAT collects the MAC address, computer name, and CPU information.[1]"
Enterprise,T1016,System Network Configuration Discovery,"GravityRAT collects the victim IP address, MAC address, as well as the victim account domain name.[1]"
Enterprise,T1049,System Network Connections Discovery,GravityRAT uses the netstat command to find open ports on the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,"GravityRAT collects the victim username along with other account information (account type, description, full name, SID and status).[1]"
Enterprise,T1124,System Time Discovery,GravityRAT can obtain the date and time of a system.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"GravityRAT uses WMI to check the BIOS and manufacturer information for strings like ""VMWare"", ""Virtual"", and ""XEN"" and another WMI request to get the current temperature of the hardware to determine if it's a virtual machine environment. [1]"
Enterprise,T1047,Windows Management Instrumentation,"GravityRAT collects various information via WMI requests, including CPU information in the Win32_Processor entry (Processor ID, Name, Manufacturer and the clock speed).[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HermeticWiper can use cmd.exe /Q/c move CSIDL_SYSTEM_DRIVE\temp\sys.tmp1 CSIDL_WINDOWS\policydefinitions\postgresql.exe 1> \\127.0.0.1\ADMIN$\_1636727589.6007507 2>&1 to deploy on an infected system.[8]
Enterprise,T1543,Create or Modify System Process: Windows Service,HermeticWiper can load drivers by creating a new service using the CreateServiceW API.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,HermeticWiper can decompress and copy driver files using LZCopy.[3]
Enterprise,T1083,File and Directory Discovery,"HermeticWiper can enumerate common folders such as My Documents, Desktop, and AppData.[1][5]"
Enterprise,T1562,Impair Defenses: Indicator Blocking,HermeticWiper has the ability to set the HKLM:\SYSTEM\\CurrentControlSet\\Control\\CrashControl\CrashDumpEnabled Registry key to 0 in order to disable crash dumps.[1][3][5]
Enterprise,T1070,Indicator Removal on Host,HermeticWiper can disable pop-up information about folders and desktop items and delete Registry keys to hide malicious services.[3][8]
Enterprise,T1070,Clear Windows Event Logs,HermeticWiper can overwrite the C:\Windows\System32\winevt\Logs file on a targeted system.[8]
Enterprise,T1070,File Deletion,HermeticWiper has the ability to overwrite its own file with random bites.[3][8]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,HermeticWiper has used the name postgressql.exe to mask a malicious payload.[8]
Enterprise,T1112,Modify Registry,"HermeticWiper has the ability to modify Registry keys to disable crash dumps, colors for compressed files, and pop-up information about folders and desktop items.[1][3][5]"
Enterprise,T1106,Native API,"HermeticWiper can call multiple Windows API functions used for privilege escalation, service execution, and to overwrite random bites of data.[1][3][8][5]"
Enterprise,T1027,Obfuscated Files or Information,HermeticWiper can compress 32-bit and 64-bit driver files with the Lempel-Ziv algorithm.[2][3][5]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,HermeticWiper has the ability to use scheduled tasks for execution.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,The HermeticWiper executable has been signed with a legitimate certificate issued to Hermetica Digital Ltd.[2][3][4][5]
Enterprise,T1082,System Information Discovery,"HermeticWiper can determine the OS version, bitness, and enumerate physical drives on a targeted host.[1][3][8][5]"
Enterprise,T1569,System Services: Service Execution,HermeticWiper can create system services to aid in executing the payload.[1][3][5]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,HermeticWiper has the ability to receive a command parameter to sleep prior to carrying out destructive actions on a targeted host.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,China Chopper's server component executes code sent via HTTP POST commands.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,China Chopper's server component is capable of opening a command terminal.[5][1][6]
Enterprise,T1005,Data from Local System,China Chopper's server component can upload local files.[3][1][6]
Enterprise,T1083,File and Directory Discovery,China Chopper's server component can list directory contents.[3]
Enterprise,T1070,Indicator Removal on Host: Timestomp,China Chopper's server component can change the timestamp of files.[3][1][6]
Enterprise,T1105,Ingress Tool Transfer,China Chopper's server component can download remote files.[3][1][6]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,China Chopper's client component is packed with UPX.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ComRAT has used HTTP requests for command and control.[2][3][4]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,ComRAT can use email attachments for command and control.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,ComRAT has used PowerShell to load itself every time a user logs in to the system. ComRAT can execute PowerShell scripts loaded into memory or from the file system.[3][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ComRAT has used cmd.exe to execute commands.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ComRAT has used unique per machine passwords to decrypt the orchestrator payload and a hardcoded XOR key to decrypt its communications module. ComRAT has also used a unique password to decrypt the file used for its hidden file system.[3][4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,ComRAT can use SSL/TLS encryption for its HTTP-based C2 channel. ComRAT has used public key cryptography with RSA and AES encrypted email attachments for its Gmail C2 channel.[3][4]
Enterprise,T1564,Hide Artifacts: Hidden File System,ComRAT has used a portable FAT16 partition image placed in %TEMP% as a hidden file system.[3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,ComRAT has used a task name associated with Windows SQM Consolidator.[3]
Enterprise,T1112,Modify Registry,ComRAT has encrypted and stored its orchestrator code in the Registry as well as a PowerShell script into the WsqmCons Registry key.[3][4]
Enterprise,T1106,Native API,ComRAT can load a PE file from memory or the file system and execute it with CreateProcessW.[3]
Enterprise,T1027,Obfuscated Files or Information,ComRAT has used encryption and base64 to obfuscate its orchestrator code in the Registry. ComRAT has also embedded an XOR encrypted communications module inside the orchestrator module. ComRAT has encrypted its virtual file system using AES-256 in XTS mode and has encoded PowerShell scripts.[3][4]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,ComRAT has injected its orchestrator DLL into explorer.exe. ComRAT has also injected its communications module into the victim's default browser to make C2 connections appear less suspicious as all network connections will be initiated by the browser process.[3][4]
Enterprise,T1012,Query Registry,ComRAT can check the default browser by querying HKCR\http\shell\open\command.[3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,ComRAT has used a scheduled task to launch its PowerShell loader.[3][4]
Enterprise,T1518,Software Discovery,ComRAT can check the victim's default browser to determine which process to inject its communications module into.[3]
Enterprise,T1124,System Time Discovery,"ComRAT has checked the victim system's date and time to perform tasks during business hours (9 to 5, Monday to Friday).[4]"
Enterprise,T1102,Web Service: Bidirectional Communication,ComRAT has the ability to use the Gmail web UI to receive commands and exfiltrate information.[3][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Caterpillar WebShell can run commands on the compromised asset with CMD functions.[1]
Enterprise,T1005,Data from Local System,Caterpillar WebShell has a module to collect information from the local database.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Caterpillar WebShell can upload files over the C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,Caterpillar WebShell can search for files in directories.[1]
Enterprise,T1105,Ingress Tool Transfer,Caterpillar WebShell has a module to download and upload files to the system.[1]
Enterprise,T1112,Modify Registry,Caterpillar WebShell has a command to modify a Registry key.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Caterpillar WebShell can obtain a list of local groups of users from a system.[1]
Enterprise,T1057,Process Discovery,Caterpillar WebShell can gather a list of processes running on the machine.[1]
Enterprise,T1082,System Information Discovery,"Caterpillar WebShell has a module to gather information from the compromrised asset, including the computer version, computer name, IIS version, and more.[1]"
Enterprise,T1016,System Network Configuration Discovery,Caterpillar WebShell can gather the IP address from the victim's machine using the IP config command.[1]
Enterprise,T1033,System Owner/User Discovery,Caterpillar WebShell can obtain a list of user accounts from a victim's machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Ragnar Locker has used cmd.exe and batch scripts to execute commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Ragnar Locker has used sc.exe to create a new service for the VirtualBox driver.[1]
Enterprise,T1564,Hide Artifacts: Run Virtual Instance,"Ragnar Locker has used VirtualBox and a stripped Windows XP virtual machine to run itself. The use of a shared folder specified in the configuration enables Ragnar Locker to encrypt files on the host operating system, including files on any mapped drives.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Ragnar Locker has attempted to terminate/stop processes and services associated with endpoint security products.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Ragnar Locker has been delivered as an unsigned MSI package that was executed with msiexec.exe.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Ragnar Locker has used regsvr32.exe to execute components of VirtualBox.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Ragnar Locker has used rundll32.exe to execute components of VirtualBox.[1]
Enterprise,T1569,System Services: Service Execution,Ragnar Locker has used sc.exe to execute a service that it creates.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Octopus has used HTTP GET and POST requests for C2 communications.[1][3]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Octopus has compressed data before exfiltrating it using a tool called Abbrevia.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Octopus achieved persistence by placing a malicious executable in the startup directory and has added the HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run key to the Registry.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Octopus has encoded C2 communications in Base64.[1]
Enterprise,T1005,Data from Local System,Octopus can exfiltrate files from the system using a documents collector tool.[3]
Enterprise,T1074,Data Staged: Local Data Staging,Octopus has stored collected information in the Application Data directory on a compromised host.[1][3]
Enterprise,T1041,Exfiltration Over C2 Channel,Octopus has uploaded stolen files and data from a victim's machine over its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,Octopus can collect information on the Windows directory and searches for compressed RAR files on the host.[1][2][3]
Enterprise,T1105,Ingress Tool Transfer,Octopus can download additional files and tools onto the victim’s machine.[1][2][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Octopus has been disguised as legitimate programs, such as Java and Telegram Messenger.[1][3]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Octopus has been delivered via spearsphishing emails.[3]
Enterprise,T1113,Screen Capture,Octopus can capture screenshots of the victims’ machine.[1][2][3]
Enterprise,T1082,System Information Discovery,"Octopus can collect system drive information, the computer name, the size of the disk, OS version, and OS architecture information.[1]"
Enterprise,T1016,System Network Configuration Discovery,Octopus can collect the host IP address from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,Octopus can collect the username from the victim’s machine.[1]
Enterprise,T1204,User Execution: Malicious File,Octopus has relied upon users clicking on a malicious attachment delivered through spearphishing.[3]
Enterprise,T1047,Windows Management Instrumentation,Octopus has used wmic.exe for local discovery information.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PowerPunch has the ability to execute through PowerShell.[1]
Enterprise,T1105,Ingress Tool Transfer,PowerPunch can download payloads from adversary infrastructure.[1]
Enterprise,T1027,Obfuscated Files or Information,PowerPunch can use Base64-encoded scripts.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BlackMould can send commands to C2 in the body of HTTP POST requests.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BlackMould can run cmd.exe with parameters.[1]
Enterprise,T1005,Data from Local System,BlackMould can copy files on a compromised host.[1]
Enterprise,T1083,File and Directory Discovery,BlackMould has the ability to find files on the targeted system.[1]
Enterprise,T1105,Ingress Tool Transfer,BlackMould has the ability to download files to the victim's machine.[1]
Enterprise,T1082,System Information Discovery,BlackMould can enumerate local drives on a compromised host.[1]
Enterprise,T1071,Application Layer Protocol: DNS,TEXTMATE uses DNS TXT records for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TEXTMATE executes cmd.exe to provide a reverse shell to adversaries.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Some InnaputRAT variants establish persistence by modifying the Registry key HKU\\Software\Microsoft\Windows\CurrentVersion\Run:%appdata%\NeutralApp\NeutralApp.exe.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,InnaputRAT launches a shell to execute commands on the victim’s machine.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Some InnaputRAT variants create a new Windows service to establish persistence.[1]
Enterprise,T1083,File and Directory Discovery,InnaputRAT enumerates directories and obtains file attributes on a system.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,InnaputRAT has a command to delete files.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,InnaputRAT variants have attempted to appear legitimate by adding a new service named OfficeUpdateService.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,InnaputRAT variants have attempted to appear legitimate by using the file names SafeApp.exe and NeutralApp.exe.[1]
Enterprise,T1106,Native API,InnaputRAT uses the API call ShellExecuteW for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,InnaputRAT uses an 8-byte XOR key to obfuscate API names and other strings contained in the payload.[1]
Enterprise,T1082,System Information Discovery,InnaputRAT gathers volume drive information and system information.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Hi-Zor communicates with its C2 server over HTTPS.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Hi-Zor creates a Registry Run key to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Hi-Zor has the ability to create a reverse shell.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Hi-Zor encrypts C2 traffic with a double XOR using two distinct single-byte keys.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Hi-Zor encrypts C2 traffic with TLS.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Hi-Zor deletes its RAT installer file as it executes its DLL payload file.[2]
Enterprise,T1105,Ingress Tool Transfer,Hi-Zor has the ability to upload and download files from its C2 server.[2]
Enterprise,T1027,Obfuscated Files or Information,Hi-Zor uses various XOR techniques to obfuscate its components.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Hi-Zor executes using regsvr32.exe called from the Registry Run Keys / Startup Folder persistence mechanism.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Daserf uses HTTP for C2.[2]
Enterprise,T1560,Archive Collected Data,Daserf hides collected data in password-protected .rar archives.[3]
Enterprise,T1560,Archive via Utility,Daserf hides collected data in password-protected .rar archives.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Daserf can execute shell commands.[1][2]
Enterprise,T1132,Data Encoding: Standard Encoding,Daserf uses custom base64 encoding to obfuscate HTTP traffic.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Daserf uses RC4 encryption to obfuscate HTTP traffic.[2]
Enterprise,T1105,Ingress Tool Transfer,Daserf can download remote files.[1][2]
Enterprise,T1056,Input Capture: Keylogging,Daserf can log keystrokes.[1][2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Daserf uses file and folder names related to legitimate programs in order to blend in, such as HP, Intel, Adobe, and perflogs.[3]"
Enterprise,T1027,Obfuscated Files or Information,Daserf uses encrypted Windows APIs and also encrypts data using the alternative base64+RC4 or the Caesar cipher.[1]
Enterprise,T1027,Software Packing,A version of Daserf uses the MPRESS packer.[1]
Enterprise,T1027,Indicator Removal from Tools,Analysis of Daserf has shown that it regularly undergoes technical improvements to evade anti-virus detection.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Daserf leverages Mimikatz and Windows Credential Editor to steal credentials.[3]
Enterprise,T1113,Screen Capture,Daserf can take screenshots.[1][2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Some Daserf samples were signed with a stolen digital certificate.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Flagpro can communicate with its C2 using HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Flagpro has dropped an executable file to the startup directory.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Flagpro can use cmd.exe to execute commands received from C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Flagpro can execute malicious VBA macros embedded in .xlsm files.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Flagpro has encoded bidirectional data communications between a target system and C2 server using Base64.[1]
Enterprise,T1005,Data from Local System,"Flagpro can collect data from a compromised host, including Windows authentication information.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Flagpro has exfiltrated data to the C2 server.[1]
Enterprise,T1070,Indicator Removal on Host,Flagpro can close specific Windows Security and Internet Explorer dialog boxes to mask external connections.[1]
Enterprise,T1105,Ingress Tool Transfer,Flagpro can download additional malware from the C2 server.[1]
Enterprise,T1036,Masquerading,Flagpro can download malicious files with a .tmp extension and append them with .exe prior to execution.[1]
Enterprise,T1106,Native API,Flagpro can use Native API to enable obfuscation including GetLastError and GetTickCount.[1]
Enterprise,T1027,Obfuscated Files or Information,Flagpro has been delivered within ZIP or RAR password-protected archived files.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Flagpro has been used to execute the net localgroup administrators command on a targeted system.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Flagpro has been distributed via spearphishing as an email attachment.[1]
Enterprise,T1057,Process Discovery,Flagpro has been used to run the tasklist command on a compromised system.[1]
Enterprise,T1018,Remote System Discovery,Flagpro has been used to execute net view on a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,Flagpro has been used to execute the ipconfig /all command on a victim system.[1]
Enterprise,T1049,System Network Connections Discovery,Flagpro has been used to execute netstat -ano on a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Flagpro has been used to run the whoami command on the system.[1]
Enterprise,T1204,User Execution: Malicious File,Flagpro has relied on users clicking a malicious attachment delivered through spearphishing.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Flagpro can communicate with its C2 using HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Flagpro has dropped an executable file to the startup directory.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Flagpro can use cmd.exe to execute commands received from C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Flagpro can execute malicious VBA macros embedded in .xlsm files.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Flagpro has encoded bidirectional data communications between a target system and C2 server using Base64.[1]
Enterprise,T1005,Data from Local System,"Flagpro can collect data from a compromised host, including Windows authentication information.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Flagpro has exfiltrated data to the C2 server.[1]
Enterprise,T1070,Indicator Removal on Host,Flagpro can close specific Windows Security and Internet Explorer dialog boxes to mask external connections.[1]
Enterprise,T1105,Ingress Tool Transfer,Flagpro can download additional malware from the C2 server.[1]
Enterprise,T1036,Masquerading,Flagpro can download malicious files with a .tmp extension and append them with .exe prior to execution.[1]
Enterprise,T1106,Native API,Flagpro can use Native API to enable obfuscation including GetLastError and GetTickCount.[1]
Enterprise,T1027,Obfuscated Files or Information,Flagpro has been delivered within ZIP or RAR password-protected archived files.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Flagpro has been used to execute the net localgroup administrators command on a targeted system.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Flagpro has been distributed via spearphishing as an email attachment.[1]
Enterprise,T1057,Process Discovery,Flagpro has been used to run the tasklist command on a compromised system.[1]
Enterprise,T1018,Remote System Discovery,Flagpro has been used to execute net view on a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,Flagpro has been used to execute the ipconfig /all command on a victim system.[1]
Enterprise,T1049,System Network Connections Discovery,Flagpro has been used to execute netstat -ano on a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Flagpro has been used to run the whoami command on the system.[1]
Enterprise,T1204,User Execution: Malicious File,Flagpro has relied on users clicking a malicious attachment delivered through spearphishing.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Flagpro can communicate with its C2 using HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Flagpro has dropped an executable file to the startup directory.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Flagpro can use cmd.exe to execute commands received from C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Flagpro can execute malicious VBA macros embedded in .xlsm files.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Flagpro has encoded bidirectional data communications between a target system and C2 server using Base64.[1]
Enterprise,T1005,Data from Local System,"Flagpro can collect data from a compromised host, including Windows authentication information.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Flagpro has exfiltrated data to the C2 server.[1]
Enterprise,T1070,Indicator Removal on Host,Flagpro can close specific Windows Security and Internet Explorer dialog boxes to mask external connections.[1]
Enterprise,T1105,Ingress Tool Transfer,Flagpro can download additional malware from the C2 server.[1]
Enterprise,T1036,Masquerading,Flagpro can download malicious files with a .tmp extension and append them with .exe prior to execution.[1]
Enterprise,T1106,Native API,Flagpro can use Native API to enable obfuscation including GetLastError and GetTickCount.[1]
Enterprise,T1027,Obfuscated Files or Information,Flagpro has been delivered within ZIP or RAR password-protected archived files.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Flagpro has been used to execute the net localgroup administrators command on a targeted system.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Flagpro has been distributed via spearphishing as an email attachment.[1]
Enterprise,T1057,Process Discovery,Flagpro has been used to run the tasklist command on a compromised system.[1]
Enterprise,T1018,Remote System Discovery,Flagpro has been used to execute net view on a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,Flagpro has been used to execute the ipconfig /all command on a victim system.[1]
Enterprise,T1049,System Network Connections Discovery,Flagpro has been used to execute netstat -ano on a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Flagpro has been used to run the whoami command on the system.[1]
Enterprise,T1204,User Execution: Malicious File,Flagpro has relied on users clicking a malicious attachment delivered through spearphishing.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,KOCTOPUS can set the AutoRun Registry key with a PowerShell command.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,KOCTOPUS has used PowerShell commands to download additional files.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KOCTOPUS has used cmd.exe and batch files for execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,KOCTOPUS has used VBScript to call wscript to execute a PowerShell command.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,KOCTOPUS has deobfuscated itself before executing its commands.[1]
Enterprise,T1564,Hide Artifacts: Hidden Window,KOCTOPUS has used -WindowsStyle Hidden to hide the command window.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,KOCTOPUS will attempt to delete or disable all Registry keys and scheduled tasks related to Microsoft Security Defender and Security Essentials.[1]
Enterprise,T1070,Indicator Removal on Host,KOCTOPUS can delete created registry keys as part of its cleanup procedure.[1]
Enterprise,T1105,Ingress Tool Transfer,KOCTOPUS has executed a PowerShell command to download a file to the system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,KOCTOPUS has been disguised as legitimate software programs associated with the travel and airline industries.[1]
Enterprise,T1112,Modify Registry,KOCTOPUS has added and deleted keys from the Registry.[1]
Enterprise,T1106,Native API,KOCTOPUS can use the LoadResource and CreateProcessW APIs for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,KOCTOPUS has obfuscated scripts with the BatchEncryption tool.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,KOCTOPUS has been distributed via spearphishing emails with malicious attachments.[1]
Enterprise,T1566,Phishing: Spearphishing Link,KOCTOPUS has been distributed as a malicious link within an email.[1]
Enterprise,T1090,Proxy,KOCTOPUS has deployed a modified version of Invoke-Ngrok to expose open local ports to the Internet.[1]
Enterprise,T1082,System Information Discovery,KOCTOPUS has checked the OS version using wmic.exe and the find command.[1]
Enterprise,T1204,User Execution: Malicious Link,KOCTOPUS has relied on victims clicking on a malicious link delivered via email.[1]
Enterprise,T1204,User Execution: Malicious File,KOCTOPUS has relied on victims clicking a malicious document for execution.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"UPPERCUT has used HTTP for C2, including sending error codes in Cookie headers.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,UPPERCUT uses cmd.exe to execute commands on the victim’s machine.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"Some versions of UPPERCUT have used the hard-coded string ""this is the encrypt key"" for Blowfish encryption when communicating with a C2. Later versions have hard-coded keys uniquely for each C2 address.[1]"
Enterprise,T1083,File and Directory Discovery,UPPERCUT has the capability to gather the victim's current directory.[1]
Enterprise,T1105,Ingress Tool Transfer,UPPERCUT can download and upload files to and from the victim’s machine.[1]
Enterprise,T1113,Screen Capture,UPPERCUT can capture desktop screenshots in the PNG format and send them to the C2 server.[1]
Enterprise,T1082,System Information Discovery,UPPERCUT has the capability to gather the system’s hostname and OS version.[1]
Enterprise,T1016,System Network Configuration Discovery,UPPERCUT has the capability to gather the victim's proxy information.[1]
Enterprise,T1033,System Owner/User Discovery,UPPERCUT has the capability to collect the current logged on user’s username from a machine.[1]
Enterprise,T1124,System Time Discovery,UPPERCUT has the capability to obtain the time zone information and current timestamp of the victim’s machine.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SysUpdate can use a Registry Run key to establish persistence.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,SysUpdate can create a service to establish persistence.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SysUpdate can deobfuscate packed binaries in memory.[1]
Enterprise,T1083,File and Directory Discovery,SysUpdate can search files on a compromised host.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,SysUpdate has the ability to set file attributes to hidden.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,SysUpdate can load DLLs through vulnerable legitimate executables.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SysUpdate can delete its configuration file from the targeted system.[1]
Enterprise,T1105,Ingress Tool Transfer,SysUpdate has the ability to download files to a compromised host.[1]
Enterprise,T1112,Modify Registry,SysUpdate can write its configuration file to Software\Classes\scConfig in either HKEY_LOCAL_MACHINE or HKEY_CURRENT_USER.[1]
Enterprise,T1027,Obfuscated Files or Information,SysUpdate can encrypt and encode its configuration file.[1]
Enterprise,T1027,Software Packing,SysUpdate can use packed binaries.[1]
Enterprise,T1113,Screen Capture,SysUpdate has the ability to capture screenshots.[1]
Enterprise,T1082,System Information Discovery,SysUpdate can determine whether a system has a 32 bit or 64 bit architecture.[1]
Enterprise,T1569,System Services: Service Execution,SysUpdate can manage services and processes.[1]
Enterprise,T1047,Windows Management Instrumentation,SysUpdate can use WMI for execution on a compromised host.[1]
Enterprise,T1005,Data from Local System,"yty collects files with the following extensions: .ppt, .pptx, .pdf, .doc, .docx, .xls, .xlsx, .docm, .rtf, .inp, .xlsm, .csv, .odt, .pps, .vcf and sends them back to the C2 server.[1]"
Enterprise,T1083,File and Directory Discovery,yty gathers information on victim’s drives and has a plugin for document listing.[1]
Enterprise,T1056,Input Capture: Keylogging,yty uses a keylogger plugin to gather keystrokes.[1]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,"yty contains junk code in its binary, likely to confuse malware analysts.[1]"
Enterprise,T1027,Obfuscated Files or Information: Software Packing,yty packs a plugin with UPX.[1]
Enterprise,T1057,Process Discovery,yty gets an output of running processes using the tasklist command.[1]
Enterprise,T1018,Remote System Discovery,yty uses the net view command for discovery.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"yty establishes persistence by creating a scheduled task with the command SchTasks /Create /SC DAILY /TN BigData /TR "" + path_file + ""/ST 09:30"".[1]"
Enterprise,T1113,Screen Capture,yty collects screenshots of the victim machine.[1]
Enterprise,T1082,System Information Discovery,"yty gathers the computer name, the serial number of the main disk volume, CPU information, Microsoft Windows version, and runs the command systeminfo.[1]"
Enterprise,T1016,System Network Configuration Discovery,yty runs ipconfig /all and collects the domain name.[1]
Enterprise,T1033,System Owner/User Discovery,yty collects the victim’s username.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"yty has some basic anti-sandbox detection that tries to detect Virtual PC, Sandboxie, and VMware. [1]"
Enterprise,T1102,Web Service: Bidirectional Communication,yty communicates to the C2 server by retrieving a Google Doc.[1]
Enterprise,T1564,Hide Artifacts: Hidden File System,BOOTRASH has used unallocated disk space between partitions for a hidden file system that stores components of the Nemesis bootkit.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Rifdoor has created a new registry entry at HKEY_CURRENT_USERS\Software\Microsoft\Windows\CurrentVersion\Run\Graphics with a value of C:\ProgramData\Initech\Initech.exe /run.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Rifdoor has encrypted command and control (C2) communications with a stream cipher.[1]
Enterprise,T1027,Obfuscated Files or Information,Rifdoor has encrypted strings with a single byte XOR algorithm.[1]
Enterprise,T1027,Binary Padding,"Rifdoor has added four additional bytes of data upon launching, then saved the changed version as C:\ProgramData\Initech\Initech.exe.[1]"
Enterprise,T1566,Phishing: Spearphishing Attachment,Rifdoor has been distributed in e-mails with malicious Excel or Word documents.[1]
Enterprise,T1082,System Information Discovery,Rifdoor has the ability to identify the Windows version on the compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,Rifdoor has the ability to identify the IP address of the compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Rifdoor has the ability to identify the username on the compromised host.[1]
Enterprise,T1204,User Execution: Malicious File,Rifdoor has been executed from malicious Excel or Word documents containing macros.[1]
Enterprise,T1087,Account Discovery: Local Account,P.A.S. Webshell can display the /etc/passwd file on a compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,P.A.S. Webshell can issue commands via HTTP POST.[1]
Enterprise,T1059,Command and Scripting Interpreter,P.A.S. Webshell has the ability to create reverse shells with Perl scripts.[1]
Enterprise,T1005,Data from Local System,P.A.S. Webshell has the ability to copy files on a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,P.A.S. Webshell can use a decryption mechanism to process a user supplied password and allow execution.[1]
Enterprise,T1083,File and Directory Discovery,"P.A.S. Webshell has the ability to list files and file characteristics including extension, size, ownership, and permissions.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,P.A.S. Webshell can delete scripts from a subdirectory of /tmp after they are run.[1]
Enterprise,T1105,Ingress Tool Transfer,P.A.S. Webshell can upload and download files to and from compromised hosts.[1]
Enterprise,T1027,Obfuscated Files or Information,P.A.S. Webshell can use encryption and base64 encoding to hide strings and to enforce access control once deployed.[1]
Enterprise,T1518,Software Discovery,P.A.S. Webshell can list PHP server configuration details.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,CALENDAR has a command to run cmd.exe to execute commands.[2]
Enterprise,T1102,Web Service: Bidirectional Communication,The CALENDAR malware communicates through the use of events in Google Calendar.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Anchor has used HTTP and HTTPS in C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Variants of Anchor can use DNS tunneling to communicate with C2.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Anchor has used cmd.exe to run its self deletion routine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Anchor can execute payloads via shell scripting.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Anchor can establish persistence by creating a service.[1]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Anchor has used NTFS to hide files.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Anchor can self delete its dropper after the malware is successfully deployed.[1]
Enterprise,T1105,Ingress Tool Transfer,Anchor can download additional payloads.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Anchor has obfuscated code with stack strings and string encryption.[1]
Enterprise,T1027,Software Packing,Anchor has come with a packed payload.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Anchor can support windows execution via SMB shares.[2]
Enterprise,T1053,Scheduled Task/Job: Cron,Anchor can install itself as a cron job.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Anchor can create a scheduled task for persistence.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Anchor has been signed with valid certificates to evade detection by security tools.[1]
Enterprise,T1082,System Information Discovery,Anchor can determine the hostname and linux version on a compromised host.[2]
Enterprise,T1016,System Network Configuration Discovery,Anchor can determine the public IP and location of a compromised host.[2]
Enterprise,T1569,System Services: Service Execution,Anchor can create and execute services to load its payload.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,HALFBAKED can execute PowerShell scripts.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,HALFBAKED can delete a specified file.[1]
Enterprise,T1057,Process Discovery,HALFBAKED can obtain information about running processes on the victim.[1]
Enterprise,T1113,Screen Capture,HALFBAKED can obtain screenshots from the victim.[1]
Enterprise,T1082,System Information Discovery,"HALFBAKED can obtain information about the OS, processor, and BIOS.[1]"
Enterprise,T1047,Windows Management Instrumentation,HALFBAKED can use WMI queries to gather system information.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,MoleNet can achieve persitence on the infected machine by setting the Registry run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,MoleNet can use PowerShell to set persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MoleNet can execute commands via the command line utility.[1]
Enterprise,T1105,Ingress Tool Transfer,MoleNet can download additional payloads from the C2.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,MoleNet can use WMI commands to check the system for firewall and antivirus software.[1]
Enterprise,T1082,System Information Discovery,MoleNet can collect information about the about the system.[1]
Enterprise,T1047,Windows Management Instrumentation,MoleNet can perform WMI commands on the system.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ECCENTRICBANDWAGON can use cmd to execute commands on a victim’s machine.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"ECCENTRICBANDWAGON has stored keystrokes and screenshots within the %temp%\GoogleChrome, %temp%\Downloads, and %temp%\TrendMicroUpdate directories.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,ECCENTRICBANDWAGON can delete log files generated from the malware stored at C:\windows\temp\tmp0207.[1]
Enterprise,T1056,Input Capture: Keylogging,ECCENTRICBANDWAGON can capture and store keystrokes.[1]
Enterprise,T1027,Obfuscated Files or Information,ECCENTRICBANDWAGON has encrypted strings with RC4.[1]
Enterprise,T1113,Screen Capture,ECCENTRICBANDWAGON can capture screenshots and store them locally.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Babuk has the ability to use the command line to control execution on compromised hosts.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Babuk has the ability to unpack itself into memory using XOR.[1][5]
Enterprise,T1083,File and Directory Discovery,Babuk has the ability to enumerate files on a targeted system.[2][4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Babuk can stop anti-virus services on a compromised host.[1]
Enterprise,T1106,Native API,Babuk can use multiple Windows API calls for actions on compromised hosts including discovery and execution.[1][2][5]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Versions of Babuk have been packed.[1][2][5]
Enterprise,T1057,Process Discovery,Babuk has the ability to check running processes on a targeted system.[1][2][4]
Enterprise,T1082,System Information Discovery,"Babuk can enumerate disk volumes, get disk information, and query service status.[2]"
Enterprise,T1049,System Network Connections Discovery,"Babuk can use ""WNetOpenEnumW"" and ""WNetEnumResourceW"" to enumerate files in network resources for encryption.[2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Babuk has the ability to use the command line to control execution on compromised hosts.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Babuk has the ability to unpack itself into memory using XOR.[1][5]
Enterprise,T1083,File and Directory Discovery,Babuk has the ability to enumerate files on a targeted system.[2][4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Babuk can stop anti-virus services on a compromised host.[1]
Enterprise,T1106,Native API,Babuk can use multiple Windows API calls for actions on compromised hosts including discovery and execution.[1][2][5]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Versions of Babuk have been packed.[1][2][5]
Enterprise,T1057,Process Discovery,Babuk has the ability to check running processes on a targeted system.[1][2][4]
Enterprise,T1082,System Information Discovery,"Babuk can enumerate disk volumes, get disk information, and query service status.[2]"
Enterprise,T1049,System Network Connections Discovery,"Babuk can use ""WNetOpenEnumW"" and ""WNetEnumResourceW"" to enumerate files in network resources for encryption.[2]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BADCALL encrypts C2 traffic using an XOR/ADD cipher.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,BADCALL disables the Windows firewall before binding to a port.[1]
Enterprise,T1112,Modify Registry,BADCALL modifies the firewall Registry key SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfileGloballyOpenPorts\List.[1]
Enterprise,T1090,Proxy,BADCALL functions as a proxy server between the victim and C2 server.[1]
Enterprise,T1082,System Information Discovery,BADCALL collects the computer name and host name on the compromised system.[1]
Enterprise,T1016,System Network Configuration Discovery,BADCALL collects the network adapter information.[1]
Enterprise,T1112,Modify Registry,Reg may be used to interact with and modify the Windows Registry of a local or remote system at the command-line interface.[1]
Enterprise,T1012,Query Registry,Reg may be used to gather details from the Windows Registry of a local or remote system at the command-line interface.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,TSCookie can multiple protocols including HTTP and HTTPS in communication with command and control (C2) servers.[2][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TSCookie has the ability to execute shell commands on the infected host.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"TSCookie has the ability to steal saved passwords from the Internet Explorer, Edge, Firefox, and Chrome browsers.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,"TSCookie has the ability to decrypt, load, and execute a DLL and its resources.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,TSCookie has encrypted network communications with RC4.[1]
Enterprise,T1083,File and Directory Discovery,TSCookie has the ability to discover drive information on the infected host.[1]
Enterprise,T1105,Ingress Tool Transfer,TSCookie has the ability to upload and download files to and from the infected host.[1]
Enterprise,T1057,Process Discovery,TSCookie has the ability to list processes on the infected host.[1]
Enterprise,T1055,Process Injection,"TSCookie has the ability to inject code into the svchost.exe, iexplorer.exe, explorer.exe, and default browser processes.[2]"
Enterprise,T1090,Proxy,TSCookie has the ability to proxy communications with command and control (C2) servers.[2]
Enterprise,T1016,System Network Configuration Discovery,TSCookie has the ability to identify the IP of the infected host.[1]
Enterprise,T1204,User Execution: Malicious Link,"TSCookie has been executed via malicious links embedded in e-mails spoofing the Ministries of Education, Culture, Sports, Science and Technology of Japan.[1]"
Enterprise,T1087,Account Discovery: Local Account,Pony has used the NetUserEnum function to enumerate local accounts.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Pony has sent collected information to the C2 via HTTP POST request.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Pony has used batch scripts to delete itself after execution.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Pony has used scripts to delete itself after execution.[1]
Enterprise,T1105,Ingress Tool Transfer,Pony can download additional files onto the infected system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Pony has used the Adobe Reader icon for the downloaded file to look more trustworthy.[1]
Enterprise,T1106,Native API,Pony has used several Windows functions for various purposes.[1]
Enterprise,T1027,Obfuscated Files or Information,Pony attachments have been delivered via compressed archive files. Pony also obfuscates the memory flow by adding junk instructions when executing to make analysis more difficult.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Pony has been delivered via spearphishing attachments.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Pony has been delivered via spearphishing emails which contained malicious links.[1]
Enterprise,T1082,System Information Discovery,"Pony has collected the Service Pack, language, and region information to send to the C2.[1]"
Enterprise,T1204,User Execution: Malicious Link,Pony has attempted to lure targets into clicking links in spoofed emails from legitimate banks.[1]
Enterprise,T1204,User Execution: Malicious File,"Pony has attempted to lure targets into downloading an attached executable (ZIP, RAR, or CAB archives) or document (PDF or other MS Office format).[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Pony has delayed execution using a built-in function to avoid detection and analysis.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ZLib communicates over HTTP for C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,The ZLib backdoor compresses communications using the standard Zlib compression library.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ZLib has the ability to execute shell commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,ZLib creates Registry keys to allow itself to run as various services.[1]
Enterprise,T1083,File and Directory Discovery,ZLib has the ability to enumerate files and drives.[1]
Enterprise,T1105,Ingress Tool Transfer,ZLib has the ability to download files.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"ZLib mimics the resource version information of legitimate Realtek Semiconductor, Nvidia, or Synaptics modules.[1]"
Enterprise,T1113,Screen Capture,ZLib has the ability to obtain screenshots of the compromised system.[1]
Enterprise,T1082,System Information Discovery,ZLib has the ability to enumerate system information.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Seasalt uses HTTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Seasalt creates a Registry entry to ensure infection after reboot under HKLM\Software\Microsoft\Windows\currentVersion\Run.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Seasalt uses cmd.exe to create a reverse shell on the infected endpoint.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Seasalt is capable of installing itself as a service.[1]
Enterprise,T1083,File and Directory Discovery,Seasalt has the capability to identify the drive type on a victim.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Seasalt has a command to delete a specified file.[1]
Enterprise,T1105,Ingress Tool Transfer,Seasalt has a command to download additional files.[1][1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Seasalt has masqueraded as a service called ""SaSaut"" with a display name of ""System Authorization Service"" in an apparent attempt to masquerade as a legitimate service.[1]"
Enterprise,T1027,Obfuscated Files or Information,Seasalt obfuscates configuration data.[1]
Enterprise,T1057,Process Discovery,Seasalt has a command to perform a process listing.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Bisonal has used HTTP for C2 communications.[1][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Bisonal has added itself to the Registry key HKEY_CURRENT_USER\Software\Microsoft\CurrentVersion\Run\ for persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Bisonal has launched cmd.exe and used the ShellExecuteW() API function to execute commands on the system.[1][3][2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Bisonal's dropper creates VBS scripts on the victim’s machine.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Bisonal has been modified to be used as a Windows service.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Bisonal has encoded binary data with Base64 and ASCII.[3][2]
Enterprise,T1005,Data from Local System,Bisonal has collected information from a compromised host.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Bisonal has decoded strings in the malware using XOR and RC4.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Bisonal variants reported on in 2014 and 2015 used a simple XOR cipher for C2. Some Bisonal samples encrypt C2 communications with RC4.[1][3][2]
Enterprise,T1041,Exfiltration Over C2 Channel,Bisonal has added the exfiltrated data to the URL over the C2 channel.[2]
Enterprise,T1083,File and Directory Discovery,Bisonal can retrieve a file listing from the system.[3][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Bisonal will delete its dropper and VBS scripts from the victim’s machine.[1][3][2]
Enterprise,T1105,Ingress Tool Transfer,Bisonal has the capability to download files to execute on the victim’s machine.[1][3][2]
Enterprise,T1036,Masquerading,Bisonal dropped a decoy payload with a .jpg extension that contained a malicious Visual Basic script.[2]
Enterprise,T1036,Match Legitimate Name or Location,Bisonal has renamed malicious code to msacm32.dll to hide within a legitimate library; earlier versions were disguised as winhelp.[2]
Enterprise,T1112,Modify Registry,Bisonal has deleted Registry keys to clean up its prior activity.[2]
Enterprise,T1106,Native API,Bisonal has used the Windows API to communicate with the Service Control Manager to execute a thread.[2]
Enterprise,T1027,Obfuscated Files or Information,Bisonal's DLL file and non-malicious decoy file are encrypted with RC4 and some function name strings are obfuscated.[1][2]
Enterprise,T1027,Binary Padding,Bisonal has appended random binary data to the end of itself to generate a large binary.[2]
Enterprise,T1027,Software Packing,Bisonal has used the MPRESS packer and similar tools for obfuscation.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Bisonal has been delivered as malicious email attachments.[2]
Enterprise,T1057,Process Discovery,Bisonal can obtain a list of running processes on the victim’s machine.[1][3][2]
Enterprise,T1090,Proxy,Bisonal has supported use of a proxy server.[2]
Enterprise,T1012,Query Registry,Bisonal has used the RegQueryValueExA function to retrieve proxy information in the Registry.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"Bisonal has used rundll32.exe to execute as part of the Registry Run key it adds: HKEY_CURRENT_USER \Software\Microsoft\Windows\CurrentVersion\Run\""vert"" = ""rundll32.exe c:\windows\temp\pvcu.dll , Qszdez"".[1]"
Enterprise,T1082,System Information Discovery,Bisonal has used commands and API calls to gather system information.[1][3][2]
Enterprise,T1016,System Network Configuration Discovery,Bisonal can execute ipconfig on the victim’s machine.[1][3][2]
Enterprise,T1124,System Time Discovery,Bisonal can check the system time set on the infected host.[3]
Enterprise,T1204,User Execution: Malicious File,Bisonal has relied on users to execute malicious file attachments delivered via spearphishing emails.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion,Bisonal can check to determine if the compromised system is running on VMware.[2]
Enterprise,T1497,Time Based Evasion,Bisonal has checked if the malware is running in a virtual environment with the anti-debug function GetTickCount() to compare the timing.[3][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Taidoor has used HTTP GET and POST requests for C2.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Taidoor has modified the HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run key for persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Taidoor can copy cmd.exe into the system temp folder.[1]
Enterprise,T1005,Data from Local System,Taidoor can upload data and files from a victim's machine.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Taidoor can use a stream cipher to decrypt stings used by the malware.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Taidoor uses RC4 to encrypt the message body of HTTP content.[2][1]
Enterprise,T1083,File and Directory Discovery,Taidoor can search for specific files.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Taidoor can use DeleteFileA to remove files from infected hosts.[1]
Enterprise,T1105,Ingress Tool Transfer,Taidoor has downloaded additional files onto a compromised host.[2]
Enterprise,T1112,Modify Registry,Taidoor has the ability to modify the Registry on compromised hosts using RegDeleteValueA and RegCreateKeyExA.[1]
Enterprise,T1106,Native API,"Taidoor has the ability to use native APIs for execution including GetProcessHeap, GetProcAddress, and LoadLibrary.[2][1]"
Enterprise,T1027,Obfuscated Files or Information,Taidoor can use encrypted string blocks for obfuscation.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Taidoor has been delivered through spearphishing emails.[2]
Enterprise,T1057,Process Discovery,Taidoor can use GetCurrentProcessId for process discovery.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Taidoor can perform DLL loading.[2][1]
Enterprise,T1012,Query Registry,Taidoor can query the Registry on compromised hosts using RegQueryValueExA.[1]
Enterprise,T1016,System Network Configuration Discovery,Taidoor has collected the MAC address of a compromised host; it can also use GetAdaptersInfo to identify network adapters.[2][1]
Enterprise,T1124,System Time Discovery,Taidoor can use GetLocalTime and GetSystemTime to collect system time.[1]
Enterprise,T1204,User Execution: Malicious File,Taidoor has relied upon a victim to click on a malicious email attachment.[2]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,Some variants of the Zeroaccess Trojan have been known to store data in Extended Attributes.[2]
Enterprise,T1105,Ingress Tool Transfer,BITSAdmin can be used to create BITS Jobs to upload and/or download files.[1]
Enterprise,T1087,Account Discovery: Email Account,Emotet has been observed leveraging a module that can scrape email addresses from Outlook.[3][4]
Enterprise,T1560,Archive Collected Data,Emotet has been observed encrypting the data it collects before sending it to the C2 server. [5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Emotet has been observed adding the downloaded payload to the HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run key to maintain persistence.[6][7][8]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Emotet has used Powershell to retrieve the malicious payload and download additional resources like Mimikatz. [6][2][8][11][12]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Emotet has used cmd.exe to run a PowerShell script. [8]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Emotet has sent Microsoft Word documents with embedded macros that will invoke scripts to download additional payloads. [6][13][2][8][12]
Enterprise,T1543,Create or Modify System Process: Windows Service,Emotet has been observed creating new services to maintain persistence. [7][10]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Emotet has been observed dropping browser password grabber modules. [2][4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Emotet is known to use RSA keys for encrypting C2 traffic. [2]
Enterprise,T1041,Exfiltration Over C2 Channel,Emotet has been seen exfiltrating system information stored within cookies sent within an HTTP GET request back to its C2 servers. [2]
Enterprise,T1027,Obfuscated Files or Information,"Emotet has obfuscated macros within malicious documents to hide the URLs hosting the malware, CMD.exe arguments, and PowerShell scripts. [13][2][8][14]"
Enterprise,T1027,Software Packing,Emotet has used custom packers to protect its payloads.[2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Emotet has been observed dropping password grabber modules including Mimikatz. [2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Emotet has been delivered by phishing emails containing attachments. [15][9][6][7][13][2][8][12][4]
Enterprise,T1566,Phishing: Spearphishing Link,Emotet has been delivered by phishing emails containing links. [1][16][15][9][6][7][13][13][8]
Enterprise,T1057,Process Discovery,Emotet has been observed enumerating local processes.[17]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Emotet has been observed injecting in to Explorer.exe and other processes. [8][1][7]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Emotet leverages the Admin$ share for lateral movement once the local admin password has been brute forced. [9]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Emotet has maintained persistence through a scheduled task. [7]
Enterprise,T1204,User Execution: Malicious Link,Emotet has relied upon users clicking on a malicious link delivered through spearphishing.[1][12]
Enterprise,T1204,User Execution: Malicious File,Emotet has relied upon users clicking on a malicious attachment delivered through spearphishing.[1][12][4]
Enterprise,T1078,Valid Accounts: Local Accounts,"Emotet can brute force a local admin password, then use it to facilitate lateral movement.[9]"
Enterprise,T1047,Windows Management Instrumentation,Emotet has used WMI to execute powershell.exe.[12]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Keydnap uses HTTPS for command and control.[2]
Enterprise,T1059,Command and Scripting Interpreter: Python,Keydnap uses Python for scripting to execute additional commands.[2]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Keydnap uses a Launch Agent to persist.[2]
Enterprise,T1555,Credentials from Password Stores: Securityd Memory,Keydnap uses the keychaindump project to read securityd memory.[2]
Enterprise,T1564,Hide Artifacts: Resource Forking,Keydnap uses a resource fork to present a macOS JPEG or text file icon rather than the executable's icon assigned by the operating system.[1]
Enterprise,T1056,Input Capture: GUI Input Capture,Keydnap prompts the users for credentials.[2]
Enterprise,T1036,Masquerading: Space after Filename,Keydnap puts a space after a false .jpg extension so that execution actually goes through the Terminal.app program.[2]
Enterprise,T1090,Proxy: Multi-hop Proxy,Keydnap uses a copy of tor2web proxy for HTTPS communications.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DustySky has used both HTTP and HTTPS for C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,DustySky can compress files via RAR while staging data to be exfiltrated.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,DustySky achieves persistence by creating a Registry entry in HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run.[1]
Enterprise,T1074,Data Staged: Local Data Staging,DustySky created folders in temp directories to host collected files before exfiltration.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,DustySky has exfiltrated data to the C2 server.[3]
Enterprise,T1083,File and Directory Discovery,"DustySky scans the victim for files that contain certain keywords and document types including PDF, DOC, DOCX, XLS, and XLSX, from a list that is obtained from the C2 as a text file. It can also identify logical drives for the infected machine.[1][3]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,DustySky can delete files it creates from the infected system.[3]
Enterprise,T1056,Input Capture: Keylogging,DustySky contains a keylogger.[1]
Enterprise,T1027,Obfuscated Files or Information,The DustySky dropper uses a function to obfuscate the name of functions and other parts of the malware.[1]
Enterprise,T1057,Process Discovery,DustySky collects information about running processes from victims.[1][3]
Enterprise,T1113,Screen Capture,DustySky captures PNG screenshots of the main screen.[3]
Enterprise,T1518,Software Discovery,DustySky lists all installed software for the infected machine.[3]
Enterprise,T1518,Security Software Discovery,DustySky checks for the existence of anti-virus.[1]
Enterprise,T1082,System Information Discovery,DustySky extracts basic information about the operating system.[1]
Enterprise,T1047,Windows Management Instrumentation,The DustySky dropper uses Windows Management Instrumentation to extract information about the operating system and whether an anti-virus is active.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Kinsing has communicated with C2 over HTTP.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Kinsing has used Unix shell scripts to execute commands in the victim environment.[1]
Enterprise,T1083,File and Directory Discovery,Kinsing has used the find command to search for specific files.[1]
Enterprise,T1105,Ingress Tool Transfer,Kinsing has downloaded additional lateral movement scripts from C2.[1]
Enterprise,T1057,Process Discovery,Kinsing has used ps to list processes.[1]
Enterprise,T1021,Remote Services: SSH,Kinsing has used SSH for lateral movement.[1]
Enterprise,T1018,Remote System Discovery,Kinsing has used a script to parse files like /etc/hosts and SSH known_hosts to discover remote systems.[1]
Enterprise,T1053,Scheduled Task/Job: Cron,Kinsing has used crontab to download and run shell scripts every minute to ensure persistence.[1]
Enterprise,T1078,Valid Accounts,Kinsing has used valid SSH credentials to access remote hosts.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,certutil has been used to decode binaries hidden inside certificate files as Base64 information.[2]
Enterprise,T1105,Ingress Tool Transfer,certutil can be used to download files from a given URL.[1][3]
Enterprise,T1553,Subvert Trust Controls: Install Root Certificate,certutil can be used to install browser root certificates as a precursor to performing Adversary-in-the-Middle between connections to banking websites. Example command: certutil -addstore -f -user ROOT ProgramData\cert512121.der.[4]
Enterprise,T1560,Archive Collected Data,"After collecting documents from removable media, Prikormka compresses the collected files, and encrypts it with Blowfish.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Prikormka adds itself to a Registry Run key with the name guidVGA or guidVSA.[1]
Enterprise,T1555,Credentials from Password Stores,A module in Prikormka collects passwords stored in applications installed on the victim.[1]
Enterprise,T1555,Credentials from Web Browsers,"A module in Prikormka gathers logins and passwords stored in applications on the victims, including Google Chrome, Mozilla Firefox, and several other browsers.[1]"
Enterprise,T1132,Data Encoding: Standard Encoding,Prikormka encodes C2 traffic with Base64.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"Prikormka creates a directory, %USERPROFILE%\AppData\Local\SKC\, which is used to store collected log files.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Prikormka encrypts some C2 traffic with the Blowfish cipher.[1]
Enterprise,T1083,File and Directory Discovery,"A module in Prikormka collects information about the paths, size, and creation time of files with specific file extensions, but not the actual content of the file.[1]"
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Prikormka uses DLL search order hijacking for persistence by saving itself as ntshrui.dll to the Windows directory so it will load before the legitimate ntshrui.dll saved in the System32 subdirectory.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"After encrypting its own log files, the log encryption module in Prikormka deletes the original, unencrypted files from the host.[1]"
Enterprise,T1056,Input Capture: Keylogging,Prikormka contains a keylogger module that collects keystrokes and the titles of foreground windows.[1]
Enterprise,T1027,Obfuscated Files or Information,Some resources in Prikormka are encrypted with a simple XOR operation or encoded with Base64.[1]
Enterprise,T1113,Screen Capture,Prikormka contains a module that captures screenshots of the victim's desktop.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,A module in Prikormka collects information from the victim about installed anti-virus software.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Prikormka uses rundll32.exe to load its DLL.[1]
Enterprise,T1082,System Information Discovery,"A module in Prikormka collects information from the victim about Windows OS version, computer name, battery info, and physical memory.[1]"
Enterprise,T1016,System Network Configuration Discovery,A module in Prikormka collects information from the victim about its IP addresses and MAC addresses.[1]
Enterprise,T1033,System Owner/User Discovery,A module in Prikormka collects information from the victim about the current user name.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ISMInjector uses the certutil command to decode a payload file.[1]
Enterprise,T1027,Obfuscated Files or Information,ISMInjector is obfuscated with the off-the-shelf SmartAssembly .NET obfuscator created by red-gate.com.[1]
Enterprise,T1055,Process Injection: Process Hollowing,ISMInjector hollows out a newly created process RegASM.exe and injects its payload into the hollowed process.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,ISMInjector creates scheduled tasks to establish persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Remcos can add itself to the Registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Run for persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Remcos can launch a remote command line to execute commands on the victim’s machine.[3]
Enterprise,T1059,Command and Scripting Interpreter: Python,Remcos uses Python scripts.[1]
Enterprise,T1083,File and Directory Discovery,Remcos can search for files on the infected machine.[1]
Enterprise,T1105,Ingress Tool Transfer,Remcos can upload and download files to and from the victim’s machine.[1]
Enterprise,T1056,Input Capture: Keylogging,Remcos has a command for keylogging.[3][2]
Enterprise,T1112,Modify Registry,"Remcos has full control of the Registry, including the ability to modify it.[1]"
Enterprise,T1027,Obfuscated Files or Information,"Remcos uses RC4 and base64 to obfuscate data, including Registry entries and file paths.[2]"
Enterprise,T1055,Process Injection,Remcos has a command to hide itself through injecting into another process.[3]
Enterprise,T1090,Proxy,Remcos uses the infected hosts as SOCKS5 proxies to allow for tunneling and proxying.[1]
Enterprise,T1113,Screen Capture,Remcos takes automated screenshots of the infected machine.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Remcos searches for Sandboxie and VMware on the system.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,xCaon has communicated with the C2 server by sending POST requests over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution,xCaon has added persistence via the Registry key HKEY_CURRENT_USER\Software\Microsoft\Windows NT\CurrentVersion\Windows\load which causes the malware to run each time any user logs in.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,xCaon has a command to start an interactive shell.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,xCaon has used Base64 to encode its C2 traffic.[1]
Enterprise,T1005,Data from Local System,xCaon has uploaded files from victims' machines.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,xCaon has decoded strings from the C2 server before executing commands.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,xCaon has encrypted data sent to the C2 server using a XOR key.[1]
Enterprise,T1105,Ingress Tool Transfer,xCaon has a command to download files to the victim's machine.[1]
Enterprise,T1106,Native API,xCaon has leveraged native OS function calls to retrieve victim's network adapter's information using GetAdapterInfo() API.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,xCaon has checked for the existence of Kaspersky antivirus software on the system.[1]
Enterprise,T1016,System Network Configuration Discovery,xCaon has used the GetAdaptersInfo() API call to get the victim's MAC address.[1]
Enterprise,T1078,Valid Accounts: Cloud Accounts,Peirates can use stolen service account tokens to perform its operations.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MirageFox has the capability to execute commands using cmd.exe.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,MirageFox has a function for decrypting data containing C2 configuration information.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,MirageFox is likely loaded via DLL hijacking into a legitimate McAfee binary.[1]
Enterprise,T1082,System Information Discovery,MirageFox can collect CPU and architecture information from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,MirageFox can gather the username from the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,LightNeuron uses SMTP for C2.[1]
Enterprise,T1560,Archive Collected Data,LightNeuron contains a function to encrypt and store emails that it collects.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,LightNeuron is capable of executing commands via cmd.exe.[1]
Enterprise,T1005,Data from Local System,LightNeuron can collect files from a local system.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"LightNeuron can store email data in files and directories specified in its configuration, such as C:\Windows\ServiceProfiles\NetworkService\appdata\Local\Temp\.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,LightNeuron has used AES and XOR to decrypt configuration files and commands.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,LightNeuron uses AES to encrypt C2 traffic.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,LightNeuron exfiltrates data over its email C2 channel.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,LightNeuron has a function to delete files.[1]
Enterprise,T1105,Ingress Tool Transfer,LightNeuron has the ability to download and execute additional files.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"LightNeuron has used filenames associated with Exchange and Outlook for binary and configuration files, such as winmail.dat.[1]"
Enterprise,T1106,Native API,LightNeuron is capable of starting a process using CreateProcess.[1]
Enterprise,T1027,Obfuscated Files or Information,LightNeuron encrypts its configuration files with AES-256.[1]
Enterprise,T1082,System Information Discovery,LightNeuron gathers the victim computer name using the Win32 API call GetComputerName.[1]
Enterprise,T1016,System Network Configuration Discovery,LightNeuron gathers information about network adapters using the Win32 API call GetAdaptersInfo.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Dyre uses HTTPS for C2 communications.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Dyre registers itself as a service by adding several Registry keys.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Dyre has the ability to create files in a TEMP folder to act as a database to store information.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Dyre decrypts resources needed for targeting the victim.[1][2]
Enterprise,T1041,Exfiltration Over C2 Channel,Dyre has the ability to send information staged on a compromised host externally to C2.[2]
Enterprise,T1105,Ingress Tool Transfer,Dyre has a command to download and executes additional files.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Dyre has been delivered with encrypted resources and must be unpacked for execution.[2]
Enterprise,T1055,Process Injection,Dyre has the ability to directly inject its code into the web browser process.[2]
Enterprise,T1055,Dynamic-link Library Injection,Dyre injects into other processes to load modules.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Dyre has the ability to achieve persistence by adding a new task in the task scheduler to run every minute.[2]
Enterprise,T1518,Software Discovery,Dyre has the ability to identify installed programs on a compromised host.[2]
Enterprise,T1082,System Information Discovery,"Dyre has the ability to identify the computer name, OS version, and hardware configuration on a compromised host.[2]"
Enterprise,T1016,System Network Configuration Discovery,Dyre has the ability to identify network settings on a compromised host.[2]
Enterprise,T1033,System Owner/User Discovery,Dyre has the ability to identify the users on a compromised host.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Dyre can detect sandbox analysis environments by inspecting the process list and Registry.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Proxysvc uses HTTP over SSL to communicate commands with the control server.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Proxysvc executes a binary on the system and logs the results into a temp file by using: cmd.exe /c "" > %temp%\PM* .tmp 2>&1"".[1]"
Enterprise,T1005,Data from Local System,Proxysvc searches the local system and gathers data.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Proxysvc performs data exfiltration over the control server channel using a custom protocol.[1]
Enterprise,T1083,File and Directory Discovery,Proxysvc lists files in directories.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Proxysvc can delete files indicated by the attacker and remove itself from disk using a batch file.[1]
Enterprise,T1057,Process Discovery,Proxysvc lists processes running on the system.[1]
Enterprise,T1012,Query Registry,Proxysvc gathers product names from the Registry key: HKLM\Software\Microsoft\Windows NT\CurrentVersion ProductName and the processor description from the Registry key HKLM\HARDWARE\DESCRIPTION\System\CentralProcessor\0 ProcessorNameString.[1]
Enterprise,T1082,System Information Discovery,"Proxysvc collects the OS version, country name, MAC address, computer name, physical memory statistics, and volume information for all drives on the system.[1]"
Enterprise,T1016,System Network Configuration Discovery,Proxysvc collects the network adapter information and domain/username information based on current remote sessions.[1]
Enterprise,T1569,System Services: Service Execution,Proxysvc registers itself as a service on the victim’s machine to run as a standalone process.[1]
Enterprise,T1124,System Time Discovery,"As part of the data reconnaissance phase, Proxysvc grabs the system time to send back to the control server.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FinFisher establishes persistence by creating the Registry key HKCU\Software\Microsoft\Windows\Run.[1][5]
Enterprise,T1543,Create or Modify System Process: Windows Service,FinFisher creates a new Windows service with the malicious executable for persistence.[1][5]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"FinFisher extracts and decrypts stage 3 malware, which is stored in encrypted resources.[1][5]"
Enterprise,T1083,File and Directory Discovery,FinFisher enumerates directories and scans for certain files.[1][5]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,A FinFisher variant uses DLL search order hijacking.[1][4]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,FinFisher uses DLL side-loading to load malicious programs.[1][5]
Enterprise,T1574,Hijack Execution Flow: KernelCallbackTable,FinFisher has used the KernelCallbackTable to hijack the execution flow of a process by replacing the __fnDWORD function with the address of a created Asynchronous Procedure Call stub routine.[6]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,FinFisher clears the system event logs using OpenEventLog/ClearEventLog APIs .[1][5]
Enterprise,T1056,Input Capture: Credential API Hooking,FinFisher hooks processes by modifying IAT pointers to CreateWindowEx.[1][7]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,FinFisher renames one of its .dll files to uxtheme.dll in an apparent attempt to masquerade as a legitimate file.[1][5]
Enterprise,T1027,Obfuscated Files or Information,"FinFisher is heavily obfuscated in many ways, including through the use of spaghetti code in its functions in an effort to confuse disassembly programs. It also uses a custom XOR algorithm to obfuscate code.[1][5]"
Enterprise,T1027,Binary Padding,FinFisher contains junk code in its functions in an effort to confuse disassembly programs.[1][5]
Enterprise,T1027,Software Packing,A FinFisher variant uses a custom packer.[1][4]
Enterprise,T1057,Process Discovery,FinFisher checks its parent process for indications that it is running in a sandbox setup.[1][5]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,FinFisher injects itself into various processes depending on whether it is low integrity or high integrity.[1][5]
Enterprise,T1012,Query Registry,FinFisher queries Registry values as part of its anti-sandbox checks.[1][5]
Enterprise,T1113,Screen Capture,FinFisher takes a screenshot of the screen and displays it on top of all other windows for few seconds in an apparent attempt to hide some messages showed by the system during the setup process.[1][5]
Enterprise,T1518,Software Discovery: Security Software Discovery,FinFisher probes the system to check for antimalware processes.[1][4]
Enterprise,T1082,System Information Discovery,FinFisher checks if the victim OS is 32 or 64-bit.[1][5]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,FinFisher obtains the hardware device list and checks if the MD5 of the vendor ID is equal to a predefined list in order to check for sandbox/virtualized environments.[5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,build_downer has the ability to add itself to the Registry Run key for persistence.[1]
Enterprise,T1105,Ingress Tool Transfer,build_downer has the ability to download files from C2 to the infected host.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"build_downer has added itself to the Registry Run key as ""NVIDIA"" to appear legitimate.[1]"
Enterprise,T1106,Native API,build_downer has the ability to use the WinExec API to execute malware on a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,build_downer can extract malware from a downloaded JPEG.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,build_downer has the ability to detect if the infected host is running an anti-virus process.[1]
Enterprise,T1082,System Information Discovery,build_downer has the ability to send system volume information to C2.[1]
Enterprise,T1124,System Time Discovery,build_downer has the ability to determine the local time to ensure malware installation only happens during the hours that the infected system is active.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,SpicyOmelette has the ability to execute arbitrary JavaScript code on a compromised host.[1]
Enterprise,T1005,Data from Local System,SpicyOmelette has collected data and other information from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,SpicyOmelette can download malicious files from threat actor controlled AWS URL's.[1]
Enterprise,T1566,Phishing: Spearphishing Link,SpicyOmelette has been distributed via emails containing a malicious link that appears to be a PDF document.[1]
Enterprise,T1018,Remote System Discovery,"SpicyOmelette can identify payment systems, payment gateways, and ATM systems in compromised environments.[1]"
Enterprise,T1518,Software Discovery,SpicyOmelette can enumerate running software on a targeted system.[1]
Enterprise,T1518,Security Software Discovery,SpicyOmelette can check for the presence of 29 different antivirus tools.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,SpicyOmelette has been signed with valid digital certificates.[1]
Enterprise,T1082,System Information Discovery,SpicyOmelette can identify the system name of a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,SpicyOmelette can identify the IP of a compromised system.[1]
Enterprise,T1204,User Execution: Malicious Link,SpicyOmelette has been executed through malicious links within spearphishing emails.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SLOTHFULMEDIA has used HTTP and HTTPS for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SLOTHFULMEDIA can open a command line to execute commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"SLOTHFULMEDIA has created a service on victim machines named ""TaskFrame"" to establish persistence.[1]"
Enterprise,T1005,Data from Local System,SLOTHFULMEDIA has uploaded files and information from victim machines.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,SLOTHFULMEDIA has sent system information to a C2 server via HTTP and HTTPS POST requests.[1]
Enterprise,T1083,File and Directory Discovery,SLOTHFULMEDIA can enumerate files and directories.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,SLOTHFULMEDIA has been created with a hidden attribute to insure it's not visible to the victim.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SLOTHFULMEDIA has deleted itself and the 'index.dat' file on a compromised machine to remove recent Internet history from the system.[1]
Enterprise,T1105,Ingress Tool Transfer,SLOTHFULMEDIA has downloaded files onto a victim machine.[1]
Enterprise,T1056,Input Capture: Keylogging,SLOTHFULMEDIA has a keylogging capability.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"SLOTHFULMEDIA has named a service it establishes on victim machines as ""TaskFrame"" to hide its malicious purpose.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"SLOTHFULMEDIA has mimicked the names of known executables, such as mediaplayer.exe.[1]"
Enterprise,T1112,Modify Registry,"SLOTHFULMEDIA can add, modify, and/or delete registry keys. It has changed the proxy configuration of a victim system by modifying the HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap registry.[1]"
Enterprise,T1057,Process Discovery,"SLOTHFULMEDIA has enumerated processes by ID, name, or privileges.[1]"
Enterprise,T1055,Process Injection,SLOTHFULMEDIA can inject into running processes on a compromised host.[1]
Enterprise,T1113,Screen Capture,"SLOTHFULMEDIA has taken a screenshot of a victim's desktop, named it ""Filter3.jpg"", and stored it in the local directory.[1]"
Enterprise,T1082,System Information Discovery,"SLOTHFULMEDIA has collected system name, OS version, adapter information, memory usage, and disk information from a victim machine.[1]"
Enterprise,T1049,System Network Connections Discovery,SLOTHFULMEDIA can enumerate open ports on a victim machine.[1]
Enterprise,T1033,System Owner/User Discovery,SLOTHFULMEDIA has collected the username from a victim machine.[1]
Enterprise,T1569,System Services: Service Execution,SLOTHFULMEDIA has the capability to start services.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,REvil has used HTTP and HTTPS in communication with C2.[6][7][9][2][1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,REvil has used PowerShell to delete volume shadow copies and download files.[7][8][2][3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,REvil can use the Windows command line to delete volume shadow copies and disable recovery.[6][8][11][1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,REvil has used obfuscated VBA macros for execution.[5][11]
Enterprise,T1140,Deobfuscate/Decode Files or Information,REvil can decode encrypted strings to enable execution of commands and payloads.[5][4][6][9][2][1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,REvil has encrypted C2 communications with the ECIES algorithm.[4]
Enterprise,T1041,Exfiltration Over C2 Channel,REvil can exfiltrate host and malware information to C2 servers.[1]
Enterprise,T1083,File and Directory Discovery,REvil has the ability to identify specific files and directories that are not to be encrypted.[4][6][7][9][2][1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,REvil can connect to and disable the Symantec server on the victim's network.[6]
Enterprise,T1562,Impair Defenses: Safe Mode Boot,REvil can force a reboot in safe mode with networking.[13]
Enterprise,T1070,Indicator Removal on Host: File Deletion,REvil can mark its binary code for deletion after reboot.[2]
Enterprise,T1105,Ingress Tool Transfer,REvil can download a copy of itself from an attacker controlled IP address to the victim machine.[8][9][11]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,REvil can mimic the names of known executables.[11]
Enterprise,T1112,Modify Registry,REvil can save encryption parameters and system information to the Registry.[6][7][9][2][1]
Enterprise,T1106,Native API,REvil can use Native API for execution and to retrieve active services.[1][2]
Enterprise,T1027,Obfuscated Files or Information,REvil has used encrypted strings and configuration files.[5][7][9][2][3][11][1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,REvil can identify the domain membership of a compromised host.[4][9][1]
Enterprise,T1566,Phishing: Spearphishing Attachment,REvil has been distributed via malicious e-mail attachments including MS Word Documents.[5][6][1][9][11]
Enterprise,T1055,Process Injection,REvil can inject itself into running processes on a compromised host.[10]
Enterprise,T1012,Query Registry,REvil can query the Registry to get random file extensions to append to encrypted files.[1]
Enterprise,T1082,System Information Discovery,"REvil can identify the username, machine name, system language, keyboard layout, OS version, and system drive information on a compromised host.[4][6][7][9][9][2][3][1]"
Enterprise,T1204,User Execution: Malicious File,REvil has been executed via malicious MS Word e-mail attachments.[5][10][11]
Enterprise,T1047,Windows Management Instrumentation,REvil can use WMI to monitor for and kill specific processes listed in its configuration file.[7][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,CozyCar's main method of communicating with its C2 servers is using HTTP or HTTPS.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"One persistence mechanism used by CozyCar is to set itself to be executed at system startup by adding a Registry value under one of the following Registry keys: 
HKLM\Software\Microsoft\Windows\CurrentVersion\Run\ 
HKCU\Software\Microsoft\Windows\CurrentVersion\Run\ 
HKLM\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run 
HKCU\Software\Microsoft\Windows\CurrentVersion\Policies\Explorer\Run[2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,A module in CozyCar allows arbitrary commands to be executed by invoking C:\Windows\System32\cmd.exe.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,One persistence mechanism used by CozyCar is to register itself as a Windows service.[2]
Enterprise,T1036,Masquerading: Rename System Utilities,The CozyCar dropper has masqueraded a copy of the infected system's rundll32.exe executable that was moved to the malware's install directory and renamed according to a predefined configuration file.[2]
Enterprise,T1027,Obfuscated Files or Information,The payload of CozyCar is encrypted with simple XOR with a rotating key. The CozyCar configuration file has been encrypted with RC4 keys.[2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,CozyCar has executed Mimikatz to harvest stored credentials from the victim and further victim penetration.[2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,"Password stealer and NTLM stealer modules in CozyCar harvest stored credentials from the victim, including credentials used as part of Windows NTLM user authentication.[2]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,One persistence mechanism used by CozyCar is to register itself as a scheduled task.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,"The main CozyCar dropper checks whether the victim has an anti-virus product installed. If the installed product is on a predetermined list, the dropper will exit.[2]"
Enterprise,T1218,System Binary Proxy Execution: Rundll32,"The CozyCar dropper copies the system file rundll32.exe to the install location for the malware, then uses the copy of rundll32.exe to load and execute the main CozyCar component.[2]"
Enterprise,T1082,System Information Discovery,A system info module in CozyCar gathers information on the victim host’s configuration.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion,"Some versions of CozyCar will check to ensure it is not being executed inside a virtual machine or a known malware analysis sandbox environment. If it detects that it is, it will exit.[2]"
Enterprise,T1102,Web Service: Bidirectional Communication,CozyCar uses Twitter as a backup C2 channel to Twitter accounts specified in its configuration file.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,YAHOYAH uses HTTP for C2.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,YAHOYAH decrypts downloaded files before execution.[1]
Enterprise,T1105,Ingress Tool Transfer,YAHOYAH uses HTTP GET requests to download other files that are executed in memory.[1]
Enterprise,T1027,Obfuscated Files or Information,YAHOYAH encrypts its configuration file using a simple algorithm.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,YAHOYAH checks for antimalware solution processes on the system.[1]
Enterprise,T1082,System Information Discovery,YAHOYAH checks for the system’s Windows OS version and hostname.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,PS1 can utilize a PowerShell loader.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,PS1 can use an XOR key to decrypt a PowerShell loader and payload binary.[1]
Enterprise,T1027,Obfuscated Files or Information,PS1 is distributed as a set of encrypted files and scripts.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,PS1 can inject its payload DLL Into memory.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Ursnif has used HTTPS for C2.[3][4][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Ursnif has used Registry Run keys to establish automatic execution at system startup.[5][6]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Ursnif droppers have used PowerShell in download cradles to download and execute the malware's full executable payload.[7]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Ursnif droppers have used VBA macros to download and execute the malware's full executable payload.[7]
Enterprise,T1543,Create or Modify System Process: Windows Service,Ursnif has registered itself as a system service in the Registry for automatic execution at system startup.[5]
Enterprise,T1132,Data Encoding,Ursnif has used encoded data in HTTP URLs for C2.[2]
Enterprise,T1005,Data from Local System,"Ursnif has collected files from victim machines, including certificates and cookies.[6]"
Enterprise,T1074,Data Staged: Local Data Staging,Ursnif has used tmp files to stage gathered information.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Ursnif has used crypto key information stored in the Registry to decrypt Tor clients dropped to disk.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Ursnif has used HTTP POSTs to exfil gathered information.[3][4][2]
Enterprise,T1564,Hide Artifacts: Hidden Window,Ursnif droppers have used COM properties to execute malware in hidden windows.[7]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Ursnif has deleted data staged in tmp files after exfiltration.[3]
Enterprise,T1105,Ingress Tool Transfer,Ursnif has dropped payload and configuration files to disk. Ursnif has also been used to download and execute additional payloads.[5][6]
Enterprise,T1056,Input Capture: Credential API Hooking,"Ursnif has hooked APIs to perform a wide variety of information theft, such as monitoring traffic from browsers.[3]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Ursnif has used strings from legitimate system files and existing folders for its file, folder, and Registry entry names.[3]"
Enterprise,T1112,Modify Registry,Ursnif has used Registry modifications as part of its installation routine.[6][2]
Enterprise,T1106,Native API,Ursnif has used CreateProcessW to create child processes.[4]
Enterprise,T1027,Obfuscated Files or Information,Ursnif has used an XOR-based algorithm to encrypt Tor clients dropped to disk.[2] Ursnif droppers have also been delivered as password-protected zip files that execute base64 encoded PowerShell commands.[7]
Enterprise,T1057,Process Discovery,Ursnif has gathered information about running processes.[3][6]
Enterprise,T1055,Process Injection: Thread Local Storage,Ursnif has injected code into target processes via thread local storage callbacks.[3][5][4]
Enterprise,T1055,Process Injection: Process Hollowing,Ursnif has used process hollowing to inject into child processes.[4]
Enterprise,T1090,Proxy,Ursnif has used a peer-to-peer (P2P) network for C2.[1][2]
Enterprise,T1090,Multi-hop Proxy,Ursnif has used Tor for C2.[1][2]
Enterprise,T1012,Query Registry,Ursnif has used Reg to query the Registry for installed programs.[3][6]
Enterprise,T1113,Screen Capture,Ursnif has used hooked APIs to take screenshots.[3][6]
Enterprise,T1082,System Information Discovery,Ursnif has used Systeminfo to gather system information.[3]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Ursnif has used a 30 minute delay after execution to evade sandbox monitoring tools.[8]
Enterprise,T1047,Windows Management Instrumentation,Ursnif droppers have used WMI classes to execute PowerShell commands.[7]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ObliqueRAT can gain persistence by a creating a shortcut in the infected user's Startup directory.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"ObliqueRAT can copy specific files, webcam captures, and screenshots to local directories.[1]"
Enterprise,T1083,File and Directory Discovery,ObliqueRAT has the ability to recursively enumerate files on an infected endpoint.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,ObliqueRAT can hide its payload in BMP images hosted on compromised websites.[1]
Enterprise,T1057,Process Discovery,ObliqueRAT can check for blocklisted process names on a compromised host.[1]
Enterprise,T1113,Screen Capture,ObliqueRAT can capture a screenshot of the current screen.[1]
Enterprise,T1082,System Information Discovery,ObliqueRAT has the ability to check for blocklisted computer names on infected endpoints.[1]
Enterprise,T1033,System Owner/User Discovery,ObliqueRAT can check for blocklisted usernames on infected endpoints.[1]
Enterprise,T1204,User Execution: Malicious Link,ObliqueRAT has gained execution on targeted systems through luring users to click on links to malicious URLs.[1][2]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,ObliqueRAT can halt execution if it identifies processes belonging to virtual machine software or analysis tools.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,SYSCON has the ability to use FTP in C2 communications.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SYSCON has the ability to execute commands through cmd on a compromised host.[2]
Enterprise,T1057,Process Discovery,SYSCON has the ability to use Tasklist to list running processes.[2]
Enterprise,T1082,System Information Discovery,SYSCON has the ability to use Systeminfo to identify system information.[2]
Enterprise,T1204,User Execution: Malicious File,SYSCON has been executed by luring victims to open malicious e-mail attachments.[1]
Enterprise,T1087,Account Discovery: Local Account,Remsec can obtain a list of users.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Remsec is capable of using HTTP and HTTPS for C2.[4][5][3]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Remsec is capable of using SMTP for C2.[4][5][3]
Enterprise,T1071,Application Layer Protocol: DNS,Remsec is capable of using DNS for C2.[4][5][3]
Enterprise,T1083,File and Directory Discovery,Remsec is capable of listing contents of folders on the victim. Remsec also searches for custom network encryption software on victims.[4][5][3]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Remsec can add or remove applications or ports on the Windows firewall or disable it entirely.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Remsec is capable of deleting files on the victim. It also securely removes itself after collecting and exfiltrating data.[4][5][3]
Enterprise,T1105,Ingress Tool Transfer,Remsec contains a network loader to receive executable modules from remote attackers and run them on the local victim. It can also upload and download files over HTTP and HTTPS.[4][3]
Enterprise,T1056,Input Capture: Keylogging,Remsec contains a keylogger component.[4][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"The Remsec loader implements itself with the name Security Support Provider, a legitimate Windows function. Various Remsec .exe files mimic legitimate file names used by Microsoft, Symantec, Kaspersky, Hewlett-Packard, and VMWare. Remsec also disguised malicious modules using similar filenames as custom network encryption software on victims.[4][5]"
Enterprise,T1027,Obfuscated Files or Information,"Some data in Remsec is encrypted using RC5 in CBC mode, AES-CBC with a hardcoded key, RC4, or Salsa20. Some data is also base64-encoded.[4][3]"
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Remsec can dump the SAM database.[3]
Enterprise,T1057,Process Discovery,Remsec can obtain a process list from the victim.[3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Remsec can perform DLL injection.[3]
Enterprise,T1018,Remote System Discovery,Remsec can ping or traceroute a remote host.[3]
Enterprise,T1053,Scheduled Task/Job,Remsec schedules the execution one of its modules by creating a new scheduler task.[3]
Enterprise,T1518,Software Discovery: Security Software Discovery,Remsec has a plugin to detect active drivers of some security products.[3]
Enterprise,T1082,System Information Discovery,"Remsec can obtain the OS version information, computer name, processor architecture, machine role, and OS edition.[3]"
Enterprise,T1016,System Network Configuration Discovery,"Remsec can obtain information about network configuration, including the routing table, ARP cache, and DNS cache.[3]"
Enterprise,T1049,System Network Connections Discovery,Remsec can obtain a list of active connections and open ports.[3]
Enterprise,T1033,System Owner/User Discovery,Remsec can obtain information about the current user.[3]
Enterprise,T1087,Account Discovery: Domain Account,Cobalt Strike can determine if the user on an infected machine is in the admin or domain admin group.[4]
Enterprise,T1071,Application Layer Protocol,Cobalt Strike can conduct peer-to-peer communication over Windows named pipes encapsulated in the SMB protocol. All protocols use their standard assigned ports.[1][5]
Enterprise,T1071,Web Protocols,Cobalt Strike can use a custom command and control protocol that can be encapsulated in HTTP or HTTPS. All protocols use their standard assigned ports.[1][5][2][6]
Enterprise,T1071,DNS,Cobalt Strike can use a custom command and control protocol that can be encapsulated in DNS. All protocols use their standard assigned ports.[1][5][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Cobalt Strike can execute a payload on a remote host with PowerShell. This technique does not write any data to disk.[1][4] Cobalt Strike can also use PowerSploit and other scripting frameworks to perform execution.[8][3][5][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Cobalt Strike uses a command-line interface to interact with systems.[8][5][2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Cobalt Strike can use VBA to perform execution.[8][3][5]
Enterprise,T1059,Command and Scripting Interpreter: Python,Cobalt Strike can use Python to perform execution.[8][3][5][2]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,The Cobalt Strike System Profiler can use JavaScript to perform reconnaissance actions.[5]
Enterprise,T1543,Create or Modify System Process: Windows Service,Cobalt Strike can install a new service.[8]
Enterprise,T1132,Data Encoding: Standard Encoding,"Cobalt Strike can use Base64, URL-safe Base64, or NetBIOS encoding in its C2 traffic.[2]"
Enterprise,T1005,Data from Local System,Cobalt Strike can collect data from a local system.[8][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Cobalt Strike can deobfuscate shellcode using a rolling XOR and decrypt metadata from Beacon sessions.[5][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Cobalt Strike has the ability to use AES-256 symmetric encryption in CBC mode with HMAC-SHA-256 to encrypt task commands and XOR to encrypt shell code and configuration data.[5]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Cobalt Strike can use RSA asymmetric encryption with PKCS1 padding to encrypt data sent to the C2 server.[5]
Enterprise,T1083,File and Directory Discovery,Cobalt Strike can explore files on a compromised system.[2]
Enterprise,T1564,Hide Artifacts: Process Argument Spoofing,Cobalt Strike can use spoof arguments in spawned processes that execute beacon commands.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Cobalt Strike has the ability to use Smart Applet attacks to disable the Java SecurityManager sandbox.[5][2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Cobalt Strike can timestomp any files or payloads placed on a target machine to help them blend in.[1][2]
Enterprise,T1105,Ingress Tool Transfer,Cobalt Strike can deliver additional payloads to victim machines.[5][2]
Enterprise,T1056,Input Capture: Keylogging,Cobalt Strike can track key presses with a keylogger module.[1][9][2]
Enterprise,T1112,Modify Registry,Cobalt Strike can modify Registry values within HKEY_CURRENT_USER\Software\Microsoft\Office\\Excel\Security\AccessVBOM\ to enable the execution of additional code.[5]
Enterprise,T1106,Native API,Cobalt Strike's Beacon payload is capable of running shell commands without cmd.exe and PowerShell commands without powershell.exe[1][5][2]
Enterprise,T1027,Obfuscated Files or Information,Cobalt Strike can hash functions to obfuscate calls to the Windows API and use a public/private key pair to encrypt Beacon session metadata.[5][2]
Enterprise,T1027,Indicator Removal from Tools,Cobalt Strike includes a capability to modify the Beacon payload to eliminate known signatures or unpacking methods.[1][2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Cobalt Strike can spawn a job to inject into LSASS memory and dump password hashes.[2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Cobalt Strike can recover hashed passwords.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Cobalt Strike can use net localgroup to list local groups on a system.[2]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Cobalt Strike can identify targets by querying account groups on a domain contoller.[2]
Enterprise,T1057,Process Discovery,Cobalt Strike's Beacon payload can collect information on process details.[1][5][2]
Enterprise,T1055,Process Injection,Cobalt Strike can inject a variety of payloads into processes dynamically chosen by the adversary.[1][2]
Enterprise,T1055,Dynamic-link Library Injection,Cobalt Strike has the ability to load DLLs via reflective injection.[5][2]
Enterprise,T1055,Process Hollowing,Cobalt Strike can use process hollowing for execution.[8][2]
Enterprise,T1090,Proxy: Internal Proxy,"Cobalt Strike can be configured to have commands relayed over a peer-to-peer network of infected hosts. This can be used to limit the number of egress points, or provide access to a host without direct internet access.[1][2]"
Enterprise,T1090,Proxy: Domain Fronting,Cobalt Strike has the ability to accept a value for HTTP Host Header to enable domain fronting.[2]
Enterprise,T1012,Query Registry,Cobalt Strike can query HKEY_CURRENT_USER\Software\Microsoft\Office\\Excel\Security\AccessVBOM\ to determine if the security setting for restricting default programmatic access is enabled.[5][2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Cobalt Strike can start a VNC-based remote desktop server and tunnel the connection through the already established C2 channel.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Cobalt Strike can use Window admin shares (C$ and ADMIN$) for lateral movement.[8]
Enterprise,T1021,Remote Services: Distributed Component Object Model,Cobalt Strike can deliver Beacon payloads for lateral movement by leveraging remote COM execution.[10]
Enterprise,T1021,Remote Services: SSH,Cobalt Strike can SSH to a remote service.[8][2]
Enterprise,T1021,Remote Services: Windows Remote Management,Cobalt Strike can use WinRM to execute a payload on a remote host.[1][2]
Enterprise,T1018,Remote System Discovery,Cobalt Strike uses the native Windows Network Enumeration APIs to interrogate and discover targets in a Windows Active Directory network.[1][5][2]
Enterprise,T1113,Screen Capture,Cobalt Strike's Beacon payload is capable of capturing screenshots.[1][9][2]
Enterprise,T1518,Software Discovery,The Cobalt Strike System Profiler can discover applications through the browser and identify the version of Java the target has.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Cobalt Strike can use self signed Java applets to execute signed applet attacks.[5][2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Cobalt Strike can use rundll32.exe to load DLL from the command line.[2]
Enterprise,T1016,System Network Configuration Discovery,Cobalt Strike can determine the NetBios name and the IP addresses of targets machines including domain controllers.[4][2]
Enterprise,T1049,System Network Connections Discovery,Cobalt Strike can produce a sessions report from compromised hosts.[5]
Enterprise,T1569,System Services: Service Execution,Cobalt Strike can use PsExec to execute a payload on a remote host. It can also use Service Control Manager to start new services.[1][8][2]
Enterprise,T1078,Valid Accounts: Domain Accounts,Cobalt Strike can use known credentials to run commands and spawn processes as a domain user account.[1][3][2]
Enterprise,T1078,Valid Accounts: Local Accounts,Cobalt Strike can use known credentials to run commands and spawn processes as a local user account.[1][3]
Enterprise,T1047,Windows Management Instrumentation,Cobalt Strike can use WMI to deliver a payload to a remote host.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Donut can use HTTP to download previously staged shellcode payloads.[1]
Enterprise,T1059,Command and Scripting Interpreter,Donut can generate shellcode outputs that execute via Ruby.[1]
Enterprise,T1059,PowerShell,Donut can generate shellcode outputs that execute via PowerShell.[1]
Enterprise,T1059,Visual Basic,Donut can generate shellcode outputs that execute via VBScript.[1]
Enterprise,T1059,Python,Donut can generate shellcode outputs that execute via Python.[1]
Enterprise,T1059,JavaScript,Donut can generate shellcode outputs that execute via JavaScript or JScript.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Donut can patch Antimalware Scan Interface (AMSI), Windows Lockdown Policy (WLDP), as well as exit-related Native API functions to avoid process termination.[1]"
Enterprise,T1070,Indicator Removal on Host,Donut can erase file references to payloads in-memory after being reflectively loaded and executed.[1]
Enterprise,T1105,Ingress Tool Transfer,Donut can download and execute previously staged shellcode payloads.[1]
Enterprise,T1106,Native API,Donut code modules use various API functions to load and inject code.[1]
Enterprise,T1027,Obfuscated Files or Information,"Donut can generate encrypted, compressed/encoded, or otherwise obfuscated code modules.[1]"
Enterprise,T1027,Software Packing,Donut can generate packed code modules.[1]
Enterprise,T1057,Process Discovery,Donut includes subprojects that enumerate and identify information about Process Injection candidates.[1]
Enterprise,T1055,Process Injection,Donut includes a subproject DonutTest to inject shellcode into a target process.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,CARROTBALL has the ability to use FTP in C2 communications.[1]
Enterprise,T1105,Ingress Tool Transfer,CARROTBALL has the ability to download and install a remote payload.[1]
Enterprise,T1027,Obfuscated Files or Information,CARROTBALL has used a custom base64 alphabet to decode files.[1]
Enterprise,T1204,User Execution: Malicious File,CARROTBALL has been executed through users being lured into opening malicious e-mail attachments.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,HDoor kills anti-virus found on the victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Explosive has used HTTP for communication.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Explosive has encrypted communications with the RC4 method.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Explosive has commonly set file and path attributes to hidden.[1]
Enterprise,T1105,Ingress Tool Transfer,Explosive has a function to download a file to the infected system.[1]
Enterprise,T1056,Input Capture: Keylogging,Explosive has leveraged its keylogging capabilities to gain access to administrator accounts on target servers.[1][2]
Enterprise,T1112,Modify Registry,Explosive has a function to write itself to Registry values.[1]
Enterprise,T1106,Native API,Explosive has a function to call the OpenClipboard wrapper.[1]
Enterprise,T1082,System Information Discovery,Explosive has collected the computer name from the infected host.[1]
Enterprise,T1016,System Network Configuration Discovery,Explosive has collected the MAC address from the victim's machine.[1]
Enterprise,T1033,System Owner/User Discovery,Explosive has collected the username from the infected host.[1]
Enterprise,T1057,Process Discovery,Tasklist can be used to discover processes running on a system.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Tasklist can be used to enumerate security software currently running on a system by process name of known products.[1]
Enterprise,T1087,Account Discovery: Local Account,GeminiDuke collects information on local user accounts from the victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GeminiDuke uses HTTP and HTTPS for command and control.[1]
Enterprise,T1083,File and Directory Discovery,"GeminiDuke collects information from the victim, including installed drivers, programs previously executed by users, programs and services configured to automatically run at startup, files and folders present in any user's home folder, files and folders present in any user's My Documents, programs installed to the Program Files folder, and recently accessed files, folders, and programs.[1]"
Enterprise,T1057,Process Discovery,GeminiDuke collects information on running processes and environment variables from the victim.[1]
Enterprise,T1016,System Network Configuration Discovery,GeminiDuke collects information on network settings and Internet proxy settings from the victim.[1]
Enterprise,T1053,Scheduled Task/Job: Cron,Janicab used a cron job for persistence on Mac devices.[1]
Enterprise,T1113,Screen Capture,Janicab captured screenshots and sent them out to a C2 server.[2][1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Janicab used a valid AppleDeveloperID to sign the code to get past security restrictions.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Socksbot can write and execute PowerShell scripts.[1]
Enterprise,T1057,Process Discovery,Socksbot can list all running processes.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Socksbot creates a suspended svchost process and injects its DLL into it.[1]
Enterprise,T1090,Proxy,Socksbot can start SOCKS proxy threads.[1]
Enterprise,T1113,Screen Capture,Socksbot can take screenshots.[1]
Enterprise,T1071,Application Layer Protocol,Clambling has the ability to use Telnet for communication.[1]
Enterprise,T1071,Web Protocols,Clambling has the ability to communicate over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Clambling can establish persistence by adding a Registry run key.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,The Clambling dropper can use PowerShell to download the malware.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Clambling can use cmd.exe for command execution.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Clambling can register itself as a system service to gain persistence.[2]
Enterprise,T1005,Data from Local System,Clambling can collect information from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Clambling can deobfuscate its payload prior to execution.[1][2]
Enterprise,T1083,File and Directory Discovery,Clambling can browse directories on a compromised host.[1][2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Clambling has the ability to set its file attributes to hidden.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Clambling can store a file named mpsvc.dll, which opens a malicious mpsvc.mui file, in the same folder as the legitimate Microsoft executable MsMpEng.exe to gain execution.[1][2]"
Enterprise,T1056,Input Capture: Keylogging,Clambling can capture keystrokes on a compromised host.[1][2]
Enterprise,T1112,Modify Registry,Clambling can set and delete Registry keys.[1]
Enterprise,T1027,Obfuscated Files or Information,The Clambling executable has been obfuscated when dropped on a compromised host.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Clambling has been delivered to victim's machines through malicious e-mail attachments.[1]
Enterprise,T1057,Process Discovery,Clambling can enumerate processes on a targeted system.[1]
Enterprise,T1055,Process Injection,Clambling can inject into the svchost.exe process for execution.[1]
Enterprise,T1055,Process Hollowing,Clambling can execute binaries through process hollowing.[1]
Enterprise,T1012,Query Registry,"Clambling has the ability to enumerate Registry keys, including KEY_CURRENT_USER\Software\Bitcoin\Bitcoin-Qt\strDataDir to search for a bitcoin wallet.[1][2]"
Enterprise,T1113,Screen Capture,Clambling has the ability to capture screenshots.[1]
Enterprise,T1082,System Information Discovery,"Clambling can discover the hostname, computer name, and Windows version of a targeted machine.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,Clambling can enumerate the IP address of a compromised machine.[1][2]
Enterprise,T1033,System Owner/User Discovery,Clambling can identify the username on a compromised host.[1][2]
Enterprise,T1569,System Services: Service Execution,Clambling can create and start services on a compromised host.[1]
Enterprise,T1124,System Time Discovery,Clambling can determine the current time.[1]
Enterprise,T1204,User Execution: Malicious File,Clambling has gained execution through luring victims into opening malicious files.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Clambling can wait 30 minutes before initiating contact with C2.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,"Clambling can use Dropbox to download malicious payloads, send commands, and receive information.[1][2]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Rover persists by creating a Registry entry in HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\.[1]
Enterprise,T1005,Data from Local System,Rover searches for files on local drives based on a predefined list of file extensions.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Rover copies files from removable drives to C:\system.[1]
Enterprise,T1083,File and Directory Discovery,Rover automatically searches for files on local drives based on a predefined list of file extensions.[1]
Enterprise,T1056,Input Capture: Keylogging,Rover has keylogging functionality.[1]
Enterprise,T1112,Modify Registry,Rover has functionality to remove Registry Run key persistence as a cleanup procedure.[1]
Enterprise,T1113,Screen Capture,Rover takes screenshots of the compromised system's desktop and saves them to C:\system\screenshot.bmp for exfiltration every 60 minutes.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PowerDuke achieves persistence by using various Registry Run keys.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PowerDuke runs cmd.exe /c and sends the output to its C2.[1]
Enterprise,T1083,File and Directory Discovery,"PowerDuke has commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives, drive type, and free space.[1]"
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,PowerDuke hides many of its backdoor payloads in an alternate data stream (ADS).[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PowerDuke has a command to write random data across a file and delete it.[1]
Enterprise,T1105,Ingress Tool Transfer,PowerDuke has a command to download a file.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,"PowerDuke uses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA).[1]"
Enterprise,T1057,Process Discovery,PowerDuke has a command to list the victim's processes.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,PowerDuke uses rundll32.exe to load.[1]
Enterprise,T1082,System Information Discovery,"PowerDuke has commands to get information about the victim's name, build, version, serial number, and memory usage.[1]"
Enterprise,T1016,System Network Configuration Discovery,PowerDuke has a command to get the victim's domain and NetBIOS name.[1]
Enterprise,T1033,System Owner/User Discovery,PowerDuke has commands to get the current user's name and SID.[1]
Enterprise,T1124,System Time Discovery,"PowerDuke has commands to get the time the machine was built, the time, and the time zone.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PowerDuke achieves persistence by using various Registry Run keys.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PowerDuke runs cmd.exe /c and sends the output to its C2.[1]
Enterprise,T1083,File and Directory Discovery,"PowerDuke has commands to get the current directory name as well as the size of a file. It also has commands to obtain information about logical drives, drive type, and free space.[1]"
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,PowerDuke hides many of its backdoor payloads in an alternate data stream (ADS).[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PowerDuke has a command to write random data across a file and delete it.[1]
Enterprise,T1105,Ingress Tool Transfer,PowerDuke has a command to download a file.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,"PowerDuke uses steganography to hide backdoors in PNG files, which are also encrypted using the Tiny Encryption Algorithm (TEA).[1]"
Enterprise,T1057,Process Discovery,PowerDuke has a command to list the victim's processes.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,PowerDuke uses rundll32.exe to load.[1]
Enterprise,T1082,System Information Discovery,"PowerDuke has commands to get information about the victim's name, build, version, serial number, and memory usage.[1]"
Enterprise,T1016,System Network Configuration Discovery,PowerDuke has a command to get the victim's domain and NetBIOS name.[1]
Enterprise,T1033,System Owner/User Discovery,PowerDuke has commands to get the current user's name and SID.[1]
Enterprise,T1124,System Time Discovery,"PowerDuke has commands to get the time the machine was built, the time, and the time zone.[1]"
Enterprise,T1087,Account Discovery: Local Account,OSInfo enumerates local and domain users[1]
Enterprise,T1087,Account Discovery: Domain Account,OSInfo enumerates local and domain users[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,OSInfo has enumerated the local administrators group.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,OSInfo specifically looks for Domain Admins and power users within the domain.[1]
Enterprise,T1012,Query Registry,OSInfo queries the registry to look for information about Terminal Services.[1]
Enterprise,T1018,Remote System Discovery,OSInfo performs a connection test to discover remote systems in the network[1]
Enterprise,T1082,System Information Discovery,OSInfo discovers information about the infected machine.[1]
Enterprise,T1016,System Network Configuration Discovery,OSInfo discovers the current domain information.[1]
Enterprise,T1049,System Network Connections Discovery,OSInfo enumerates the current network connections similar to net use .[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FELIXROOT uses HTTP and HTTPS to communicate with the C2 server.[1][2]
Enterprise,T1560,Archive Collected Data,FELIXROOT encrypts collected data with AES and Base64 and then sends it to the C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FELIXROOT adds a shortcut file to the startup folder for persistence.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,FELIXROOT creates a .LNK file for persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"FELIXROOT executes batch scripts on the victim’s machine, and can launch a reverse shell for command execution.[1][2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,FELIXROOT deletes the .LNK file from the startup directory as well as the dropper components.[1]
Enterprise,T1105,Ingress Tool Transfer,FELIXROOT downloads and uploads files to and from the victim’s machine.[1][2]
Enterprise,T1112,Modify Registry,FELIXROOT deletes the Registry key HKCU\Software\Classes\Applications\rundll32.exe\shell\open.[1]
Enterprise,T1027,Obfuscated Files or Information,FELIXROOT encrypts strings in the backdoor using a custom XOR algorithm.[1][2]
Enterprise,T1057,Process Discovery,FELIXROOT collects a list of running processes.[2]
Enterprise,T1012,Query Registry,FELIXROOT queries the Registry for specific keys for potential privilege escalation and proxy information. FELIXROOT has also used WMI to query the Windows Registry.[1][2]
Enterprise,T1518,Software Discovery: Security Software Discovery,FELIXROOT checks for installed security software like antivirus and firewall.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,FELIXROOT uses Rundll32 for executing the dropper program.[1][2]
Enterprise,T1082,System Information Discovery,"FELIXROOT collects the victim’s computer name, processor architecture, OS version, volume serial number, and system type.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,FELIXROOT collects information about the network including the IP address and DHCP server.[2]
Enterprise,T1033,System Owner/User Discovery,FELIXROOT collects the username from the victim’s machine.[1][2]
Enterprise,T1124,System Time Discovery,FELIXROOT gathers the time zone information from the victim’s machine.[2]
Enterprise,T1047,Windows Management Instrumentation,FELIXROOT uses WMI to query the Windows Registry.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an ""Office Start,"" ""Yahoo Talk,"" ""MSN Gaming Z0ne,"" or ""MSN Talk"" shortcut.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,"To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an ""Office Start,"" ""Yahoo Talk,"" ""MSN Gaming Z0ne,"" or ""MSN Talk"" shortcut.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,SslMM identifies and kills anti-malware processes.[1]
Enterprise,T1056,Input Capture: Keylogging,SslMM creates a new thread implementing a keylogging facility using Windows Keyboard Accelerators.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"To establish persistence, SslMM identifies the Start Menu Startup directory and drops a link to its own executable disguised as an ""Office Start,"" ""Yahoo Talk,"" ""MSN Gaming Z0ne,"" or ""MSN Talk"" shortcut.[1]"
Enterprise,T1082,System Information Discovery,"SslMM sends information to its hard-coded C2, including OS version, service pack information, processor speed, system name, and OS install date.[1]"
Enterprise,T1033,System Owner/User Discovery,SslMM sends the logged-on username to its hard-coded C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,"FLASHFLOOD employs the same encoding scheme as SPACESHIP for data it stages. Data is compressed with zlib, and bytes are rotated four times before being XOR'ed with 0x23.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,FLASHFLOOD achieves persistence by making an entry in the Registry's Run key.[1]
Enterprise,T1005,Data from Local System,"FLASHFLOOD searches for interesting files (either a default or customized set of file extensions) on the local system. FLASHFLOOD will scan the My Recent Documents, Desktop, Temporary Internet Files, and TEMP directories. FLASHFLOOD also collects information stored in the Windows Address Book.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,"FLASHFLOOD stages data it copies from the local system or removable drives in the ""%WINDIR%\$NtUninstallKB885884$\"" directory.[1]"
Enterprise,T1083,File and Directory Discovery,FLASHFLOOD searches for interesting files (either a default or customized set of file extensions) on the local system and removable media.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,FruitFly persists via a Launch Agent.[1]
Enterprise,T1083,File and Directory Discovery,FruitFly looks for specific files and file types.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"FruitFly saves itself with a leading ""."" to make it a hidden file.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,FruitFly will delete files on the system.[1]
Enterprise,T1027,Obfuscated Files or Information,FruitFly executes and stores obfuscated Perl scripts.[1]
Enterprise,T1057,Process Discovery,FruitFly has the ability to list processes on the system.[1]
Enterprise,T1113,Screen Capture,FruitFly takes screenshots of the user's desktop.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,QakBot has the ability to use HTTP and HTTPS in communication with C2 servers.[5][6][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,QakBot can maintain persistence by creating an auto-run Registry key.[5][6][1][7]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,QakBot can use PowerShell to download and execute payloads.[7]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,QakBot can use cmd.exe to launch itself and to execute multiple C2 commands.[6][4][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,QakBot can use VBS to download and execute malicious files.[5][9][6][1][8][7]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,The QakBot web inject module can inject Java Script into web banking pages visited by the victim.[3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,QakBot has collected usernames and passwords from Firefox and Chrome.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,QakBot can Base64 encode system information sent to C2.[6][3]
Enterprise,T1005,Data from Local System,"QakBot can use a variety of commands, including esentutl.exe to steal sensitive data from Internet Explorer and Microsoft Edge, to acquire information that is subsequently exfiltrated.[2][3]"
Enterprise,T1074,Data Staged: Local Data Staging,QakBot has stored stolen emails and other data into new folders prior to exfiltration.[9]
Enterprise,T1140,Deobfuscate/Decode Files or Information,QakBot can deobfuscate and re-assemble code strings for execution.[8][4][3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,QakBot can RC4 encrypt strings in C2 communication.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,"QakBot can send stolen information to C2 nodes including passwords, accounts, and emails.[3]"
Enterprise,T1083,File and Directory Discovery,QakBot can identify whether it has been run previously on a host by checking for a specified folder.[4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,QakBot has the ability to modify the Registry to add its binaries to the Windows Defender exclusion list.[7]
Enterprise,T1070,Indicator Removal on Host: File Deletion,QakBot can delete folders and files including overwriting its executable with legitimate programs.[9][6][4][7]
Enterprise,T1105,Ingress Tool Transfer,QakBot has the ability to download additional components and malware.[5][6][1][8][3][7]
Enterprise,T1056,Input Capture: Keylogging,QakBot can capture keystrokes on a compromised host.[9][1][3]
Enterprise,T1036,Masquerading,The QakBot payload has been disguised as a PNG file.[7]
Enterprise,T1112,Modify Registry,QakBot can store its configuration information in a randomly named subkey under HKCU\Software\Microsoft.[2][7]
Enterprise,T1106,Native API,QakBot can use GetProcAddress to help delete malicious strings from memory.[4]
Enterprise,T1027,Obfuscated Files or Information,QakBot can use obfuscated and encoded scripts; it has also hidden code within Excel spreadsheets by turning the font color to white and splitting it across multiple cells.[8]
Enterprise,T1027,Binary Padding,QakBot can use large file sizes to evade detection.[5][7]
Enterprise,T1027,Software Packing,QakBot can encrypt and pack malicious payloads.[8]
Enterprise,T1027,Indicator Removal from Tools,QakBot can make small changes to itself in order to change its checksum and hash value.[6][8]
Enterprise,T1069,Permission Groups Discovery: Local Groups,QakBot can use net localgroup to enable discovery of local groups.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,QakBot has spread through emails with malicious attachments.[5][9][1][8][4][3][7]
Enterprise,T1566,Phishing: Spearphishing Link,QakBot has spread through emails with malicious links.[5][9][1][4][3][7]
Enterprise,T1057,Process Discovery,QakBot has the ability to check running processes.[4]
Enterprise,T1055,Process Injection,"QakBot can inject itself into processes including explore.exe, Iexplore.exe, and Mobsync.exe.[5][9][1][3]"
Enterprise,T1055,Process Hollowing,QakBot can use process hollowing to execute its main payload.[4]
Enterprise,T1090,Proxy: External Proxy,QakBot has a module that can proxy C2 communications.[3]
Enterprise,T1018,Remote System Discovery,QakBot can identify remote systems through the net view command.[6][3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,QakBot has the ability to create scheduled tasks for persistence.[5][9][6][1][2][8][3][7]
Enterprise,T1518,Software Discovery,QakBot can enumerate a list of installed programs.[7]
Enterprise,T1518,Security Software Discovery,QakBot can identify the installed antivirus product on a targeted system.[6][4][4][3]
Enterprise,T1553,Subvert Trust Controls: Code Signing,QakBot can use signed loaders to evade detection.[4]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,QakBot can use MSIExec to spawn multiple cmd.exe processes.[6]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,QakBot can use Regsvr32 to execute malicious DLLs.[2][8][4]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,QakBot can use Rundll32.exe to enable C2 communication.[6][2][8][4]
Enterprise,T1082,System Information Discovery,QakBot can collect system information including the OS version and domain on a compromised host.[6][4][7]
Enterprise,T1016,System Network Configuration Discovery,"QakBot can use net config workstation, arp -a, and ipconfig /all to gather network configuration information.[6][3][7]"
Enterprise,T1016,Internet Connection Discovery,QakBot can measure the download speed on a targeted host.[3]
Enterprise,T1049,System Network Connections Discovery,QakBot can use netstat to enumerate current network connections.[3]
Enterprise,T1033,System Owner/User Discovery,QakBot can identify the user name on a compromised system.[3]
Enterprise,T1124,System Time Discovery,QakBot can identify the system time on a targeted host.[3]
Enterprise,T1204,User Execution: Malicious Link,QakBot has gained execution through users opening malicious links.[5][9][1][4][3][7]
Enterprise,T1204,User Execution: Malicious File,QakBot has gained execution through users opening malicious attachments.[5][9][6][1][8][4][3][7]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,QakBot can check the compromised host for the presence of multiple executables associated with analysis tools and halt execution if any are found.[5][4]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,The QakBot dropper can delay dropping the payload to evade detection.[8][3]
Enterprise,T1047,Windows Management Instrumentation,QakBot can execute WMI queries to gather information.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Conficker adds Registry Run keys to establish persistence.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Conficker copies itself into the %systemroot%\system32 directory and registers as a service.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Conficker terminates various services related to system security and Windows.[1]
Enterprise,T1105,Ingress Tool Transfer,Conficker downloads an HTTP server to the infected machine.[1]
Enterprise,T1112,Modify Registry,Conficker adds keys to the Registry at HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Services and various other Registry locations.[1][3]
Enterprise,T1027,Obfuscated Files or Information,Conficker has obfuscated its code to prevent its removal from host machines.[3]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Conficker variants spread through NetBIOS share propagation.[1]
Enterprise,T1124,System Time Discovery,Conficker uses the current UTC victim system date for domain generation and connects to time servers to determine the current date.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ChChes communicates to its C2 server over HTTP and embeds data within the Cookie HTTP header.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ChChes establishes persistence by adding a Registry Run key.[3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,ChChes steals credentials stored inside Internet Explorer.[3]
Enterprise,T1132,Data Encoding: Standard Encoding,ChChes can encode C2 data with a custom technique that utilizes Base64.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,ChChes can encrypt C2 traffic with AES or RC4.[1][2]
Enterprise,T1083,File and Directory Discovery,ChChes collects the victim's %TEMP% directory path and version of Internet Explorer.[4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,ChChes can alter the victim's proxy configuration.[3]
Enterprise,T1105,Ingress Tool Transfer,"ChChes is capable of downloading files, including additional modules.[1][2][4]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,ChChes copies itself to an .exe file with a filename that is likely intended to imitate Norton Antivirus but has several letters reversed (e.g. notron.exe).[3]
Enterprise,T1057,Process Discovery,ChChes collects its process identifier (PID) on the victim.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,ChChes samples were digitally signed with a certificate originally used by Hacking Team that was later leaked and subsequently revoked.[1][2][3]
Enterprise,T1082,System Information Discovery,"ChChes collects the victim hostname, window resolution, and Microsoft Windows version.[1][3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Gelsemium can use HTTP/S in C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Gelsemium has the ability to use DNS in communication with C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Gelsemium can set persistence with a Registry run key.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Print Processors,Gelsemium can drop itself in C:\Windows\System32\spool\prtprocs\x64\winprint.dll to be loaded automatically by the spoolsv Windows service.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Gelsemium can use a batch script to delete itself.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Gelsemium can drop itself in C:\Windows\System32\spool\prtprocs\x64\winprint.dll as an alternative Print Processor to be loaded automatically when the spoolsv Windows service starts.[1]
Enterprise,T1005,Data from Local System,Gelsemium can collect data from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Gelsemium can decompress and decrypt DLLs and shellcode.[1]
Enterprise,T1083,File and Directory Discovery,"Gelsemium can retrieve data from specific Windows directories, as well as open random files as part of Virtualization/Sandbox Evasion.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Gelsemium can delete its dropper component from the targeted system.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Gelsemium has the ability to perform timestomping of files on targeted systems.[1]
Enterprise,T1105,Ingress Tool Transfer,Gelsemium can download additional plug-ins to a compromised host.[1]
Enterprise,T1036,Masquerading: Invalid Code Signature,Gelsemium has used unverified signatures on malicious DLLs.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Gelsemium has named malicious binaries serv.exe, winprint.dll, and chrome_elf.dll and has set its persistence in the Registry with the key value Chrome Update to appear legitimate.[1]"
Enterprise,T1112,Modify Registry,Gelsemium has the ability to store its components in the Registry.[1]
Enterprise,T1106,Native API,Gelsemium has the ability to use various Windows API functions to perform tasks.[1]
Enterprise,T1027,Obfuscated Files or Information,Gelsemium has the ability to compress its components.[1]
Enterprise,T1027,Binary Padding,Gelsemium can use junk code to hide functions and evade detection.[1]
Enterprise,T1057,Process Discovery,Gelsemium can enumerate running processes.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Gelsemium has the ability to inject DLLs into specific processes.[1]
Enterprise,T1012,Query Registry,Gelsemium can open random files and Registry keys to obscure malware behavior from sandbox analysis.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Gelsemium can check for the presence of specific security products.[1]
Enterprise,T1082,System Information Discovery,Gelsemium can determine the operating system and whether a targeted machine has a 32 or 64 bit architecture.[1]
Enterprise,T1033,System Owner/User Discovery,Gelsemium has the ability to distinguish between a standard user and an administrator on a compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion,Gelsemium can use junk code to generate random activity to obscure malware behavior.[1]
Enterprise,T1087,Account Discovery: Local Account,Agent Tesla can collect account information from the victim’s machine.[4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Agent Tesla has used HTTP for C2 communications.[4][5]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Agent Tesla has used SMTP for C2 communications.[4][5][2]
Enterprise,T1560,Archive Collected Data,Agent Tesla can encrypt data with 3DES before sending it over to a C2 server.[6]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Agent Tesla can add itself to the Registry as a startup program to establish persistence.[1][7]
Enterprise,T1555,Credentials from Password Stores,Agent Tesla has the ability to steal credentials from FTP clients and wireless profiles.[3]
Enterprise,T1555,Credentials from Web Browsers,Agent Tesla can gather credentials from a number of browsers.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Agent Tesla has the ability to decrypt strings encrypted with the Rijndael symmetric encryption algorithm.[3]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Agent Tesla has created hidden folders.[7]
Enterprise,T1564,Hide Artifacts: Hidden Window,Agent Tesla has used ProcessWindowStyle.Hidden to hide windows.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Agent Tesla has the capability to kill any running analysis processes and AV software.[5]
Enterprise,T1105,Ingress Tool Transfer,Agent Tesla can download additional files for execution on the victim’s machine.[6][4]
Enterprise,T1056,Input Capture: Keylogging,Agent Tesla can log keystrokes on the victim’s machine.[6][4][5][2][7]
Enterprise,T1112,Modify Registry,Agent Tesla can achieve persistence by modifying Registry key entries.[7]
Enterprise,T1027,Obfuscated Files or Information,Agent Tesla has had its code obfuscated in an apparent attempt to make analysis difficult.[1] Agent Tesla has used the Rijndael symmetric encryption algorithm to encrypt strings.[3]
Enterprise,T1566,Phishing: Spearphishing Attachment,The primary delivered mechaism for Agent Tesla is through email phishing messages.[2]
Enterprise,T1057,Process Discovery,Agent Tesla can list the current running processes on the system.[5]
Enterprise,T1055,Process Injection,"Agent Tesla can inject into known, vulnerable binaries on targeted hosts.[7]"
Enterprise,T1055,Process Hollowing,Agent Tesla has used process hollowing to create and manipulate processes through sections of unmapped memory by reallocating that space with its malicious code.[7]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Agent Tesla has achieved persistence via scheduled tasks.[7]
Enterprise,T1113,Screen Capture,Agent Tesla can capture screenshots of the victim’s desktop.[6][4][1][5][2]
Enterprise,T1218,System Binary Proxy Execution: Regsvcs/Regasm,Agent Tesla has dropped RegAsm.exe onto systems for performing malicious activity.[7]
Enterprise,T1082,System Information Discovery,"Agent Tesla can collect the system's computer name and also has the capability to collect information on the processor, memory, OS, and video card from the system.[1][5][3]"
Enterprise,T1016,System Network Configuration Discovery,Agent Tesla can collect the IP address of the victim machine and spawn instances of netsh.exe to enumerate wireless settings.[4][7]
Enterprise,T1033,System Owner/User Discovery,Agent Tesla can collect the username from the victim’s machine.[4][1][3]
Enterprise,T1124,System Time Discovery,Agent Tesla can collect the timestamp from the victim’s machine.[4]
Enterprise,T1204,User Execution: Malicious File,Agent Tesla has been executed through malicious e-mail attachments [2]
Enterprise,T1497,Virtualization/Sandbox Evasion,Agent Tesla has he ability to perform anti-sandboxing and anti-virtualization checks.[3]
Enterprise,T1047,Windows Management Instrumentation,Agent Tesla has used wmi queries to gather information from the system.[2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,gsecdump can dump Windows password hashes from the SAM.[1]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,gsecdump can dump LSA secrets.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,LiteDuke can use HTTP GET requests in C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,LiteDuke can create persistence by adding a shortcut in the CurrentVersion\Run Registry key.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,LiteDuke has the ability to decrypt and decode multiple layers of obfuscation.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,LiteDuke can securely delete files by first writing random data to the file.[1]
Enterprise,T1105,Ingress Tool Transfer,LiteDuke has the ability to download files.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,LiteDuke has been packed with multiple layers of encryption.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,LiteDuke has used image files to hide its loader component.[1]
Enterprise,T1012,Query Registry,LiteDuke can query the Registry to check for the presence of HKCU\Software\KasperskyLab.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,LiteDuke has the ability to check for the presence of Kaspersky security software.[1]
Enterprise,T1082,System Information Discovery,LiteDuke can enumerate the CPUID and BIOS version on a compromised system.[1]
Enterprise,T1016,System Network Configuration Discovery,LiteDuke has the ability to discover the proxy configuration of Firefox and/or Opera.[1]
Enterprise,T1033,System Owner/User Discovery,LiteDuke can enumerate the account name on a targeted system.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,LiteDuke can wait 30 seconds before executing additional code if security software is detected.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Olympic Destroyer contains a module that tries to obtain stored credentials from web browsers.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Olympic Destroyer will attempt to clear the System and Security event logs using wevtutil.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"Olympic Destroyer contains a module that tries to obtain credentials from LSASS, similar to Mimikatz. These credentials are used with PsExec and Windows Management Instrumentation to help the malware propagate itself across a network.[1]"
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Olympic Destroyer uses PsExec to interact with the ADMIN$ network share to execute commands on remote systems.[1][3]
Enterprise,T1018,Remote System Discovery,Olympic Destroyer uses Windows Management Instrumentation to enumerate all systems in the network.[1]
Enterprise,T1016,System Network Configuration Discovery,Olympic Destroyer uses API calls to enumerate the infected system's ARP table.[1]
Enterprise,T1569,System Services: Service Execution,Olympic Destroyer utilizes PsExec to help propagate itself across a network.[1]
Enterprise,T1047,Windows Management Instrumentation,Olympic Destroyer uses WMI to help propagate itself across a network.[1]
Enterprise,T1087,Account Discovery: Domain Account,POWRUNER may collect user account information by running net user /domain or a series of other commands on a victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,POWRUNER can use HTTP for C2 communications.[1][2]
Enterprise,T1071,Application Layer Protocol: DNS,POWRUNER can use DNS for C2 communications.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,POWRUNER is written in PowerShell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,POWRUNER can execute commands from its C2 server.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,POWRUNER can use base64 encoded C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,POWRUNER may enumerate user directories on a victim.[1]
Enterprise,T1105,Ingress Tool Transfer,POWRUNER can download or upload files from its C2 server.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,POWRUNER may collect local group information by running net localgroup administrators or a series of other commands on a victim.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,POWRUNER may collect domain group information by running net group /domain or a series of other commands on a victim.[1]
Enterprise,T1057,Process Discovery,POWRUNER may collect process information by running tasklist on a victim.[1]
Enterprise,T1012,Query Registry,POWRUNER may query the Registry by running reg query on a victim.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,POWRUNER persists through a scheduled task that executes it every minute.[1]
Enterprise,T1113,Screen Capture,POWRUNER can capture a screenshot from a victim.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,POWRUNER may collect information on the victim's anti-virus software.[1]
Enterprise,T1082,System Information Discovery,POWRUNER may collect information about the system by running hostname and systeminfo on a victim.[1]
Enterprise,T1016,System Network Configuration Discovery,POWRUNER may collect network configuration data by running ipconfig /all on a victim.[1]
Enterprise,T1049,System Network Connections Discovery,POWRUNER may collect active network connections by running netstat -an on a victim.[1]
Enterprise,T1033,System Owner/User Discovery,POWRUNER may collect information about the currently logged in user by running whoami on a victim.[1]
Enterprise,T1047,Windows Management Instrumentation,POWRUNER may use WMI when collecting information about a victim.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,CoinTicker executes a bash script to establish a reverse shell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,CoinTicker executes a bash script to establish a reverse shell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,CoinTicker executes a Python script to download its second stage.[1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,CoinTicker creates user launch agents named .espl.plist and com.apple.[random string].plist to establish persistence.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,CoinTicker decodes the initially-downloaded hidden encoded file using OpenSSL.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"CoinTicker downloads the following hidden files to evade detection and maintain persistence: /private/tmp/.info.enc, /private/tmp/.info.py, /private/tmp/.server.sh, ~/Library/LaunchAgents/.espl.plist, ~/Library/Containers/.[random string]/[random string].[1]"
Enterprise,T1105,Ingress Tool Transfer,CoinTicker executes a Python script to download its second stage.[1]
Enterprise,T1027,Obfuscated Files or Information,CoinTicker initially downloads a hidden encoded file.[1]
Enterprise,T1553,Subvert Trust Controls: Gatekeeper Bypass,"CoinTicker downloads the EggShell mach-o binary using curl, which does not set the quarantine flag.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Meteor can use PowerShell commands to disable the network adapters on a victim machines.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Meteor can run set.bat, update.bat, cache.bat, bcd.bat, msrun.bat, and similar scripts.[1]"
Enterprise,T1564,Hide Artifacts: Hidden Window,Meteor can hide its console window upon execution to decrease its visibility to a victim.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Meteor can attempt to uninstall Kaspersky Antivirus or remove the Kaspersky license; it can also add all files and folders related to the attack to the Windows Defender exclusion list.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,"Meteor can use Wevtutil to remove Security, System and Application Event Viewer logs.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Meteor will delete the folder containing malicious scripts if it detects the hostname as PIS-APP, PIS-MOB, WSUSPROXY, or PIS-DB.[1]"
Enterprise,T1105,Ingress Tool Transfer,Meteor has the ability to download additional files for execution on the victim's machine.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Meteor has been disguised as the Windows Power Efficiency Diagnostics report tool.[1]
Enterprise,T1106,Native API,Meteor can use WinAPI to remove a victim machine from an Active Directory domain.[1]
Enterprise,T1057,Process Discovery,"Meteor can check if a specific process is running, such as Kaspersky's avp.exe.[1]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Meteor execution begins from a scheduled task named Microsoft\Windows\Power Efficiency Diagnostics\AnalyzeAll and it creates a separate scheduled task called mstask to run the wiper only once at 23:55:00.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Meteor has the ability to search for Kaspersky Antivirus on a victim's machine.[1]
Enterprise,T1082,System Information Discovery,Meteor has the ability to discover the hostname of a compromised host.[1]
Enterprise,T1047,Windows Management Instrumentation,Meteor can use wmic.exe as part of its effort to delete shadow copies.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,iKitten will zip up the /Library/Keychains directory before exfiltrating it.[1]
Enterprise,T1555,Credentials from Password Stores: Keychain,iKitten collects the keychains on the system.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"iKitten saves itself with a leading ""."" so that it's hidden from users by default.[1]"
Enterprise,T1056,Input Capture: GUI Input Capture,iKitten prompts the user for their credentials.[1]
Enterprise,T1057,Process Discovery,iKitten lists the current processes running.[1]
Enterprise,T1016,System Network Configuration Discovery,iKitten will look for the current IP address.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Briba creates run key Registry entries pointing to malicious DLLs dropped to disk.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Briba installs a service pointing to a malicious DLL dropped to disk.[2]
Enterprise,T1105,Ingress Tool Transfer,Briba downloads files onto infected hosts.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Briba uses rundll32 within Registry Run Keys / Startup Folder entries to execute malicious DLLs.[2]
Enterprise,T1087,Account Discovery,ShimRatReporter listed all non-privileged and privileged accounts available on the machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ShimRatReporter communicated over HTTP with preconfigured C2 servers.[1]
Enterprise,T1560,Archive Collected Data,ShimRatReporter used LZ compression to compress initial reconnaissance reports before sending to the C2.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,ShimRatReporter sent generated reports to the C2 via HTTP POST requests.[1]
Enterprise,T1105,Ingress Tool Transfer,ShimRatReporter had the ability to download additional payloads.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"ShimRatReporter spoofed itself as AlphaZawgyl_font.exe, a specialized Unicode font.[1]"
Enterprise,T1106,Native API,ShimRatReporter used several Windows API functions to gather information from the infected system.[1]
Enterprise,T1027,Obfuscated Files or Information,ShimRatReporter encrypted gathered information with a combination of shifting and XOR using a static key.[1]
Enterprise,T1069,Permission Groups Discovery,ShimRatReporter gathered the local privileges for the infected host.[1]
Enterprise,T1057,Process Discovery,ShimRatReporter listed all running processes on the machine.[1]
Enterprise,T1518,Software Discovery,ShimRatReporter gathered a list of installed software on the infected host.[1]
Enterprise,T1082,System Information Discovery,ShimRatReporter gathered the operating system name and specific Windows version of an infected machine.[1]
Enterprise,T1016,System Network Configuration Discovery,"ShimRatReporter gathered the local proxy, domain, IP, routing tables, mac address, gateway, DNS servers, and DHCP status information from an infected host.[1]"
Enterprise,T1049,System Network Connections Discovery,ShimRatReporter used the Windows function GetExtendedUdpTable to detect connected UDP endpoints.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Get2 has the ability to use HTTP to send information collected from an infected host to C2.[1]
Enterprise,T1059,Command and Scripting Interpreter,Get2 has the ability to run executables with command-line arguments.[1]
Enterprise,T1057,Process Discovery,Get2 has the ability to identify running processes on an infected host.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Get2 has the ability to inject DLLs into processes.[1]
Enterprise,T1082,System Information Discovery,Get2 has the ability to identify the computer name and Windows version of an infected host.[1]
Enterprise,T1033,System Owner/User Discovery,Get2 has the ability to identify the current username of an infected host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Lokibot has used HTTP for C2 communications.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Lokibot has used PowerShell commands embedded inside batch scripts.[4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Lokibot has used cmd /c commands embedded within batch scripts.[4]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Lokibot has used VBS scripts and XLS macros for execution.[4]
Enterprise,T1555,Credentials from Password Stores,"Lokibot has stolen credentials from multiple applications and data sources including Windows OS credentials, email clients, FTP, and SFTP clients.[1]"
Enterprise,T1555,Credentials from Web Browsers,Lokibot has demonstrated the ability to steal credentials from multiple applications and data sources including Safari and the Chromium and Mozilla Firefox-based web browsers.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Lokibot has decoded and decrypted its stages multiple times using hard-coded keys to deliver the final payload, and has decoded its server response hex string using XOR.[4]"
Enterprise,T1041,Exfiltration Over C2 Channel,Lokibot has the ability to initiate contact with command and control (C2) to exfiltrate stolen data.[5]
Enterprise,T1083,File and Directory Discovery,Lokibot can search for specific files on an infected host.[4]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Lokibot has the ability to copy itself to a hidden file and directory.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Lokibot will delete its dropped files after bypassing UAC.[4]
Enterprise,T1105,Ingress Tool Transfer,Lokibot downloaded several staged items onto the victim's machine.[4]
Enterprise,T1056,Input Capture: Keylogging,Lokibot has the ability to capture input on the compromised host via keylogging.[5]
Enterprise,T1112,Modify Registry,Lokibot has modified the Registry as part of its UAC bypass process.[4]
Enterprise,T1106,Native API,"Lokibot has used LoadLibrary(), GetProcAddress() and CreateRemoteThread() API functions to execute its shellcode.[4]"
Enterprise,T1027,Obfuscated Files or Information,Lokibot has obfuscated strings with base64 encoding.[1]
Enterprise,T1027,Software Packing,Lokibot has used several packing methods for obfuscation.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Lokibot is delivered via a malicious XLS attachment contained within a spearhpishing email.[4]
Enterprise,T1055,Process Injection: Process Hollowing,Lokibot has used process hollowing to inject itself into legitimate Windows process.[1][4]
Enterprise,T1053,Scheduled Task/Job,"Lokibot's second stage DLL has set a timer using ""timeSetEvent"" to schedule its next execution.[4]"
Enterprise,T1053,Scheduled Task,Lokibot embedded the commands schtasks /Run /TN \Microsoft\Windows\DiskCleanup\SilentCleanup /I inside a batch script.[4]
Enterprise,T1082,System Information Discovery,Lokibot has the ability to discover the computer name and Windows product name/version.[5]
Enterprise,T1016,System Network Configuration Discovery,Lokibot has the ability to discover the domain name of the infected host.[5]
Enterprise,T1033,System Owner/User Discovery,Lokibot has the ability to discover the username on the infected host.[5]
Enterprise,T1204,User Execution: Malicious File,"Lokibot has tricked recipients into enabling malicious macros by getting victims to click ""enable content"" in email attachments.[6][4]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Lokibot has performed a time-based anti-debug check before downloading its third stage.[4]
Enterprise,T1055,Process Injection,HTRAN can inject into into running processes.[2]
Enterprise,T1090,Proxy,HTRAN can proxy TCP socket connections to obfuscate command and control infrastructure.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GoldFinder has used HTTP for C2.[1]
Enterprise,T1016,System Network Configuration Discovery: Internet Connection Discovery,GoldFinder performed HTTP GET requests to check internet connectivity and identify HTTP proxy servers and other redirectors that an HTTP request traveled through.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,AutoIt backdoor downloads a PowerShell script that decodes to a typical shellcode loader.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,AutoIt backdoor has sent a C2 response that was base64-encoded.[1]
Enterprise,T1083,File and Directory Discovery,"AutoIt backdoor is capable of identifying documents on the victim with the following extensions: .doc; .pdf, .csv, .ppt, .docx, .pst, .xls, .xlsx, .pptx, and .jpeg.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Bad Rabbit has masqueraded as a Flash Player installer through the executable file install_flash_player.exe.[2][1]
Enterprise,T1106,Native API,Bad Rabbit has used various Windows API calls.[2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Bad Rabbit has used Mimikatz to harvest credentials from the victim's machine.[2]
Enterprise,T1057,Process Discovery,Bad Rabbit can enumerate all running processes to compare hashes.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Bad Rabbit’s infpub.dat file creates a scheduled task to launch a malicious executable.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Bad Rabbit has used rundll32 to launch a malicious DLL as C:Windowsinfpub.dat.[1]
Enterprise,T1569,System Services: Service Execution,Bad Rabbit drops a file named infpub.datinto the Windows directory and is executed through SCManager and rundll.exe.
Enterprise,T1204,User Execution: Malicious File,Bad Rabbit has been executed through user installation of an executable disguised as a flash installer.[2][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,StreamEx has the ability to remotely execute commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,StreamEx establishes persistence by installing a new service pointing to its DLL and setting the service to auto-start.[1]
Enterprise,T1083,File and Directory Discovery,StreamEx has the ability to enumerate drive types.[1]
Enterprise,T1112,Modify Registry,StreamEx has the ability to modify the Registry.[1]
Enterprise,T1027,Obfuscated Files or Information,StreamEx obfuscates some commands by using statically programmed fragments of strings when starting a DLL. It also uses a one-byte xor against 0x91 to encode configuration data.[1]
Enterprise,T1057,Process Discovery,StreamEx has the ability to enumerate processes.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,StreamEx has the ability to scan for security tools such as firewalls and antivirus tools.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,StreamEx uses rundll32 to call an exported function.[1]
Enterprise,T1082,System Information Discovery,StreamEx has the ability to enumerate system information.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Waterbear has the ability to decrypt its RC4 encrypted payload for execution.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Waterbear has used DLL side loading to import and load a malicious DLL loader.[1]
Enterprise,T1562,Impair Defenses: Indicator Blocking,Waterbear can hook the ZwOpenProcess and GetExtendedTcpTable APIs called by the process of a security product to hide PIDs and TCP records from detection.[1]
Enterprise,T1105,Ingress Tool Transfer,Waterbear can receive and load executables from remote C2 servers.[1]
Enterprise,T1112,Modify Registry,Waterbear has deleted certain values from the Registry to load a malicious DLL.[1]
Enterprise,T1106,Native API,Waterbear can leverage API functions for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,Waterbear has used RC4 encrypted shellcode and encrypted functions.[1]
Enterprise,T1027,Indicator Removal from Tools,Waterbear can scramble functions not to be executed again with random values.[1]
Enterprise,T1057,Process Discovery,Waterbear can identify the process for a specific security product.[1]
Enterprise,T1055,Process Injection,Waterbear can inject decrypted shellcode into the LanmanServer service.[1]
Enterprise,T1055,Thread Execution Hijacking,Waterbear can use thread injection to inject shellcode into the process of security software.[1]
Enterprise,T1012,Query Registry,"Waterbear can query the Registry key ""HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\MSDTC\MTxOCI"" to see if the value OracleOcilib exists.[1]"
Enterprise,T1518,Software Discovery: Security Software Discovery,Waterbear can find the presence of a specific security software.[1]
Enterprise,T1049,System Network Connections Discovery,Waterbear can use API hooks on GetExtendedTcpTable to retrieve a table containing a list of TCP endpoints available to the application.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ADVSTORESHELL connects to port 80 of a C2 server using Wininet API. Data is exchanged via HTTP POSTs.[1]
Enterprise,T1560,Archive Collected Data,ADVSTORESHELL encrypts with the 3DES algorithm and a hardcoded key prior to exfiltration.[2]
Enterprise,T1560,Archive via Custom Method,ADVSTORESHELL compresses output data generated by command execution with a custom implementation of the Lempel–Ziv–Welch (LZW) algorithm.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,ADVSTORESHELL achieves persistence by adding itself to the HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run Registry key.[1][2][3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ADVSTORESHELL can create a remote shell and run a given command.[2][3]
Enterprise,T1132,Data Encoding: Standard Encoding,"C2 traffic from ADVSTORESHELL is encrypted, then encoded with Base64 encoding.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,ADVSTORESHELL stores output from command execution in a .dat file in the %TEMP% directory.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,A variant of ADVSTORESHELL encrypts some C2 with 3DES.[3]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,A variant of ADVSTORESHELL encrypts some C2 with RSA.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,ADVSTORESHELL exfiltrates data over the same channel used for C2.[2]
Enterprise,T1083,File and Directory Discovery,ADVSTORESHELL can list files and directories.[2][3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,ADVSTORESHELL can delete files and directories.[2]
Enterprise,T1056,Input Capture: Keylogging,ADVSTORESHELL can perform keylogging.[2][3]
Enterprise,T1112,Modify Registry,ADVSTORESHELL is capable of setting and deleting Registry values.[3]
Enterprise,T1106,Native API,ADVSTORESHELL is capable of starting a process using CreateProcess.[3]
Enterprise,T1027,Obfuscated Files or Information,"Most of the strings in ADVSTORESHELL are encrypted with an XOR-based algorithm; some strings are also encrypted with 3DES and reversed. API function names are also reversed, presumably to avoid detection in memory.[1][3]"
Enterprise,T1057,Process Discovery,ADVSTORESHELL can list running processes.[2]
Enterprise,T1012,Query Registry,ADVSTORESHELL can enumerate registry keys.[2][3]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,ADVSTORESHELL has used rundll32.exe in a Registry value to establish persistence.[3]
Enterprise,T1082,System Information Discovery,ADVSTORESHELL can run Systeminfo to gather information about the victim.[2][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Authentication Package,Flame can use Windows Authentication Packages for persistence.[3]
Enterprise,T1113,Screen Capture,Flame can take regular screenshots when certain applications are open that are sent to the command and control server.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Flame identifies security software such as antivirus through the Security module.[1][4]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Rundll32.exe is used as a way of executing Flame at the command-line.[3]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,CookieMiner has used a Unix shell script to run a series of commands targeting macOS.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,"CookieMiner has used python scripts on the user’s system, as well as the Python variant of the Empire agent, EmPyre.[1]"
Enterprise,T1543,Create or Modify System Process: Launch Agent,CookieMiner has installed multiple new Launch Agents in order to maintain persistence for cryptocurrency mining software.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,CookieMiner can steal saved usernames and passwords in Chrome as well as credit card credentials.[1]
Enterprise,T1005,Data from Local System,CookieMiner has retrieved iPhone text messages from iTunes phone backup files.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,CookieMiner has used Google Chrome's decryption and extraction operations.[1]
Enterprise,T1083,File and Directory Discovery,"CookieMiner has looked for files in the user's home directory with ""wallet"" in their name using find.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,"CookieMiner has checked for the presence of ""Little Snitch"", macOS network monitoring and application firewall software, stopping and exiting if it is found.[1]"
Enterprise,T1105,Ingress Tool Transfer,CookieMiner can download additional scripts from a web server.[1]
Enterprise,T1027,Obfuscated Files or Information,CookieMiner has used base64 encoding to obfuscate scripts on the system.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,"CookieMiner has checked for the presence of ""Little Snitch"", macOS network monitoring and application firewall software, stopping and exiting if it is found.[1]"
Enterprise,T1087,Account Discovery: Local Account,Comnie uses the net user command.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Comnie uses HTTP for C2 communication.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Comnie achieves persistence by adding a shortcut of itself to the startup path in the Registry.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Comnie establishes persistence via a .lnk file in the victim’s startup path.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Comnie executes BAT scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Comnie executes VBS scripts.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Comnie encrypts command and control communications with RC4.[1]
Enterprise,T1027,Obfuscated Files or Information,Comnie uses RC4 and Base64 to obfuscate strings.[1]
Enterprise,T1027,Binary Padding,Comnie appends a total of 64MB of garbage data to a file to deter any security products in place that may be scanning files on disk.[1]
Enterprise,T1057,Process Discovery,Comnie uses the tasklist to view running processes on the victim’s machine.[1]
Enterprise,T1018,Remote System Discovery,Comnie runs the net view command
Enterprise,T1518,Software Discovery: Security Software Discovery,Comnie attempts to detect several anti-virus products.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Comnie uses Rundll32 to load a malicious DLL.[1]
Enterprise,T1082,System Information Discovery,Comnie collects the hostname of the victim machine.[1]
Enterprise,T1016,System Network Configuration Discovery,Comnie uses ipconfig /all and route PRINT to identify network adapter and interface information.[1]
Enterprise,T1049,System Network Connections Discovery,Comnie executes the netstat -ano command.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,"Comnie uses blogs and third-party sites (GitHub, tumbler, and BlogSpot) to avoid DNS-based blocking of their communication to the command and control server.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,RTM has initiated connections to external domains using HTTPS.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"RTM tries to add a Registry Run key under the name ""Windows Update"" to establish persistence.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RTM uses the command line and rundll32.exe to execute.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,RTM encrypts C2 traffic with a custom RC4 variant.[1]
Enterprise,T1083,File and Directory Discovery,RTM can check for specific files and directories associated with virtualization and malware analysis.[2]
Enterprise,T1070,Indicator Removal on Host,RTM has the ability to remove Registry entries that it created during execution.[1]
Enterprise,T1070,File Deletion,RTM can delete all files created during its execution.[1][2]
Enterprise,T1105,Ingress Tool Transfer,RTM can download additional files.[1][2]
Enterprise,T1056,Input Capture: Keylogging,RTM can record keystrokes from both the keyboard and virtual keyboard.[1][2]
Enterprise,T1036,Masquerading,RTM has been delivered as archived Windows executable files masquerading as PDF documents.[2]
Enterprise,T1036,Masquerade Task or Service,"RTM has named the scheduled task it creates ""Windows Update"".[2]"
Enterprise,T1112,Modify Registry,RTM can delete all Registry entries created during its execution.[1]
Enterprise,T1106,Native API,RTM can use the FindNextUrlCacheEntryA and FindFirstUrlCacheEntryA functions to search for specific strings within browser history.[1]
Enterprise,T1027,Obfuscated Files or Information,"RTM strings, network data, configuration, and modules are encrypted with a modified RC4 algorithm. RTM has also been delivered to targets as various archive files including ZIP, 7-ZIP, and RAR.[1][2]"
Enterprise,T1566,Phishing: Spearphishing Attachment,RTM has been delivered via spearphishing attachments disguised as PDF documents.[2]
Enterprise,T1057,Process Discovery,RTM can obtain information about process integrity levels.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,RTM tries to add a scheduled task to establish persistence.[1][2]
Enterprise,T1113,Screen Capture,RTM can capture screenshots.[1][2]
Enterprise,T1518,Software Discovery,RTM can scan victim drives to look for specific banking software on the machine to determine next actions.[1]
Enterprise,T1518,Security Software Discovery,RTM can obtain information about security software on the victim.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,RTM samples have been signed with a code-signing certificates.[1]
Enterprise,T1553,Subvert Trust Controls: Install Root Certificate,RTM can add a certificate to the Windows store.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,RTM runs its core DLL file using rundll32.exe.[1][2]
Enterprise,T1082,System Information Discovery,"RTM can obtain the computer name, OS version, and default language identifier.[1]"
Enterprise,T1033,System Owner/User Discovery,RTM can obtain the victim username and permissions.[1]
Enterprise,T1124,System Time Discovery,RTM can obtain the victim time zone.[1]
Enterprise,T1204,User Execution: Malicious File,"RTM has relied on users opening malicious email attachments, decompressing the attached archive, and double-clicking the executable within.[2]"
Enterprise,T1497,Virtualization/Sandbox Evasion,RTM can detect if it is running within a sandbox or other virtualized analysis environment.[2]
Enterprise,T1102,Web Service: Dead Drop Resolver,RTM has used an RSS feed on Livejournal to update a list of encrypted C2 server names. RTM has also hidden Pony C2 server IP addresses within transactions on the Bitcoin and Namecoin blockchain.[1][3][2]
Enterprise,T1071,Application Layer Protocol,Siloscape connects to an IRC server for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Siloscape can run cmd through an IRC channel.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Siloscape has decrypted the password of the C2 server with a simple byte by byte XOR. Siloscape also writes both an archive of Tor and the unzip binary to disk from data embedded within the payload using Visual Studio’s Resource Manager.[1]
Enterprise,T1083,File and Directory Discovery,Siloscape searches for the Kubernetes config file and other related files using a regular expression.[1]
Enterprise,T1106,Native API,Siloscape makes various native API calls.[1]
Enterprise,T1027,Obfuscated Files or Information,Siloscape itself is obfuscated and uses obfuscated API calls.[1]
Enterprise,T1069,Permission Groups Discovery,Siloscape checks for Kubernetes node permissions.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,Siloscape uses Tor to communicate with C2.[1]
Enterprise,T1518,Software Discovery,Siloscape searches for the kubectl binary.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Cannon uses SMTP/S and POP3/S for C2 communications by sending and receiving emails.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Cannon adds the Registry key HKCU\Software\Microsoft\Windows NT\CurrentVersion\Winlogon to establish persistence.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Cannon exfiltrates collected data over email via SMTP/S and POP3/S C2 channels.[1]
Enterprise,T1083,File and Directory Discovery,Cannon can obtain victim drive information as well as a list of folders in C:\Program Files.[1]
Enterprise,T1105,Ingress Tool Transfer,Cannon can download a payload for execution.[1]
Enterprise,T1057,Process Discovery,Cannon can obtain a list of processes running on the system.[1][2]
Enterprise,T1113,Screen Capture,Cannon can take a screenshot of the desktop.[1]
Enterprise,T1082,System Information Discovery,"Cannon can gather system information from the victim’s machine such as the OS version, machine name, and drive information.[1][2]"
Enterprise,T1033,System Owner/User Discovery,Cannon can gather the username from the system.[1]
Enterprise,T1124,System Time Discovery,Cannon can collect the current time zone information from the victim’s machine.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Mosquito establishes persistence under the Registry key HKCU\Software\Run auto_update.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Mosquito can launch PowerShell Scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Mosquito executes cmd.exe and uses a pipe to read the results and send back the output to the C2 server.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"Mosquito uses a custom encryption algorithm, which consists of XOR and a stream that is similar to the Blum Blum Shub algorithm.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Mosquito deletes files using DeleteFileW API call.[1]
Enterprise,T1105,Ingress Tool Transfer,Mosquito can upload and download files to the victim.[1]
Enterprise,T1112,Modify Registry,Mosquito stores configuration values under the Registry key HKCU\Software\Microsoft[dllname] and modifies Registry keys under HKCR\CLSID...\InprocServer32with a path to the launcher.[1]
Enterprise,T1106,Native API,Mosquito leverages the CreateProcess() and LoadLibrary() calls to execute files with the .dll and .exe extensions.[1]
Enterprise,T1027,Obfuscated Files or Information,Mosquito’s installer is obfuscated with a custom crypter to obfuscate the installer.[1]
Enterprise,T1057,Process Discovery,Mosquito runs tasklist to obtain running processes.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Mosquito's installer searches the Registry and system to see if specific antivirus tools are installed on the system.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Mosquito's launcher uses rundll32.exe in a Registry Key value to start the main backdoor capability.[1]
Enterprise,T1016,System Network Configuration Discovery,Mosquito uses the ipconfig command.[1]
Enterprise,T1033,System Owner/User Discovery,Mosquito runs whoami on the victim’s machine.[1]
Enterprise,T1047,Windows Management Instrumentation,Mosquito's installer uses WMI to search for antivirus display names.[1]
Enterprise,T1087,Account Discovery: Domain Account,dsquery can be used to gather information on user accounts within a domain.[1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,dsquery can be used to gather information on permission groups within a domain.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,JCry has created payloads in the Startup directory to maintain persistence. [1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,JCry has used PowerShell to execute payloads.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,JCry has used cmd.exe to launch PowerShell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,JCry has used VBS scripts. [1]
Enterprise,T1204,User Execution: Malicious File,JCry has achieved execution by luring users to click on a file that appeared to be an Adobe Flash Player update installer. [1]
Enterprise,T1132,Data Encoding: Standard Encoding,BS2005 uses Base64 encoding for communication in the message body of an HTTP request.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Pay2Key has used RSA encrypted communications with C2.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Pay2Key can remove its log file from disk.[2]
Enterprise,T1090,Proxy: Internal Proxy,Pay2Key has designated machines in the compromised network to serve as reverse proxy pivot points to channel communications with C2.[1][2]
Enterprise,T1082,System Information Discovery,Pay2Key has the ability to gather the hostname of the victim machine.[2]
Enterprise,T1016,System Network Configuration Discovery,Pay2Key can identify the IP and MAC addresses of the compromised host.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GuLoader can use HTTP to retrieve additional binaries.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,GuLoader can establish persistence via the Registry under HKCU\Software\Microsoft\Windows\CurrentVersion\RunOnce.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,GuLoader can delete its executable from the AppData\Local\Temp directory on the compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,GuLoader can download further malware for execution on the victim's machine.[2]
Enterprise,T1106,Native API,GuLoader can use a number of different APIs for discovery and execution.[2]
Enterprise,T1566,Phishing: Spearphishing Link,GuLoader has been spread in phishing campaigns using malicious web links.[1]
Enterprise,T1055,Process Injection,GuLoader has the ability to inject shellcode into a donor processes that is started in a suspended state. GuLoader has previously used RegAsm as a donor process.[2]
Enterprise,T1204,User Execution: Malicious Link,GuLoader has relied upon users clicking on links to malicious documents.[1]
Enterprise,T1204,User Execution: Malicious File,The GuLoader executable has been retrieved via embedded macros in malicious Word documents.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"GuLoader has the ability to perform anti-VM and anti-sandbox checks using string hashing, the API call EnumWindows, and checking for Qemu guest agent.[2]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"GuLoader has the ability to perform anti-debugging based on time checks, API calls, and CPUID.[2]"
Enterprise,T1102,Web Service,GuLoader has the ability to download malware from Google Drive.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DEATHRANSOM can use HTTPS to download files.[1]
Enterprise,T1083,File and Directory Discovery,DEATHRANSOM can use loop operations to enumerate directories on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,DEATHRANSOM can download files to a compromised host.[1]
Enterprise,T1082,System Information Discovery,DEATHRANSOM can enumerate logical drives on a target system.[1]
Enterprise,T1047,Windows Management Instrumentation,DEATHRANSOM has the ability to use WMI to delete volume shadow copies.[1]
Enterprise,T1005,Data from Local System,"Forfiles can be used to act on (ex: copy, move, etc.) files/directories in a system during (ex: copy files into a staging area before).[2]"
Enterprise,T1083,File and Directory Discovery,"Forfiles can be used to locate certain types of files/directories in a system.(ex: locate all files with a specific extension, name, and/or age)[2]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,BLUELIGHT can use HTTP/S for C2 using the Microsoft Graph API.[1]
Enterprise,T1560,Archive Collected Data,BLUELIGHT can zip files before exfiltration.[1]
Enterprise,T1560,Archive via Custom Method,BLUELIGHT has encoded data into a binary blob using XOR.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"BLUELIGHT can collect passwords stored in web browers, including Internet Explorer, Edge, Chrome, and Naver Whale.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,BLUELIGHT has exfiltrated data over its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,BLUELIGHT can enumerate files and collect associated metadata.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,BLUELIGHT can uninstall itself.[1]
Enterprise,T1105,Ingress Tool Transfer,BLUELIGHT can download additional files onto the host.[1]
Enterprise,T1027,Obfuscated Files or Information,BLUELIGHT has a XOR-encoded payload.[1]
Enterprise,T1057,Process Discovery,BLUELIGHT can collect process filenames and SID authority level.[1]
Enterprise,T1113,Screen Capture,"BLUELIGHT has captured a screenshot of the display every 30 seconds for the first 5 minutes after initiating a C2 loop, and then once every five minutes thereafter.[1]"
Enterprise,T1518,Software Discovery: Security Software Discovery,BLUELIGHT can collect a list of anti-virus products installed on a machine.[1]
Enterprise,T1082,System Information Discovery,BLUELIGHT has collected the computer name and OS version from victim machines.[1]
Enterprise,T1016,System Network Configuration Discovery,BLUELIGHT can collect IP information from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,BLUELIGHT can collect the username on a compromised host.[1]
Enterprise,T1124,System Time Discovery,BLUELIGHT can collect the local time on a compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,BLUELIGHT can check to see if the infected machine has VM tools running.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,BLUELIGHT can use different cloud providers for its C2.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Tomiris can use HTTP to establish C2 communications.[1]
Enterprise,T1005,Data from Local System,Tomiris has the ability to collect recent files matching a hardcoded list of extensions prior to exfiltration.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,"Tomiris can upload files matching a hardcoded set of extensions, such as .doc, .docx, .pdf, and .rar, to its C2 server.[1]"
Enterprise,T1105,Ingress Tool Transfer,Tomiris can download files and execute them on a victim's system.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Tomiris has been packed with UPX.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Tomiris has used SCHTASKS /CREATE /SC DAILY /TN StartDVL /TR ""[path to self]"" /ST 10:00 to establish persistence.[1]"
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Tomiris has the ability to sleep for at least nine minutes to evade sandbox-based analysis systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Psylo uses HTTPS for C2.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Psylo exfiltrates data to its C2 server over the same protocol as C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,Psylo has commands to enumerate all storage devices and to find all files that start with a particular string.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Psylo has a command to conduct timestomping by setting a specified file’s timestamps to match those of a system file in the System32 directory.[1]
Enterprise,T1105,Ingress Tool Transfer,Psylo has a command to download a file to the system from its C2 server.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,httpclient uses HTTP for command and control.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,httpclient opens cmd.exe on the victim.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"httpclient encrypts C2 content with XOR using a single byte, 0x12.[1]"
Enterprise,T1087,Account Discovery: Local Account,PoshC2 can enumerate local and domain user account information.[1]
Enterprise,T1087,Account Discovery: Domain Account,PoshC2 can enumerate local and domain user account information.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PoshC2 can use protocols like HTTP/HTTPS for command and control traffic.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,PoshC2 contains a module for compressing data using ZIP.[1]
Enterprise,T1083,File and Directory Discovery,PoshC2 can enumerate files on the local file system and includes a module for enumerating recently accessed files.[1]
Enterprise,T1056,Input Capture: Keylogging,PoshC2 has modules for keystroke logging and capturing credentials from spoofed Outlook authentication messages.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,PoshC2 contains an implementation of Mimikatz to gather credentials from memory.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,"PoshC2 contains modules, such as Get-LocAdm for enumerating permission groups.[1]"
Enterprise,T1055,Process Injection,"PoshC2 contains multiple modules for injecting into processes, such as Invoke-PSInject.[1]"
Enterprise,T1090,Proxy,PoshC2 contains modules that allow for use of proxies in command and control.[1]
Enterprise,T1082,System Information Discovery,"PoshC2 contains modules, such as Get-ComputerInfo, for enumerating common system information.[1]"
Enterprise,T1016,System Network Configuration Discovery,PoshC2 can enumerate network adapter information.[1]
Enterprise,T1049,System Network Connections Discovery,PoshC2 contains an implementation of netstat to enumerate TCP and UDP connections.[1]
Enterprise,T1569,System Services: Service Execution,PoshC2 contains an implementation of PsExec for remote execution.[1]
Enterprise,T1047,Windows Management Instrumentation,PoshC2 has a number of modules that use WMI to execute tasks.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,ProLock can remove files containing its payload after they are executed.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,ProLock can use .jpg and .bmp files to store its payload.[1]
Enterprise,T1047,Windows Management Instrumentation,ProLock can use WMIC to execute scripts on targeted hosts.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,TINYTYPHON installs itself under Registry Run key to establish persistence.[1]
Enterprise,T1083,File and Directory Discovery,"TINYTYPHON searches through the drive containing the OS, then all drive letters C through to Z, for documents matching certain extensions.[1]"
Enterprise,T1027,Obfuscated Files or Information,TINYTYPHON has used XOR with 0x90 to obfuscate its configuration file.[1]
Enterprise,T1018,Remote System Discovery,"Arp can be used to display a host's ARP cache, which may include address resolutions for remote systems.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,Arp can be used to display ARP configuration information on the host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Helminth can use HTTP for C2.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Helminth can use DNS for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Helminth establishes persistence by creating a shortcut in the Start Menu folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Helminth establishes persistence by creating a shortcut.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,One version of Helminth uses a PowerShell script.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Helminth can provide a remote shell. One version of Helminth uses batch scripting.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,One version of Helminth consists of VBScript scripts.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,"For C2 over HTTP, Helminth encodes data with base64 and sends it via the ""Cookie"" field of HTTP requests. For C2 over DNS, Helminth converts ASCII characters into their hexadecimal values and sends the data in cleartext.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,Helminth creates folders to store output from batch scripts prior to sending the information to its C2 server.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Helminth encrypts data sent to its C2 server over HTTP with RC4.[1]
Enterprise,T1105,Ingress Tool Transfer,Helminth can download additional files.[1]
Enterprise,T1056,Input Capture: Keylogging,The executable version of Helminth has a module to log keystrokes.[1]
Enterprise,T1027,Obfuscated Files or Information,The Helminth config file is encrypted with RC4.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Helminth has checked the local administrators group.[2]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Helminth has checked for the domain admin group and Exchange Trusted Subsystem groups using the commands net group Exchange Trusted Subsystem /domain and net group domain admins /domain.[2]
Enterprise,T1057,Process Discovery,Helminth has used Tasklist to get information on processes.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Helminth has used a scheduled task for persistence.[3]
Enterprise,T1553,Subvert Trust Controls: Code Signing,"Helminth samples have been signed with legitimate, compromised code signing certificates owned by software company AI Squared.[3]"
Enterprise,T1547,Boot or Logon Autostart Execution: LSASS Driver,Pasam establishes by infecting the Security Accounts Manager (SAM) DLL to load a malicious DLL dropped to disk.[2]
Enterprise,T1005,Data from Local System,Pasam creates a backdoor through which remote attackers can retrieve files.[2]
Enterprise,T1083,File and Directory Discovery,Pasam creates a backdoor through which remote attackers can retrieve lists of files.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Pasam creates a backdoor through which remote attackers can delete files.[2]
Enterprise,T1105,Ingress Tool Transfer,Pasam creates a backdoor through which remote attackers can upload files.[2]
Enterprise,T1057,Process Discovery,Pasam creates a backdoor through which remote attackers can retrieve lists of running processes.[2]
Enterprise,T1082,System Information Discovery,Pasam creates a backdoor through which remote attackers can retrieve information such as hostname and free disk space.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,WellMess can use HTTP and HTTPS in C2 communications.[2][4][1][3]
Enterprise,T1071,Application Layer Protocol: DNS,WellMess has the ability to use DNS tunneling for C2 communications.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,WellMess can execute PowerShell scripts received from C2.[2][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,WellMess can execute command line scripts received from C2.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,WellMess has used Base64 encoding to uniquely identify communication to and from the C2.[1]
Enterprise,T1005,Data from Local System,WellMess can send files from the victim machine to C2.[2][1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WellMess can decode and decrypt data received from C2.[2][4][1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,WellMess can encrypt HTTP POST data using RC6 and a dynamically generated AES key encrypted with a hard coded RSA public key.[2][4][1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,WellMess can communicate to C2 with mutual TLS where client and server mutually check certificates.[2][4][1][3]
Enterprise,T1105,Ingress Tool Transfer,WellMess can write files to a compromised host.[2][1]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,WellMess can identify domain group membership for the current user.[1]
Enterprise,T1082,System Information Discovery,WellMess can identify the computer name of a compromised host.[2][1]
Enterprise,T1016,System Network Configuration Discovery,WellMess can identify the IP address and user domain on the target machine.[2][1]
Enterprise,T1033,System Owner/User Discovery,WellMess can collect the username on the victim machine to send to C2.[1]
Enterprise,T1071,Application Layer Protocol: DNS,SombRAT can communicate over DNS with the C2 server.[1][2]
Enterprise,T1005,Data from Local System,SombRAT has collected data and files from a compromised host.[1][3]
Enterprise,T1074,Data Staged: Local Data Staging,SombRAT can store harvested data in a custom database under the %TEMP% directory.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SombRAT can run upload to decrypt and upload files from storage.[1][3]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,SombRAT can SSL encrypt C2 traffic.[1][2][3]
Enterprise,T1083,File and Directory Discovery,SombRAT can execute enum to enumerate files in storage on a compromised system.[1]
Enterprise,T1564,Hide Artifacts: Process Argument Spoofing,SombRAT has the ability to modify its process memory to hide process command-line arguments.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SombRAT has the ability to run cancel or closeanddeletestorage to remove all files from storage and delete the storage temp file on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,SombRAT has the ability to download and execute additional payloads.[1][2][3]
Enterprise,T1036,Masquerading,SombRAT can use a legitimate process name to hide itself.[3]
Enterprise,T1106,Native API,SombRAT has the ability to respawn itself using ShellExecuteW and CreateProcessW.[1]
Enterprise,T1027,Obfuscated Files or Information,"SombRAT can encrypt strings with XOR-based routines and use a custom AES storage format for plugins, configuration, C2 domains, and harvested data.[1][2][3]"
Enterprise,T1057,Process Discovery,SombRAT can use the getprocesslist command to enumerate processes on a compromised host.[1][2][3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"SombRAT can execute loadfromfile, loadfromstorage, and loadfrommem to inject a DLL from disk, storage, or memory respectively.[1]"
Enterprise,T1090,Proxy,SombRAT has the ability to use an embedded SOCKS proxy in C2 communications.[3]
Enterprise,T1082,System Information Discovery,SombRAT can execute getinfo to enumerate the computer name and OS version of a compromised system.[1]
Enterprise,T1033,System Owner/User Discovery,SombRAT can execute getinfo to identify the username on a compromised host.[1][3]
Enterprise,T1124,System Time Discovery,SombRAT can execute getinfo to discover the current time on a compromised host.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,OLDBAIT can use HTTP for C2.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,OLDBAIT can use SMTP for C2.[1]
Enterprise,T1555,Credentials from Password Stores,OLDBAIT collects credentials from several email clients.[1]
Enterprise,T1555,Credentials from Web Browsers,"OLDBAIT collects credentials from Internet Explorer, Mozilla Firefox, and Eudora.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"OLDBAIT installs itself in %ALLUSERPROFILE%\Application Data\Microsoft\MediaPlayer\updatewindws.exe; the directory name is missing a space and the file name is missing the letter ""o.""[1]"
Enterprise,T1027,Obfuscated Files or Information,OLDBAIT obfuscates internal strings and unpacks them at startup.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Volgmer can execute commands on the victim's machine.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,"Volgmer installs a copy of itself in a randomly selected service, then overwrites the ServiceDLL entry in the service's Registry entry. Some Volgmer variants also install .dll files as services with names generated by a list of hard-coded strings.[1][2][3]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,Volgmer deobfuscates its strings and APIs once its executed.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Volgmer uses a simple XOR cipher to encrypt traffic and files.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Some Volgmer variants use SSL to encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,Volgmer can list directories on a victim.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Volgmer can delete files and itself after infection to avoid analysis.[2]
Enterprise,T1105,Ingress Tool Transfer,Volgmer can download remote files and additional payloads to the victim's machine.[1][2][3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Some Volgmer variants add new services with display names generated by a list of hard-coded strings such as Application, Background, Security, and Windows, presumably as a way to masquerade as a legitimate service.[2][3]"
Enterprise,T1112,Modify Registry,Volgmer stores the encoded configuration file in the Registry key HKEY_LOCAL_MACHINE\SYSTEM\CurrentControlSet\Control\WMI\Security.[2][3]
Enterprise,T1106,Native API,Volgmer executes payloads using the Windows API call CreateProcessW().[2]
Enterprise,T1027,Obfuscated Files or Information,A Volgmer variant is encoded using a simple XOR cipher.[2]
Enterprise,T1057,Process Discovery,Volgmer can gather a list of processes.[3]
Enterprise,T1012,Query Registry,Volgmer checks the system for certain Registry keys.[2]
Enterprise,T1082,System Information Discovery,"Volgmer can gather system information, the computer name, OS version, drive and serial information from the victim's machine.[1][2][3]"
Enterprise,T1016,System Network Configuration Discovery,Volgmer can gather the IP address from the victim's machine.[3]
Enterprise,T1049,System Network Connections Discovery,Volgmer can gather information about TCP connection state.[3]
Enterprise,T1083,File and Directory Discovery,SynAck checks its directory location in an attempt to avoid launching in a sandbox.[1][2]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,SynAck clears event logs.[1]
Enterprise,T1112,Modify Registry,SynAck can manipulate Registry keys.[1]
Enterprise,T1106,Native API,SynAck parses the export tables of system DLLs to locate and call various Windows API functions.[1][2]
Enterprise,T1027,Obfuscated Files or Information,SynAck payloads are obfuscated prior to compilation to inhibit analysis and/or reverse engineering.[1][2]
Enterprise,T1057,Process Discovery,SynAck enumerates all running processes.[1][2]
Enterprise,T1055,Process Injection: Process Doppelgänging,SynAck abuses NTFS transactions to launch and conceal malicious processes.[1][2]
Enterprise,T1012,Query Registry,SynAck enumerates Registry keys associated with event logs.[1]
Enterprise,T1082,System Information Discovery,"SynAck gathers computer names, OS version info, and also checks installed keyboard layouts to estimate if it has been launched from a certain list of countries.[1]"
Enterprise,T1033,System Owner/User Discovery,SynAck gathers user names from infected hosts.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,SynAck checks its directory location in an attempt to avoid launching in a sandbox.[1][2]
Enterprise,T1018,Remote System Discovery,NBTscan can list NetBIOS computer names.[1][2]
Enterprise,T1016,System Network Configuration Discovery,NBTscan can be used to collect MAC addresses.[1][2]
Enterprise,T1033,System Owner/User Discovery,NBTscan can list active users on the system.[1][2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.[1]
Enterprise,T1003,OS Credential Dumping: NTDS,SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information from NTDS.dit.[1]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,SecretsDump and Mimikatz modules within Impacket can perform credential dumping to obtain account and password information.[1]
Enterprise,T1569,System Services: Service Execution,Impacket contains various modules emulating other service execution tools such as PsExec.[1]
Enterprise,T1047,Windows Management Instrumentation,Impacket's wmiexec module can be used to execute commands through WMI.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Penquin can execute remote commands using bash scripts.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Penquin can encrypt communications using the BlowFish algorithm and a symmetric key exchanged with Diffie Hellman.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Penquin can execute the command code do_upload to send files to C2.[2]
Enterprise,T1083,File and Directory Discovery,"Penquin can use the command code do_vslist to send file names, size, and status to C2.[2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Penquin can delete downloaded executables after running them.[2]
Enterprise,T1105,Ingress Tool Transfer,Penquin can execute the command code do_download to retrieve remote files from C2.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Penquin has mimicked the Cron binary to hide itself on compromised systems.[2]
Enterprise,T1027,Obfuscated Files or Information,Penquin has encrypted strings in the binary for obfuscation.[2]
Enterprise,T1027,Indicator Removal from Tools,Penquin can remove strings from binaries.[2]
Enterprise,T1053,Scheduled Task/Job: Cron,Penquin can use Cron to create periodic and pre-scheduled background jobs.[2]
Enterprise,T1082,System Information Discovery,Penquin can report the file system type and disk space of a compromised host to C2.[2]
Enterprise,T1016,System Network Configuration Discovery,Penquin can report the IP of the compromised host to attacker controlled infrastructure.[2]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Attor has used FTP protocol for C2 communication.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Attor encrypts collected data with a custom implementation of Blowfish and RSA ciphers.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Attor's dispatcher can establish persistence by registering a new service.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Attor has staged collected data in a central upload directory prior to exfiltration.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Attor has encrypted data symmetrically using a randomly generated Blowfish (OFB) key which is encrypted with a public RSA key.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Attor's Blowfish key is encrypted with a public RSA key.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Attor has exfiltrated data over the C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,Attor has a plugin that enumerates files with specific extensions on all hard disk drives and stores file information in encrypted log files.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"Attor can set attributes of log files and directories to HIDDEN, SYSTEM, ARCHIVE, or a combination of those.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Attor’s plugin deletes the collected files and log files after exfiltration.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Attor has manipulated the time of last access to files and registry keys after they have been created or modified.[1]
Enterprise,T1105,Ingress Tool Transfer,"Attor can download additional plugins, updates and other files. [1]"
Enterprise,T1056,Input Capture: Keylogging,One of Attor's plugins can collect user credentials via capturing keystrokes and can capture keystrokes pressed within the window of the injected process.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Attor's dispatcher disguises itself as a legitimate task (i.e., the task name and description appear legitimate).[1]"
Enterprise,T1112,Modify Registry,Attor's dispatcher can modify the Run registry key.[1]
Enterprise,T1106,Native API,Attor's dispatcher has used CreateProcessW API for execution.[1]
Enterprise,T1027,Obfuscated Files or Information,"Strings in Attor's components are encrypted with a XOR cipher, using a hardcoded key and the configuration data, log files and plugins are encrypted using a hybrid encryption scheme of Blowfish-OFB combined with RSA.[1]"
Enterprise,T1055,Process Injection,Attor's dispatcher can inject itself into running processes to gain higher privileges and to evade detection.[1]
Enterprise,T1055,Asynchronous Procedure Call,Attor performs the injection by attaching its code into the APC queue using NtQueueApcThread API.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,Attor has used Tor for C2 communication.[1]
Enterprise,T1012,Query Registry,Attor has opened the registry and performed query searches.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Attor's installer plugin can schedule a new task that loads the dispatcher on boot/logon.[1]
Enterprise,T1113,Screen Capture,Attor's has a plugin that captures screenshots of the target applications.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Attor's installer plugin can schedule rundll32.exe to load the dispatcher.[1]
Enterprise,T1082,System Information Discovery,Attor monitors the free disk space on the system.[1]
Enterprise,T1569,System Services: Service Execution,Attor's dispatcher can be executed as a service.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"Attor can detect whether it is executed in some virtualized or emulated environment by searching for specific artifacts, such as communication with I/O ports and using VM-specific instructions.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,cmd is used to execute programs and other actions at the command-line interface.[1]
Enterprise,T1083,File and Directory Discovery,cmd can be used to find files and directories with native functionality such as dir commands.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,cmd can be used to delete files from the file system.[3]
Enterprise,T1105,Ingress Tool Transfer,cmd can be used to copy files to/from a remotely connected external system.[4]
Enterprise,T1082,System Information Discovery,cmd can be used to find information about the operating system.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,QuasarRAT can launch a remote shell to execute commands on the victim’s machine.[1]
Enterprise,T1555,Credentials from Password Stores,QuasarRAT can obtain passwords from common FTP clients.[1][2]
Enterprise,T1555,Credentials from Web Browsers,QuasarRAT can obtain passwords from common web browsers.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,QuasarRAT uses AES to encrypt network communication.[1][2]
Enterprise,T1105,Ingress Tool Transfer,QuasarRAT can download files to the victim’s machine and execute them.[1][2]
Enterprise,T1056,Input Capture: Keylogging,QuasarRAT has a built-in keylogger.[1][2]
Enterprise,T1112,Modify Registry,QuasarRAT has a command to edit the Registry on the victim’s machine.[1]
Enterprise,T1090,Proxy,QuasarRAT can communicate over a reverse proxy using SOCKS5.[1][2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,QuasarRAT has a module for performing remote desktop access.[1][2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,QuasarRAT contains a .NET wrapper DLL for creating and managing scheduled tasks for maintaining persistence upon reboot.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,A QuasarRAT .dll file is digitally signed by a certificate from AirVPN.[2]
Enterprise,T1082,System Information Discovery,QuasarRAT has a command to gather system information from the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SUNBURST communicated via HTTP GET or HTTP POST requests to third party servers for C2.[3]
Enterprise,T1071,Application Layer Protocol: DNS,SUNBURST used DNS for C2 traffic designed to mimic normal SolarWinds API communications.[3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,SUNBURST used VBScripts to initiate the execution of payloads.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,SUNBURST used Base64 encoding in its C2 traffic.[3]
Enterprise,T1005,Data from Local System,SUNBURST collected information from a compromised host.[4][3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SUNBURST encrypted C2 traffic using a single-byte-XOR cipher.[3]
Enterprise,T1083,File and Directory Discovery,SUNBURST had commands to enumerate files and directories.[3][4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,SUNBURST attempted to disable software security services following checks against a FNV-1a + XOR hashed hardcoded blocklist.[5]
Enterprise,T1070,Indicator Removal on Host,SUNBURST removed IFEO and HTTP proxy registry values to clean up traces of execution. SUNBURST also removed the firewall rules it created during execution.[2]
Enterprise,T1070,File Deletion,SUNBURST had a command to delete files.[3][4]
Enterprise,T1105,Ingress Tool Transfer,"SUNBURST delivered different payloads, including TEARDROP in at least one instance.[3]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,SUNBURST created VBScripts that were named after existing services or folders to blend into legitimate activities.[2]
Enterprise,T1112,Modify Registry,"SUNBURST had commands that allow an attacker to write or delete registry keys, and was observed stopping services by setting their HKLM\SYSTEM\CurrentControlSet\services\[service_name]\Start registry entries to value 4.[3][4] It also deleted previously-created Image File Execution Options (IFEO) Debugger registry values and registry keys related to HTTP proxy to clean up traces of its activity.[2]"
Enterprise,T1027,Obfuscated Files or Information,SUNBURST strings were compressed and encoded in Base64.[4] SUNBURST also obfuscated collected system information using a FNV-1a + XOR algorithm.[3]
Enterprise,T1027,Indicator Removal from Tools,"SUNBURST source code used generic variable names and pre-obfuscated strings, and was likely sanitized of developer comments before being added to SUNSPOT.[7]"
Enterprise,T1057,Process Discovery,SUNBURST collected a list of process names that were hashed using a FNV-1a + XOR algorithm to check against similarly-hashed hardcoded blocklists.[3]
Enterprise,T1012,Query Registry,SUNBURST collected the registry value HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Cryptography\MachineGuid from compromised hosts.[3]
Enterprise,T1518,Software Discovery: Security Software Discovery,SUNBURST checked for a variety of antivirus/endpoint detection agents prior to execution.[4][5]
Enterprise,T1553,Subvert Trust Controls: Code Signing,SUNBURST was digitally signed by SolarWinds from March - May 2020.[3]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,SUNBURST used Rundll32 to execute payloads.[2]
Enterprise,T1082,System Information Discovery,"SUNBURST collected hostname, OS version, and device uptime.[3][4]"
Enterprise,T1016,System Network Configuration Discovery,"SUNBURST collected all network interface MAC addresses that are up and not loopback devices, as well as IP address, DHCP configuration, and domain information.[3]"
Enterprise,T1033,System Owner/User Discovery,SUNBURST collected the username from a compromised host.[3][4]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,SUNBURST checked the domain name of the compromised host to verify it was running in a real environment.[4]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,SUNBURST remained dormant after initial access for a period of up to two weeks.[3]
Enterprise,T1047,Windows Management Instrumentation,SUNBURST used the WMI query Select * From Win32_SystemDriver to retrieve a driver listing.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Zeus Panda uses HTTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Zeus Panda adds persistence by creating Registry Run keys.[1][2]
Enterprise,T1059,Command and Scripting Interpreter,Zeus Panda can launch remote scripts on the victim’s machine.[2]
Enterprise,T1059,PowerShell,Zeus Panda uses PowerShell to download and execute the payload.[1]
Enterprise,T1059,Windows Command Shell,Zeus Panda can launch an interface where it can execute several commands on the victim’s PC.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Zeus Panda decrypts strings in the code during the execution process.[1]
Enterprise,T1083,File and Directory Discovery,Zeus Panda searches for specific directories on the victim’s machine.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Zeus Panda has a command to delete a file. It also can uninstall scripts and delete files to cover its track.[2]
Enterprise,T1105,Ingress Tool Transfer,Zeus Panda can download additional malware plug-in modules and execute them on the victim’s machine.[2]
Enterprise,T1056,Input Capture: Keylogging,Zeus Panda can perform keylogging on the victim’s machine by hooking the functions TranslateMessage and WM_KEYDOWN.[2]
Enterprise,T1056,Input Capture: Credential API Hooking,Zeus Panda hooks processes by leveraging its own IAT hooked functions.[2]
Enterprise,T1112,Modify Registry,Zeus Panda modifies several Registry keys under HKCU\Software\Microsoft\Internet Explorer\ PhishingFilter\ to disable phishing filters.[2]
Enterprise,T1027,Obfuscated Files or Information,Zeus Panda encrypts strings with XOR and obfuscates the macro code from the initial payload. Zeus Panda also encrypts all configuration and settings in AES and RC4.[1][2]
Enterprise,T1057,Process Discovery,Zeus Panda checks for running processes on the victim’s machine.[2]
Enterprise,T1055,Process Injection: Portable Executable Injection,"Zeus Panda checks processes on the system and if they meet the necessary requirements, it injects into that process.[2]"
Enterprise,T1012,Query Registry,Zeus Panda checks for the existence of a Registry key and if it contains certain values.[2]
Enterprise,T1113,Screen Capture,Zeus Panda can take screenshots of the victim’s machine.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,"Zeus Panda checks to see if anti-virus, anti-spyware, or firewall products are installed in the victim’s environment.[1][2]"
Enterprise,T1082,System Information Discovery,"Zeus Panda collects the OS version, system architecture, computer name, product ID, install date, and information on the keyboard mapping to determine the language used on the system.[1][2]"
Enterprise,T1124,System Time Discovery,Zeus Panda collects the current system time (UTC) and sends it back to the C2 server.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Recent versions of Cherry Picker delete files and registry keys created by the malware.[1]
Enterprise,T1569,System Services: Service Execution,xCmd can be used to execute binaries on remote systems by creating and starting a service.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Kobalos can spawn a new pseudo-terminal and execute arbitrary commands at the command prompt.[1]
Enterprise,T1074,Data Staged,Kobalos can write captured SSH connection credentials to a file under the /var/run directory with a .pid extension for exfiltration.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Kobalos decrypts strings right after the initial communication, but before the authentication process.[2]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Kobalos's post-authentication communication channel uses a 32-byte-long password with RC4 for inbound and outbound traffic.[1][2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Kobalos's authentication and key exchange is performed using RSA-512.[1][2]
Enterprise,T1070,Indicator Removal on Host: Clear Command History,Kobalos can remove all command history on compromised hosts.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,"Kobalos can modify timestamps of replaced files, such as ssh with the added credential stealer or sshd used to deploy Kobalos.[2]"
Enterprise,T1056,Input Capture,"Kobalos has used a compromised SSH client to capture the hostname, port, username and password used to establish an SSH connection from the compromised host.[1][2]"
Enterprise,T1027,Obfuscated Files or Information,Kobalos encrypts all strings using RC4 and bundles all functionality into a single function call.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,Kobalos can chain together multiple compromised machines as proxies to reach their final targets.[1][2]
Enterprise,T1082,System Information Discovery,Kobalos can record the hostname and kernel version of the target machine.[2]
Enterprise,T1016,System Network Configuration Discovery,Kobalos can record the IP address of the target machine.[2]
Enterprise,T1003,OS Credential Dumping: Proc Filesystem,MimiPenguin can dump process memory and extract clear-text credentials.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,EnvyScout can use cmd.exe to execute malicious files on compromised hosts.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,EnvyScout can write files to disk with JavaScript using a modified version of the open-source tool FileSaver.[1]
Enterprise,T1005,Data from Local System,EnvyScout can collect sensitive NTLM material from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,EnvyScout can deobfuscate and write malicious ISO files to disk.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,EnvyScout can use hidden directories and files to hide malicious executables.[1]
Enterprise,T1036,Masquerading,EnvyScout has used folder icons for malicious files to lure victims into opening them.[1]
Enterprise,T1027,Obfuscated Files or Information,EnvyScout can Base64 encode payloads.[1]
Enterprise,T1027,HTML Smuggling,EnvyScout contains JavaScript code that can extract an encoded blob from its HTML body and write it to disk.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,EnvyScout has been distributed via spearphishing as an email attachment.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,EnvyScout has the ability to proxy execution of malicious files with Rundll32.[1]
Enterprise,T1082,System Information Discovery,EnvyScout can determine whether the ISO payload was received by a Windows or iOS device.[1]
Enterprise,T1204,User Execution: Malicious File,EnvyScout has been executed through malicious files attached to e-mails.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PLEAD has used HTTP for communications with command and control (C2) servers.[2][1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PLEAD has the ability to execute shell commands on the compromised host.[2]
Enterprise,T1555,Credentials from Password Stores,PLEAD has the ability to steal saved passwords from Microsoft Outlook.[4]
Enterprise,T1555,Credentials from Web Browsers,"PLEAD can harvest saved credentials from browsers such as Google Chrome, Microsoft Internet Explorer, and Mozilla Firefox.[1][4]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,PLEAD has used RC4 encryption to download modules.[2]
Enterprise,T1083,File and Directory Discovery,PLEAD has the ability to list drives and files on the compromised host.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,PLEAD has the ability to delete files on the compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,PLEAD has the ability to upload and download files to and from an infected host.[2]
Enterprise,T1106,Native API,PLEAD can use ShellExecute to execute applications.[1]
Enterprise,T1057,Process Discovery,PLEAD has the ability to list processes on the compromised host.[1]
Enterprise,T1090,Proxy,PLEAD has the ability to proxy network communications.[2]
Enterprise,T1204,User Execution: Malicious Link,PLEAD has been executed via malicious links in e-mails.[1]
Enterprise,T1204,User Execution: Malicious File,PLEAD has been executed via malicious e-mail attachments.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"The ""Uploader"" variant of HAMMERTOSS visits a hard-coded server over HTTP/S to download the images HAMMERTOSS uses to receive commands.[1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,HAMMERTOSS is known to use PowerShell.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"Before being appended to image files, HAMMERTOSS commands are encrypted with a key composed of both a hard-coded value and a string contained on that day's tweet. To decrypt the commands, an investigator would need access to the intended malware sample, the day's tweet, and the image file containing the command.[1]"
Enterprise,T1564,Hide Artifacts: Hidden Window,HAMMERTOSS has used -WindowStyle hidden to conceal PowerShell windows.[1]
Enterprise,T1102,Web Service: One-Way Communication,"The ""tDiscoverer"" variant of HAMMERTOSS establishes a C2 channel by downloading resources from Web services like Twitter and GitHub. HAMMERTOSS binaries contain an algorithm that generates a different Twitter handle for the malware to check for instructions every day.[1]"
Enterprise,T1087,Account Discovery: Local Account,Kazuar gathers information on local groups and members on the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Kazuar uses HTTP and HTTPS to communicate with the C2 server. Kazuar can also act as a webserver and listen for inbound HTTP requests through an exposed API.[1]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Kazuar uses FTP and FTPS to communicate with the C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Kazuar adds a sub-key under several Registry run keys.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Kazuar adds a .lnk file to the Windows startup folder.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Kazuar uses cmd.exe to execute commands on the victim’s machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Kazuar uses /bin/bash to execute commands on the victim’s machine.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Kazuar can install itself as a new service.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Kazuar encodes communications to the C2 server in Base64.[1]
Enterprise,T1005,Data from Local System,Kazuar uploads files from a specified directory to the C2 server.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Kazuar stages command output and collected data in files before exfiltration.[1]
Enterprise,T1083,File and Directory Discovery,"Kazuar finds a specified directory, lists the files and metadata about those files.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Kazuar can delete files.[1]
Enterprise,T1105,Ingress Tool Transfer,"Kazuar downloads additional plug-ins to load on the victim’s machine, including the ability to upgrade and replace its own binary.[1]"
Enterprise,T1027,Obfuscated Files or Information,Kazuar is obfuscated using the open source ConfuserEx protector. Kazuar also obfuscates the name of created files/folders/mutexes and encrypts debug messages written to log files using the Rijndael cipher.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Kazuar gathers information about local groups and members.[1]
Enterprise,T1057,Process Discovery,Kazuar obtains a list of running processes through WMI querying and the ps command.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"If running in a Windows environment, Kazuar saves a DLL to disk that is injected into the explorer.exe process to execute the payload. Kazuar can also be configured to inject and execute within specific processes.[1]"
Enterprise,T1090,Proxy: Internal Proxy,Kazuar has used internal nodes on the compromised network for C2 communications.[2]
Enterprise,T1113,Screen Capture,Kazuar captures screenshots of the victim’s screen.[1]
Enterprise,T1082,System Information Discovery,Kazuar gathers information on the system and local drives.[1]
Enterprise,T1016,System Network Configuration Discovery,Kazuar gathers information about network adapters.[1]
Enterprise,T1033,System Owner/User Discovery,Kazuar gathers information on users.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Kazuar has used compromised WordPress blogs as C2 servers.[1]
Enterprise,T1047,Windows Management Instrumentation,Kazuar obtains a list of running processes through WMI querying.[1]
Enterprise,T1087,Account Discovery: Local Account,The discovery modules used with Duqu can collect information on accounts and permissions.[1]
Enterprise,T1071,Application Layer Protocol,"Duqu uses a custom command and control protocol that communicates over commonly used ports, and is frequently encapsulated by application layer protocols.[1]"
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,"Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.[1]"
Enterprise,T1543,Create or Modify System Process: Windows Service,"Duqu creates a new service that loads a malicious driver when the system starts. When Duqu is active, the operating system believes that the driver is legitimate, as it has been signed with a valid private key.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,"Modules can be pushed to and executed by Duqu that copy data to a staging area, compress it, and XOR encrypt it.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,The Duqu command and control protocol's data stream can be encrypted with AES-CBC.[1]
Enterprise,T1056,Input Capture: Keylogging,Duqu can track key presses with a keylogger module.[1]
Enterprise,T1057,Process Discovery,The discovery modules used with Duqu can collect information on process details.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Duqu will inject itself into different processes to evade detection. The selection of the target process is influenced by the security software that is installed on the system (Duqu will inject into different processes depending on which security suite is installed on the infected host).[1]
Enterprise,T1055,Process Injection: Process Hollowing,Duqu is capable of loading executable code via process hollowing.[1]
Enterprise,T1090,Proxy: Internal Proxy,Duqu can be configured to have commands relayed over a peer-to-peer network of infected hosts if some of the hosts do not have Internet access.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,"Duqu has used msiexec to execute malicious Windows Installer packages. Additionally, a PROPERTY=VALUE pair containing a 56-bit encryption key has been used to decrypt the main payload from the installer packages.[2]"
Enterprise,T1016,System Network Configuration Discovery,The reconnaissance modules used with Duqu can collect information on network configuration.[1]
Enterprise,T1049,System Network Connections Discovery,The discovery modules used with Duqu can collect information on network connections.[1]
Enterprise,T1078,Valid Accounts,Adversaries can instruct Duqu to spread laterally by copying itself to shares it has enumerated and for which it has obtained legitimate credentials (via keylogging or other means). The remote host is then infected by using the compromised credentials to schedule a task on remote machines that executes the malware.[1]
Enterprise,T1105,Ingress Tool Transfer,P8RAT can download additional payloads to a target system.[1]
Enterprise,T1057,Process Discovery,P8RAT can check for specific processes associated with virtual environments.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,P8RAT can check the compromised host for processes associated with VMware or VirtualBox environments.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"P8RAT has the ability to ""sleep"" for a specified time to evade detection.[1]"
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Agent.btz saves system information into an XML file that is then XOR-encoded.[2]
Enterprise,T1105,Ingress Tool Transfer,Agent.btz attempts to download an encrypted binary from a specified domain.[2]
Enterprise,T1016,System Network Configuration Discovery,"Agent.btz collects the network adapter’s IP and MAC address as well as IP addresses of the network adapter’s default gateway, primary/secondary WINS, DHCP, and DNS servers, and saves them into a log file.[2]"
Enterprise,T1033,System Owner/User Discovery,Agent.btz obtains the victim username and saves it to a file.[2]
Enterprise,T1087,Account Discovery: Local Account,RATANKBA uses the net user command.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,RATANKBA uses HTTP/HTTPS for command and control communication.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,There is a variant of RATANKBA that uses a PowerShell script instead of the traditional PE form.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RATANKBA uses cmd.exe to execute commands.[1][2]
Enterprise,T1105,Ingress Tool Transfer,RATANKBA uploads and downloads information.[1][2]
Enterprise,T1057,Process Discovery,RATANKBA lists the system’s processes.[1][2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,RATANKBA performs a reflective DLL injection using a given pid.[1][2]
Enterprise,T1012,Query Registry,"RATANKBA uses the command reg query ""HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\InternetSettings"".[2]"
Enterprise,T1018,Remote System Discovery,RATANKBA runs the net view /domain and net view commands.[2]
Enterprise,T1082,System Information Discovery,"RATANKBA gathers information about the OS architecture, OS name, and OS version/Service pack.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,RATANKBA gathers the victim’s IP address via the ipconfig -all command.[1][2]
Enterprise,T1049,System Network Connections Discovery,RATANKBA uses netstat -ano to search for specific IP address ranges.[2]
Enterprise,T1033,System Owner/User Discovery,RATANKBA runs the whoami and query user commands.[2]
Enterprise,T1047,Windows Management Instrumentation,RATANKBA uses WMI to perform process monitoring.[1][2]
Enterprise,T1071,Application Layer Protocol: DNS,BONDUPDATER can use DNS and TXT records within its DNS tunneling protocol for command and control.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,BONDUPDATER is written in PowerShell.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BONDUPDATER can read batch commands in a file sent from its C2 server and execute them with cmd.exe.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,BONDUPDATER uses -windowstyle hidden to conceal a PowerShell window that downloads a payload.[1]
Enterprise,T1105,Ingress Tool Transfer,BONDUPDATER can download or upload files from its C2 server.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,BONDUPDATER persists using a scheduled task that executes every minute.[2]
Enterprise,T1560,Archive Collected Data: Archive via Library,TajMahal has the ability to use the open source libraries XZip/Xunzip and zlib to compress files.[1]
Enterprise,T1005,Data from Local System,TajMahal has the ability to steal documents from the local system including the print spooler queue.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,TajMahal has the ability to send collected files over its C2.[1]
Enterprise,T1083,File and Directory Discovery,"TajMahal has the ability to index files from drives, user profiles, and removable drives.[1]"
Enterprise,T1056,Input Capture: Keylogging,TajMahal has the ability to capture keystrokes on an infected host.[1]
Enterprise,T1112,Modify Registry,TajMahal can set the KeepPrintedJobs attribute for configured printers in SOFTWARE\Microsoft\Windows NT\CurrentVersion\Print\Printers to enable document stealing.[1]
Enterprise,T1027,Obfuscated Files or Information,TajMahal has used an encrypted Virtual File System to store plugins.[1]
Enterprise,T1057,Process Discovery,TajMahal has the ability to identify running processes and associated plugins on an infected host.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,TajMahal has the ability to inject DLLs for malicious plugins into running processes.[1]
Enterprise,T1113,Screen Capture,TajMahal has the ability to take screenshots on an infected host including capturing content from windows of instant messaging applications.[1]
Enterprise,T1518,Software Discovery,TajMahal has the ability to identify the Internet Explorer (IE) version on an infected host.[1]
Enterprise,T1518,Security Software Discovery,"TajMahal has the ability to identify which anti-virus products, firewalls, and anti-spyware products are in use.[1]"
Enterprise,T1082,System Information Discovery,"TajMahal has the ability to identify hardware information, the computer name, and OS information on an infected host.[1]"
Enterprise,T1016,System Network Configuration Discovery,TajMahal has the ability to identify the MAC address on an infected host.[1]
Enterprise,T1124,System Time Discovery,TajMahal has the ability to determine local time on a compromised host.[1]
Enterprise,T1087,Account Discovery: Domain Account,"Sykipot may use net group ""domain admins"" /domain to display accounts in the ""domain admins"" permissions group and net localgroup ""administrators"" to list local system administrator group membership.[3]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Sykipot has been known to establish persistence by adding programs to the Run Registry key.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Sykipot uses SSL for encrypting C2 communications.[2]
Enterprise,T1056,Input Capture: Keylogging,Sykipot contains keylogging functionality to steal passwords.[1]
Enterprise,T1057,Process Discovery,Sykipot may gather a list of running processes by running tasklist /v.[3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"Sykipot injects itself into running instances of outlook.exe, iexplore.exe, or firefox.exe.[3]"
Enterprise,T1018,Remote System Discovery,Sykipot may use net view /domain to display hostnames of available systems on a network.[3]
Enterprise,T1016,System Network Configuration Discovery,Sykipot may use ipconfig /all to gather system network configuration details.[3]
Enterprise,T1049,System Network Connections Discovery,Sykipot may use netstat -ano to display active network connections.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Winnti for Linux has used HTTP in outbound communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Winnti for Linux has decoded XOR encoded strings holding its configuration upon execution.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Winnti for Linux has used a custom TCP protocol with four-byte XOR for command and control (C2).[1]
Enterprise,T1105,Ingress Tool Transfer,"Winnti for Linux has the ability to deploy modules directly from command and control (C2) servers, possibly for remote command execution, file exfiltration, and socks5 proxying on the infected host. [1]"
Enterprise,T1027,Obfuscated Files or Information,Winnti for Linux can encode its configuration file with single-byte XOR encoding.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DarkWatchman uses HTTPS for command and control.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,DarkWatchman can execute PowerShell commands and has used PowerShell to execute a keylogger.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,DarkWatchman can use cmd.exe to execute commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,DarkWatchman uses JavaScript to perform its core functionalities.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,DarkWatchman encodes data using hexadecimal representation before sending it to the C2 server.[1]
Enterprise,T1005,Data from Local System,DarkWatchman can collect files from a compromised host.[1]
Enterprise,T1074,Data Staged: Local Data Staging,DarkWatchman can stage local data in the Windows Registry.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,DarkWatchman has the ability to self-extract as a RAR archive.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,DarkWatchman can use TLS to encrypt its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,DarkWatchman has the ability to enumerate file and folder names.[1]
Enterprise,T1070,Indicator Removal on Host,"DarkWatchman can uninstall malicious components from the Registry, stop processes, and clear the browser history.[1]"
Enterprise,T1070,File Deletion,DarkWatchman has been observed deleting its original launcher after installation.[1]
Enterprise,T1056,Input Capture: Keylogging,DarkWatchman can track key presses with a keylogger module.[1]
Enterprise,T1036,Masquerading,DarkWatchman has used an icon mimicking a text file to mask a malicious executable.[1]
Enterprise,T1112,Modify Registry,"DarkWatchman can store configuration strings, keylogger, and output of components in the Registry.[1]"
Enterprise,T1027,Obfuscated Files or Information,DarkWatchman has used Base64 to encode PowerShell commands. DarkWatchman has been delivered as compressed RAR payloads in ZIP files to victims.[1]
Enterprise,T1027,Compile After Delivery,DarkWatchman has used the csc.exe tool to compile a C# executable.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,DarkWatchman has been delivered via spearphishing emails that contain a malicious zip file.[1]
Enterprise,T1012,Query Registry,DarkWatchman can query the Registry to determine if it has already been installed on the system.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,DarkWatchman has created a scheduled task for persistence.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,DarkWatchman can search for anti-virus products on the system.[1]
Enterprise,T1082,System Information Discovery,"DarkWatchman can collect the OS version, system architecture, uptime, and computer name.[1]"
Enterprise,T1033,System Owner/User Discovery,DarkWatchman has collected the username from a victim machine.[1]
Enterprise,T1124,System Time Discovery,DarkWatchman can collect the time zone information from the system.[1]
Enterprise,T1047,Windows Management Instrumentation,DarkWatchman can use WMI to execute commands.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,AppleSeed has the ability to communicate with C2 over HTTP.[1][2]
Enterprise,T1560,Archive Collected Data,AppleSeed has compressed collected data before exfiltration.[2]
Enterprise,T1560,Archive via Utility,AppleSeed can zip and encrypt data collected on a target system.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,AppleSeed has the ability to create the Registry key name EstsoftAutoUpdate at HKLU\Software\Microsoft/Windows\CurrentVersion\RunOnce to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,AppleSeed has the ability to execute its payload via PowerShell.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,AppleSeed has the ability to use JavaScript to execute PowerShell.[1]
Enterprise,T1005,Data from Local System,AppleSeed can collect data on a compromised host.[1][2]
Enterprise,T1074,Data Staged: Local Data Staging,AppleSeed can stage files in a central location prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,AppleSeed can decode its payload prior to execution.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,AppleSeed can exfiltrate files via the C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,"AppleSeed has the ability to search for .txt, .ppt, .hwp, .pdf, and .doc files in specified directories.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,AppleSeed can delete files from a compromised host after they are exfiltrated.[1]
Enterprise,T1056,Input Capture: Keylogging,AppleSeed can use GetKeyState and GetKeyboardState to capture keystrokes on the victim’s machine.[1][2]
Enterprise,T1036,Masquerading,AppleSeed can disguise JavaScript files as PDFs.[1]
Enterprise,T1036,Match Legitimate Name or Location,AppleSeed has the ability to rename its payload to ESTCommon.dll to masquerade as a DLL belonging to ESTsecurity.[1]
Enterprise,T1106,Native API,AppleSeed has the ability to use multiple dynamically resolved API calls.[1]
Enterprise,T1027,Obfuscated Files or Information,AppleSeed has the ability to Base64 encode its payload and custom encrypt API calls.[1]
Enterprise,T1027,Software Packing,AppleSeed has used UPX packers for its payload DLL.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,AppleSeed has been distributed to victims through malicious e-mail attachments.[1]
Enterprise,T1057,Process Discovery,AppleSeed can enumerate the current process on a compromised host.[1]
Enterprise,T1113,Screen Capture,AppleSeed can take screenshots on a compromised host by calling a series of APIs.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,AppleSeed can call regsvr32.exe for execution.[1]
Enterprise,T1082,System Information Discovery,AppleSeed can identify the OS version of a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,AppleSeed can identify the IP of a targeted system.[1]
Enterprise,T1124,System Time Discovery,AppleSeed can pull a timestamp from the victim's machine.[1]
Enterprise,T1204,User Execution: Malicious File,AppleSeed can achieve execution through users running malicious file attachments distributed via email.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Unknown Logger is capable of stealing usernames and passwords from browsers on the victim machine.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Unknown Logger has functionality to disable security tools, including Kaspersky, BitDefender, and MalwareBytes.[1]"
Enterprise,T1105,Ingress Tool Transfer,Unknown Logger is capable of downloading remote files.[1]
Enterprise,T1056,Input Capture: Keylogging,Unknown Logger is capable of recording keystrokes.[1]
Enterprise,T1082,System Information Discovery,"Unknown Logger can obtain information about the victim computer name, physical memory, country, and date.[1]"
Enterprise,T1016,System Network Configuration Discovery,Unknown Logger can obtain information about the victim's IP address.[1]
Enterprise,T1033,System Owner/User Discovery,Unknown Logger can obtain information about the victim usernames.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Nidiran can create a new service named msamger (Microsoft Security Accounts Manager).[2]
Enterprise,T1105,Ingress Tool Transfer,Nidiran can download and execute files.[2]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Nidiran can create a new service named msamger (Microsoft Security Accounts Manager), which mimics the legitimate Microsoft database by the same name.[2][3]"
Enterprise,T1083,File and Directory Discovery,POORAIM can conduct file browsing.[1]
Enterprise,T1057,Process Discovery,POORAIM can enumerate processes.[1]
Enterprise,T1113,Screen Capture,POORAIM can perform screen capturing.[1]
Enterprise,T1082,System Information Discovery,"POORAIM can identify system information, including battery status.[1]"
Enterprise,T1102,Web Service: Bidirectional Communication,POORAIM has used AOL Instant Messenger for C2.[1]
Enterprise,T1083,File and Directory Discovery,POORAIM can conduct file browsing.[1]
Enterprise,T1057,Process Discovery,POORAIM can enumerate processes.[1]
Enterprise,T1113,Screen Capture,POORAIM can perform screen capturing.[1]
Enterprise,T1082,System Information Discovery,"POORAIM can identify system information, including battery status.[1]"
Enterprise,T1102,Web Service: Bidirectional Communication,POORAIM has used AOL Instant Messenger for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Linfo creates a backdoor through which remote attackers can start a remote shell.[2]
Enterprise,T1005,Data from Local System,Linfo creates a backdoor through which remote attackers can obtain data from local systems.[2]
Enterprise,T1083,File and Directory Discovery,Linfo creates a backdoor through which remote attackers can list contents of drives and search for files.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Linfo creates a backdoor through which remote attackers can delete files.[2]
Enterprise,T1105,Ingress Tool Transfer,Linfo creates a backdoor through which remote attackers can download files onto compromised hosts.[2]
Enterprise,T1057,Process Discovery,Linfo creates a backdoor through which remote attackers can retrieve a list of running processes.[2]
Enterprise,T1082,System Information Discovery,Linfo creates a backdoor through which remote attackers can retrieve system information.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,UBoatRAT has used HTTP for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,UBoatRAT can start a command shell.[1]
Enterprise,T1105,Ingress Tool Transfer,UBoatRAT can upload and download files to the victim’s machine.[1]
Enterprise,T1027,Obfuscated Files or Information,UBoatRAT encrypts instructions in the payload using a simple XOR cipher.[1]
Enterprise,T1057,Process Discovery,UBoatRAT can list running processes on the system.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"UBoatRAT checks for virtualization software such as VMWare, VirtualBox, or QEmu on the compromised machine.[1]"
Enterprise,T1102,Web Service: Bidirectional Communication,UBoatRAT has used GitHub and a public blog service in Hong Kong for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Kernel Modules and Extensions,Skidmap has the ability to install several loadable kernel modules (LKMs) on infected machines.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Skidmap has used pm.sh to download and install its main payload.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Skidmap has the ability to download, unpack, and decrypt tar.gz files .[1]"
Enterprise,T1083,File and Directory Discovery,Skidmap has checked for the existence of specific files including /usr/sbin/setenforce and /etc/selinux/config. It also has the ability to monitor the cryptocurrency miner file and process. [1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Skidmap has the ability to set SELinux to permissive mode.[1]
Enterprise,T1105,Ingress Tool Transfer,Skidmap has the ability to download files on an infected host.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Skidmap has created a fake rm binary to replace the legitimate Linux binary.[1]
Enterprise,T1027,Obfuscated Files or Information,Skidmap has encrypted it's main payload using 3DES.[1]
Enterprise,T1057,Process Discovery,Skidmap has monitored critical processes to ensure resiliency.[1]
Enterprise,T1053,Scheduled Task/Job: Cron,Skidmap has installed itself via crontab.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Skidmap has the ability to check if /usr/sbin/setenforce exists. This file controls what mode SELinux is in.[1]
Enterprise,T1082,System Information Discovery,Skidmap has the ability to check whether the infected system’s OS is Debian or RHEL/CentOS to determine which cryptocurrency miner it should use.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Ecipekac has the ability to decrypt fileless loader modules.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Ecipekac can abuse the legitimate application policytool.exe to load a malicious DLL.[1]
Enterprise,T1105,Ingress Tool Transfer,Ecipekac can download additional payloads to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information,"Ecipekac can use XOR, AES, and DES to encrypt loader shellcode.[1]"
Enterprise,T1553,Subvert Trust Controls: Code Signing,"Ecipekac has used a valid, legitimate digital signature to evade detection.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,HyperBro has used HTTPS for C2 communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,HyperBro can unpack and decrypt its payload prior to execution.[4][5]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"HyperBro has used a legitimate application to sideload a DLL to decrypt, decompress, and run a payload.[1][5]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,HyperBro has the ability to delete a specified file.[1]
Enterprise,T1105,Ingress Tool Transfer,HyperBro has the ability to download additional files.[1]
Enterprise,T1106,Native API,HyperBro has the ability to run an application (CreateProcessW) or script/file (ShellExecuteW) via API.[1]
Enterprise,T1027,Obfuscated Files or Information,HyperBro can be delivered encrypted to a compromised host.[4]
Enterprise,T1027,Software Packing,HyperBro has the ability to pack its payload.[5]
Enterprise,T1055,Process Injection,HyperBro can run shellcode it injects into a newly created process.[1]
Enterprise,T1113,Screen Capture,HyperBro has the ability to take screenshots.[1]
Enterprise,T1569,System Services: Service Execution,HyperBro has the ability to start and stop a specified service.[1]
Enterprise,T1087,Account Discovery: Email Account,Grandoreiro can parse Outlook .pst files to extract e-mail addresses.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Grandoreiro has the ability to use HTTP in C2 communications.[3][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Grandoreiro can use run keys and create link files in the startup folder for persistence.[3][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Grandoreiro can write or modify browser shortcuts to enable launching of malicious browser extensions.[3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Grandoreiro can use VBScript to execute malicious code.[1][2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Grandoreiro can steal cookie data and credentials from Google Chrome.[3][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Grandoreiro can decrypt its encrypted internal strings.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Grandoreiro can use SSL in C2 communication.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,Grandoreiro can send data it retrieves to the C2 server.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Grandoreiro can hook APIs, kill processes, break file system paths, and change ACLs to prevent security tools from running.[2]"
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Grandoreiro can block the Deibold Warsaw GAS Tecnologia security tool at the firewall level.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Grandoreiro can delete .LNK files created in the Startup folder.[2]
Enterprise,T1105,Ingress Tool Transfer,Grandoreiro can download its second stage from a hardcoded URL within the loader's code.[3][2]
Enterprise,T1056,Input Capture: Keylogging,Grandoreiro can log keystrokes on the victim's machine.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Grandoreiro has named malicious browser extensions and update files to appear legitimate.[3][2]
Enterprise,T1112,Modify Registry,Grandoreiro can store its configuration in the Registry at HKCU\Software\ under frequently changing names including %USERNAME% and ToolTech-RM.[2]
Enterprise,T1106,Native API,Grandoreiro can execute through the WinExec API.[2]
Enterprise,T1027,Obfuscated Files or Information,The Grandoreiro payload has been delivered encrypted with a custom XOR-based algorithm and also as a base64-encoded ZIP file.[1][2][2]
Enterprise,T1027,Binary Padding,Grandoreiro has added BMP images to the resources section of its Portable Executable (PE) file increasing each binary to at least 300MB in size.[2]
Enterprise,T1566,Phishing: Spearphishing Link,Grandoreiro has been spread via malicious links embedded in e-mails.[3][2]
Enterprise,T1057,Process Discovery,Grandoreiro can identify installed security tools based on process names.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Grandoreiro can list installed security products including the Trusteer and Diebold Warsaw GAS Tecnologia online banking protections.[2][2]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Grandoreiro can use MSI files to execute DLLs.[1]
Enterprise,T1082,System Information Discovery,Grandoreiro can collect the computer name and OS version from a compromised host.[2]
Enterprise,T1016,System Network Configuration Discovery,Grandoreiro can determine the IP and physical location of the compromised host via IPinfo.[2]
Enterprise,T1033,System Owner/User Discovery,Grandoreiro can collect the username from the victim's machine.[2]
Enterprise,T1124,System Time Discovery,Grandoreiro can determine the time on the victim machine via IPinfo.[2]
Enterprise,T1204,User Execution: Malicious Link,Grandoreiro has used malicious links to gain execution on victim machines.[3][2]
Enterprise,T1204,User Execution: Malicious File,Grandoreiro has infected victims via malicious attachments.[3]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Grandoreiro can detect VMWare via its I/O port and Virtual PC via the vpcext instruction.[2]
Enterprise,T1102,Web Service: Dead Drop Resolver,Grandoreiro can obtain C2 information from Google Docs.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,Grandoreiro can utilize web services including Google sites to send and receive C2 data.[3][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Dridex has used POST requests and HTTPS for C2 communications.[2][4]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Dridex has encrypted traffic with RC4.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Dridex has encrypted traffic with RSA.[2]
Enterprise,T1106,Native API,Dridex has used the OutputDebugStringW function to avoid malware analysis as part of its anti-debugging technique.[4]
Enterprise,T1027,Obfuscated Files or Information,Dridex's strings are obfuscated using RC4.[4]
Enterprise,T1090,Proxy,Dridex contains a backconnect module for tunneling network traffic through a victim's computer. Infected computers become part of a P2P botnet that can relay C2 traffic to other infected peers.[1][4]
Enterprise,T1090,Multi-hop Proxy,Dridex can use multiple layers of proxy servers to hide terminal nodes in its infrastructure.[4]
Enterprise,T1518,Software Discovery,Dridex has collected a list of installed software on the system.[4]
Enterprise,T1082,System Information Discovery,Dridex has collected the computer name and OS architecture information from the system.[4]
Enterprise,T1204,User Execution: Malicious File,Dridex has relied upon users clicking on a malicious attachment delivered through spearphishing.[4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,PlugX can be configured to use HTTP for command and control.[4][7]
Enterprise,T1071,Application Layer Protocol: DNS,PlugX can be configured to use DNS for command and control.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PlugX adds Run key entries in the Registry to establish persistence.[1][8][6]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PlugX allows actors to spawn a reverse shell on a victim.[4][6]
Enterprise,T1543,Create or Modify System Process: Windows Service,"PlugX can be added as a service to establish persistence. PlugX also has a module to change service configurations as well as start, control, and delete services.[6][1][8][9][10]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,PlugX decompresses and decrypts itself using the Microsoft API call RtlDecompressBuffer.[6][11][7]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,PlugX can use RC4 encryption in C2 communications.[7]
Enterprise,T1083,File and Directory Discovery,PlugX has a module to enumerate drives and find files recursively.[6][7]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,PlugX can modify the characteristics of folders to hide them from the compromised user.[7]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,PlugX has the ability to use DLL search order hijacking for installation on targeted systems.[7]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,PlugX has used DLL side-loading to evade anti-virus.[2][4][12][8][13][11][14]
Enterprise,T1105,Ingress Tool Transfer,PlugX has a module to download and execute files on the compromised machine.[6][7]
Enterprise,T1056,Input Capture: Keylogging,PlugX has a module for capturing keystrokes per process including window titles.[6]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"In one instance, menuPass added PlugX as a service with a display name of ""Corel Writing Tools Utility.""[9]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,PlugX has been disguised as legitimate Adobe and PotPlayer files.[7]
Enterprise,T1112,Modify Registry,"PlugX has a module to create, delete, or modify Registry keys.[6]"
Enterprise,T1106,Native API,"PlugX can use the Windows API functions GetProcAddress, LoadLibrary, and CreateProcess to execute another process.[1][7]"
Enterprise,T1027,Obfuscated Files or Information,PlugX can use API hashing and modify the names of strings to evade detection.[11][7]
Enterprise,T1057,Process Discovery,PlugX has a module to list the processes running on a machine.[6]
Enterprise,T1012,Query Registry,PlugX can enumerate and query for information contained within the Windows Registry.[1][6]
Enterprise,T1113,Screen Capture,PlugX allows the operator to capture screenshots.[6]
Enterprise,T1049,System Network Connections Discovery,PlugX has a module for enumerating TCP and UDP network connections and associated processes using the netstat command.[6]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"PlugX checks if VMware tools is running in the background by searching for any process named ""vmtoolsd"".[15]"
Enterprise,T1102,Web Service: Dead Drop Resolver,PlugX uses Pastebin to store C2 addresses.[13]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Felismus uses HTTP for C2.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Felismus uses command line for execution.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Some Felismus samples use a custom method for C2 traffic that utilizes Base64.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Some Felismus samples use a custom encryption method for C2 traffic that utilizes AES and multiple keys.[2]
Enterprise,T1105,Ingress Tool Transfer,Felismus can download files from remote servers.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Felismus has masqueraded as legitimate Adobe Content Management System files.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Felismus checks for processes associated with anti-virus vendors.[2]
Enterprise,T1082,System Information Discovery,"Felismus collects the system information, including hostname and OS version, and sends it to the C2 server.[2]"
Enterprise,T1016,System Network Configuration Discovery,Felismus collects the victim LAN IP address and sends it to the C2 server.[2]
Enterprise,T1033,System Owner/User Discovery,Felismus collects the current username and sends it to the C2 server.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Rising Sun has used HTTP for command and control.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Rising Sun can archive data using RC4 encryption and Base64 encoding prior to exfiltration.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Rising Sun executed commands using cmd.exe.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Rising Sun decrypted itself using a single-byte XOR scheme. Additionally, Rising Sun can decrypt its configuration data at runtime.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Rising Sun can send data gathered from the infected machine via HTTP POST request to the C2.[1]
Enterprise,T1083,File and Directory Discovery,"Rising Sun can enumerate information about files from the infected system, including file size, attributes, creation time, last access time, and write time. Rising Sun can enumerate the compilation timestamp of Windows executable files.[1]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Rising Sun can modify file attributes to hide files.[1]
Enterprise,T1070,Indicator Removal on Host,Rising Sun can clear process memory by overwriting it with junk bytes.[1]
Enterprise,T1070,File Deletion,Rising Sun can delete files specified by the C2.[1]
Enterprise,T1106,Native API,Rising Sun used dynamic API resolutions to various Windows APIs by leveraging LoadLibrary() and GetProcAddress().[1]
Enterprise,T1027,Obfuscated Files or Information,Configuration data used by Rising Sun is encrypted using RC4.[1]
Enterprise,T1057,Process Discovery,Rising Sun can enumerate all running processes and process information on an infected machine.[1]
Enterprise,T1082,System Information Discovery,"Rising Sun can detect the computer name, operating system, and other native system information.[1]"
Enterprise,T1016,System Network Configuration Discovery,Rising Sun can detect network adapter and IP address information.[1]
Enterprise,T1033,System Owner/User Discovery,Rising Sun can detect the username of the infected host.[1]
Enterprise,T1560,Archive Collected Data,TAINTEDSCRIBE has used FileReadZipSend to compress a file and send to C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"TAINTEDSCRIBE can copy itself into the current user’s Startup folder as ""Narrator.exe"" for persistence.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TAINTEDSCRIBE can enable Windows CLI access and execute files.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,TAINTEDSCRIBE uses a Linear Feedback Shift Register (LFSR) algorithm for network encryption.[1]
Enterprise,T1083,File and Directory Discovery,TAINTEDSCRIBE can use DirectoryList to enumerate files in a specified directory.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,TAINTEDSCRIBE can delete files from a compromised host.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,TAINTEDSCRIBE can change the timestamp of specified filenames.[1]
Enterprise,T1105,Ingress Tool Transfer,TAINTEDSCRIBE can download additional modules from its C2 server.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,The TAINTEDSCRIBE main executable has disguised itself as Microsoft’s Narrator.[1]
Enterprise,T1027,Obfuscated Files or Information: Binary Padding,TAINTEDSCRIBE can execute FileRecvWriteRand to append random bytes to the end of a file received from C2.[1]
Enterprise,T1057,Process Discovery,TAINTEDSCRIBE can execute ProcessList for process discovery.[1]
Enterprise,T1018,Remote System Discovery,The TAINTEDSCRIBE command and execution module can perform target system enumeration.[1]
Enterprise,T1082,System Information Discovery,TAINTEDSCRIBE can use DriveList to retrieve drive information.[1]
Enterprise,T1124,System Time Discovery,TAINTEDSCRIBE can execute GetLocalTime for time discovery.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BlackEnergy communicates with its C2 server over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,The BlackEnergy 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,The BlackEnergy 3 variant drops its main DLL component and then creates a .lnk shortcut to that file in the startup folder.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,One variant of BlackEnergy creates a new service using either a hard-coded or randomly generated name.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"BlackEnergy has used a plug-in to gather credentials from web browsers including FireFox, Google Chrome, and Internet Explorer.[1][2]"
Enterprise,T1083,File and Directory Discovery,"BlackEnergy gathers a list of installed apps from the uninstall program Registry. It also gathers registered mail, browser, and instant messaging clients from the Registry. BlackEnergy has searched for given file types.[1][2]"
Enterprise,T1574,Hijack Execution Flow: Services File Permissions Weakness,"One variant of BlackEnergy locates existing driver services that have been disabled and drops its driver component into one of those service's paths, replacing the legitimate executable. The malware then sets the hijacked service to start automatically to establish persistence.[1]"
Enterprise,T1070,Indicator Removal on Host,BlackEnergy has removed the watermark associated with enabling the TESTSIGNING boot configuration option by removing the relevant strings in the user32.dll.mui of the system.[1]
Enterprise,T1070,Clear Windows Event Logs,The BlackEnergy component KillDisk is capable of deleting Windows Event Logs.[5]
Enterprise,T1056,Input Capture: Keylogging,BlackEnergy has run a keylogger plug-in on a victim.[2]
Enterprise,T1057,Process Discovery,BlackEnergy has gathered a process list by using Tasklist.exe.[1][2][4]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,BlackEnergy injects its DLL component into svchost.exe.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,BlackEnergy has run a plug-in on a victim to spread through the local network by using PsExec and accessing admin shares.[2]
Enterprise,T1113,Screen Capture,BlackEnergy is capable of taking screenshots.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing Policy Modification,BlackEnergy has enabled the TESTSIGNING boot configuration option to facilitate loading of a driver component.[1]
Enterprise,T1082,System Information Discovery,"BlackEnergy has used Systeminfo to gather the OS version, as well as information on the system configuration, BIOS, the motherboard, and the processor.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,BlackEnergy has gathered information about network IP configurations using ipconfig.exe and about routing tables using route.exe.[1][2]
Enterprise,T1049,System Network Connections Discovery,BlackEnergy has gathered information about local network connections using netstat.[1][2]
Enterprise,T1047,Windows Management Instrumentation,A BlackEnergy 2 plug-in uses WMI to gather victim host details.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Catchamas adds a new service named NetAdapter to establish persistence.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Catchamas stores the gathered data from the machine in .db files and .bmp files under four separate locations.[1]
Enterprise,T1056,Input Capture: Keylogging,Catchamas collects keystrokes from the victim’s machine.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Catchamas adds a new service named NetAdapter in an apparent attempt to masquerade as a legitimate service.[1]
Enterprise,T1112,Modify Registry,Catchamas creates three Registry keys to establish persistence by adding a Windows Service.[1]
Enterprise,T1113,Screen Capture,Catchamas captures screenshots based on specific keywords in the window’s title.[1]
Enterprise,T1016,System Network Configuration Discovery,"Catchamas gathers the Mac address, IP address, and the network adapter information from the victim’s machine.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Carberp has connected to C2 servers via HTTP.[4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Carberp has maintained persistence by placing itself inside the current user's startup folder.[5]
Enterprise,T1555,Credentials from Password Stores,"Carberp's passw.plug plugin can gather account information from multiple instant messaging, email, and social media services, as well as FTP, VNC, and VPN clients.[5]"
Enterprise,T1555,Credentials from Web Browsers,"Carberp's passw.plug plugin can gather passwords saved in Opera, Internet Explorer, Safari, Firefox, and Chrome.[5]"
Enterprise,T1041,Exfiltration Over C2 Channel,Carberp has exfiltrated data via HTTP to already established C2 servers.[5][4]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Carberp has created a hidden file in the Startup folder of the current user.[4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Carberp has attempted to disable security software by creating a suspended process for the security software and injecting code to delete antivirus core files when the process is resumed.[5]
Enterprise,T1105,Ingress Tool Transfer,Carberp can download and execute new plugins from the C2 server. [5][4]
Enterprise,T1056,Input Capture: Credential API Hooking,Carberp has hooked several Windows API functions to steal credentials.[5]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Carberp has masqueraded as Windows system file names, as well as ""chkntfs.exe"" and ""syscron.exe"".[5][4]"
Enterprise,T1106,Native API,Carberp has used the NtQueryDirectoryFile and ZwQueryDirectoryFile functions to hide files and directories.[4]
Enterprise,T1027,Obfuscated Files or Information,Carberp has used XOR-based encryption to mask C2 server locations within the trojan.[5]
Enterprise,T1057,Process Discovery,Carberp has collected a list of running processes.[4]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Carberp's bootkit can inject a malicious DLL into the address space of running processes.[6]
Enterprise,T1055,Process Injection: Asynchronous Procedure Call,Carberp has queued an APC routine to explorer.exe by calling ZwQueueApcThread.[5]
Enterprise,T1012,Query Registry,"Carberp has searched the Image File Execution Options registry key for ""Debugger"" within every subkey.[5]"
Enterprise,T1021,Remote Services: VNC,Carberp can start a remote VNC session by downloading a new plugin.[5]
Enterprise,T1113,Screen Capture,Carberp can capture display screenshots with the screens_dll.dll plugin.[5]
Enterprise,T1518,Software Discovery: Security Software Discovery,Carberp has queried the infected system's registry searching for specific registry keys associated with antivirus products.[5]
Enterprise,T1082,System Information Discovery,Carberp has collected the operating system version from the infected system.[5]
Enterprise,T1497,Virtualization/Sandbox Evasion,Carberp has removed various hooks before installing the trojan or bootkit to evade sandbox analysis or other analysis software.[6]
Enterprise,T1087,Account Discovery: Local Account,TrickBot collects the users of the system.[1][7]
Enterprise,T1087,Account Discovery: Email Account,TrickBot collects email addresses from Outlook.[7]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"TrickBot uses HTTPS to communicate with its C2 servers, to get malware updates, modules that perform most of the malware logic and various configuration files.[1][8]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,TrickBot establishes persistence in the Startup folder.[9]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"TrickBot has been known to use PowerShell to download new payloads, open documents, and upload data to command and control servers. [11]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TrickBot has used macros in Excel documents to download and deploy the malware on the user’s machine.[12]
Enterprise,T1543,Create or Modify System Process: Windows Service,TrickBot establishes persistence by creating an autostart service that allows it to run whenever the machine boots.[7]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"TrickBot can obtain passwords stored in files from web browsers such as Chrome, Firefox, Internet Explorer, and Microsoft Edge, sometimes using esentutl.[7][8][11]"
Enterprise,T1555,Credentials from Password Stores: Password Managers,TrickBot can steal passwords from the KeePass open source password manager.[8]
Enterprise,T1132,Data Encoding: Standard Encoding,TrickBot can Base64-encode C2 commands.[8]
Enterprise,T1005,Data from Local System,TrickBot collects local files and information from the victim’s local machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,TrickBot decodes the configuration data and modules.[2][8][13]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,TrickBot uses a custom crypter leveraging Microsoft’s CryptoAPI to encrypt C2 traffic.[2]Newer versions of TrickBot have been known to use bcrypt to encrypt and digitally sign responses to their C2 server. [15]
Enterprise,T1041,Exfiltration Over C2 Channel,TrickBot can send information about the compromised host and upload data to a hardcoded C2 server.[8][11]
Enterprise,T1083,File and Directory Discovery,"TrickBot searches the system for all of the following file extensions: .avi, .mov, .mkv, .mpeg, .mpeg4, .mp4, .mp3, .wav, .ogg, .jpeg, .jpg, .png, .bmp, .gif, .tiff, .ico, .xlsx, and .zip. It can also obtain browsing history, cookies, and plug-in information.[1][7]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,TrickBot can disable Windows Defender.[7]
Enterprise,T1105,Ingress Tool Transfer,TrickBot downloads several additional files and saves them to the victim's machine.[5][11]
Enterprise,T1056,Input Capture: Credential API Hooking,TrickBot has the ability to capture RDP credentials by capturing the CredEnumerateA API[12]
Enterprise,T1036,Masquerading,The TrickBot downloader has used an icon to appear as a Microsoft Word document.[8]
Enterprise,T1112,Modify Registry,TrickBot can modify registry entries.[7]
Enterprise,T1106,Native API,"TrickBot uses the Windows API call, CreateProcessW(), to manage execution flow.[1] TrickBot has also used Nt* API functions to perform Process Injection.[13]"
Enterprise,T1027,Obfuscated Files or Information,TrickBot uses non-descriptive names to hide functionality and uses an AES CBC (256 bits) encryption algorithm for its loader and configuration files.[1]
Enterprise,T1027,Software Packing,TrickBot leverages a custom packer to obfuscate its functionality.[1]
Enterprise,T1069,Permission Groups Discovery,TrickBot can identify the groups the user on a compromised host belongs to.[8]
Enterprise,T1566,Phishing: Spearphishing Attachment,TrickBot has used an email with an Excel sheet containing a malicious macro to deploy the malware[12]
Enterprise,T1566,Phishing: Spearphishing Link,TrickBot has been delivered via malicious links in phishing e-mails.[8]
Enterprise,T1057,Process Discovery,TrickBot uses module networkDll for process list discovery.[9][10]
Enterprise,T1055,Process Injection,TrickBot has used Nt* Native API functions to inject code into legitimate processes such as wermgr.exe.[13]
Enterprise,T1055,Process Hollowing,TrickBot injects into the svchost.exe process.[1][5][6][8]
Enterprise,T1090,Proxy: External Proxy,TrickBot has been known to reach a command and control server via one of nine proxy IP addresses. [15] [11]
Enterprise,T1021,Remote Services: VNC,TrickBot has used a VNC module to monitor the victim and collect information to pivot to valuable systems on the network [17][11]
Enterprise,T1018,Remote System Discovery,TrickBot can enumerate computers and network devices.[8]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,TrickBot creates a scheduled task on the system that provides persistence.[1][5][6]
Enterprise,T1553,Subvert Trust Controls: Code Signing,TrickBot has come with a signed downloader component.[8]
Enterprise,T1082,System Information Discovery,"TrickBot gathers the OS version, machine name, CPU type, amount of RAM available, and UEFI/BIOS firmware information from the victim’s machine.[1][2][8][16]"
Enterprise,T1016,System Network Configuration Discovery,"TrickBot obtains the IP address, location, and other relevant network information from the victim’s machine.[1][7][8]"
Enterprise,T1033,System Owner/User Discovery,TrickBot can identify the user and groups the user belongs to on a compromised host.[8]
Enterprise,T1204,User Execution: Malicious File,TrickBot has attempted to get users to launch malicious documents to deliver its payload. [12][8]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,TrickBot has used printf and file I/O loops to delay process execution as part of API hammering.[13]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Doki has communicated with C2 over HTTPS.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Doki has executed shell scripts with /bin/sh.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Doki has used the embedTLS library for network communications.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Doki has used Ngrok to establish C2 and exfiltrate data.[1]
Enterprise,T1083,File and Directory Discovery,Doki has resolved the path of a process PID to use as a script argument.[1]
Enterprise,T1105,Ingress Tool Transfer,Doki has downloaded scripts from C2.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Doki has disguised a file as a Linux kernel module.[1]
Enterprise,T1057,Process Discovery,Doki has searched for the current process’s PID.[1]
Enterprise,T1102,Web Service,Doki has used the dogechain.info API to generate a C2 address.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Green Lambert can use DNS for C2 communications.[2][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Login Items,Green Lambert can add Login Items to establish persistence.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,"Green Lambert can use shell scripts for execution, such as /bin/sh -c.[2][3]"
Enterprise,T1543,Create or Modify System Process: Launch Agent,"Green Lambert can create a Launch Agent with the RunAtLoad key-value pair set to true, ensuring the com.apple.GrowlHelper.plist file runs every time a user logs in.[2][3]"
Enterprise,T1543,Create or Modify System Process: Launch Daemon,Green Lambert can add a plist file in the Library/LaunchDaemons to establish persistence.[2][3]
Enterprise,T1555,Credentials from Password Stores: Keychain,"Green Lambert can use Keychain Services API functions to find and collect passwords, such as SecKeychainFindInternetPassword and SecKeychainItemCopyAttributesAndData.[2][3]"
Enterprise,T1005,Data from Local System,Green Lambert can collect data from a compromised host.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Green Lambert can use multiple custom routines to decrypt strings prior to execution.[2][3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Green Lambert can delete the original executable after initial installation in addition to unused functions.[2][3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Green Lambert has created a new executable named Software Update Check to appear legitimate.[2][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Green Lambert has been disguised as a Growl help file.[2][3]
Enterprise,T1027,Obfuscated Files or Information,Green Lambert has encrypted strings.[2][3]
Enterprise,T1090,Proxy,Green Lambert can use proxies for C2 traffic.[2][3]
Enterprise,T1082,System Information Discovery,"Green Lambert can use uname to identify the operating system name, version, and processor type.[2][3]"
Enterprise,T1016,System Network Configuration Discovery,Green Lambert can obtain proxy information from a victim's machine using system environment variables.[2][3]
Enterprise,T1124,System Time Discovery,Green Lambert can collect the date and time from a compromised host.[2][3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,HIDEDRV injects a DLL for Downdelph into the explorer.exe process.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,AppleJeus has sent data to its C2 server via POST requests.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,AppleJeus has used shell scripts to execute commands after installation and set persistence mechanisms.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,AppleJeus can install itself as a service.[1]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,AppleJeus has placed a plist file within the LaunchDaemons folder and launched it manually.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,AppleJeus has decoded files received from a C2.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,AppleJeus has exfiltrated collected host information to a C2 server.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"AppleJeus has added a leading . to plist filenames, unlisting them from the Finder app and default Terminal directory listings.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,AppleJeus has deleted the MSI file after installation.[1]
Enterprise,T1027,Obfuscated Files or Information,AppleJeus has XOR-encrypted collected system information prior to sending to a C2. AppleJeus has also used the open source ADVObfuscation library for its components.[1]
Enterprise,T1566,Phishing: Spearphishing Link,AppleJeus has been distributed via spearphishing link.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,AppleJeus has created a scheduled SYSTEM task that runs when a user logs in.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,AppleJeus has used a valid digital signature from Sectigo to appear legitimate.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,AppleJeus has been installed via MSI installer.[1]
Enterprise,T1082,System Information Discovery,AppleJeus has collected the victim host information after infection.[1]
Enterprise,T1569,System Services: Launchctl,AppleJeus has loaded a plist file using the launchctl command.[1]
Enterprise,T1204,User Execution: Malicious Link,AppleJeus's spearphishing links required user interaction to navigate to the malicious website.[1]
Enterprise,T1204,User Execution: Malicious File,AppleJeus has required user execution of a malicious MSI installer.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,AppleJeus has waited a specified time before downloading a second stage payload.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Various implementations of CHOPSTICK communicate with C2 over HTTP.[2]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Various implementations of CHOPSTICK communicate with C2 over SMTP and POP3.[2]
Enterprise,T1059,Command and Scripting Interpreter,CHOPSTICK is capable of performing remote command execution.[6][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,CHOPSTICK encrypts C2 communications with RC4.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,CHOPSTICK encrypts C2 communications with TLS.[2]
Enterprise,T1083,File and Directory Discovery,"An older version of CHOPSTICK has a module that monitors all mounted volumes for files with the extensions .doc, .docx, .pgp, .gpg, .m2f, or .m2o.[2]"
Enterprise,T1105,Ingress Tool Transfer,CHOPSTICK is capable of performing remote file transmission.[6]
Enterprise,T1056,Input Capture: Keylogging,CHOPSTICK is capable of performing keylogging.[6][2][4]
Enterprise,T1112,Modify Registry,CHOPSTICK may store RC4 encrypted configuration information in the Windows Registry.[1]
Enterprise,T1090,Proxy: Internal Proxy,CHOPSTICK used a proxy server between victims and the C2 server.[2]
Enterprise,T1012,Query Registry,"CHOPSTICK provides access to the Windows Registry, which can be used to gather information.[1]"
Enterprise,T1113,Screen Capture,CHOPSTICK has the capability to capture screenshots.[4]
Enterprise,T1518,Software Discovery: Security Software Discovery,CHOPSTICK checks for antivirus and forensics software.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion,CHOPSTICK includes runtime checks to identify an analysis environment and prevent execution on it.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SDBbot has the ability to add a value to the Registry Run key to establish persistence if it detects it is running with regular user privilege. [1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SDBbot has the ability to use the command shell to execute commands on a compromised host.[1]
Enterprise,T1005,Data from Local System,SDBbot has the ability to access the file system on a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SDBbot has the ability to decrypt and decompress its payload to enable code execution.[1][2]
Enterprise,T1083,File and Directory Discovery,SDBbot has the ability to get directory listings or drive information on a compromised host.[1]
Enterprise,T1070,Indicator Removal on Host,SDBbot has the ability to clean up and remove data structures from a compromised host.[1]
Enterprise,T1070,File Deletion,SDBbot has the ability to delete files from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,SDBbot has the ability to download a DLL from C2 to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information,SDBbot has the ability to XOR the strings for its installer component with a hardcoded 128 byte key.[1]
Enterprise,T1027,Software Packing,SDBbot has used a packed installer file.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,SDBbot has the ability to inject a downloaded DLL into a newly created rundll32.exe process.[1]
Enterprise,T1090,Proxy,SDBbot has the ability to use port forwarding to establish a proxy between a target host and C2.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,SDBbot has the ability to use RDP to connect to victim's machines.[1]
Enterprise,T1082,System Information Discovery,"SDBbot has the ability to identify the OS version, country code, and computer name.[1]"
Enterprise,T1016,System Network Configuration Discovery,SDBbot has the ability to determine the domain name and whether a proxy is configured on a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,SDBbot has the ability to identify the user on a compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Dipsind uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,A Dipsind variant registers as a Winlogon Event Notify DLL to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Dipsind can spawn remote shells.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Dipsind encodes C2 traffic with base64.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Dipsind encrypts C2 data with AES256 in ECB mode.[1]
Enterprise,T1105,Ingress Tool Transfer,Dipsind can download remote files.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,FALLCHILL has been installed as a Windows service.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,FALLCHILL encrypts C2 data with RC4 encryption.[1][2]
Enterprise,T1083,File and Directory Discovery,FALLCHILL can search files on a victim.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,FALLCHILL can delete malware and associated artifacts from the victim.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,FALLCHILL can modify file or directory timestamps.[1]
Enterprise,T1082,System Information Discovery,"FALLCHILL can collect operating system (OS) version information, processor information, system name, and information about installed disks from the victim.[1]"
Enterprise,T1016,System Network Configuration Discovery,FALLCHILL collects MAC address and local IP address information from the victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Cyclops Blink can download files via HTTP and HTTPS.[1][3]
Enterprise,T1132,Data Encoding: Non-Standard Encoding,Cyclops Blink can use a custom binary scheme to encode messages with specific commands and parameters to be executed.[1]
Enterprise,T1005,Data from Local System,Cyclops Blink can upload files from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Cyclops Blink can decrypt and parse instructions sent from C2.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Cyclops Blink can encrypt C2 messages with AES-256-CBC sent underneath TLS. OpenSSL library functions are also used to encrypt each message using a randomly generated key and IV, which are then encrypted using a hard-coded RSA public key.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,Cyclops Blink has the ability to upload exfiltrated files to a C2 server.[1]
Enterprise,T1083,File and Directory Discovery,Cyclops Blink can use the Linux API statvfs to enumerate the current working directory.[1][3]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Cyclops Blink can modify the Linux iptables firewall to enable C2 communication via a stored list of port numbers.[1][3]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Cyclops Blink has the ability to use the Linux API function utime to change the timestamps of modified firmware update images.[1]
Enterprise,T1105,Ingress Tool Transfer,Cyclops Blink has the ability to download files to target systems.[1][3]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Cyclops Blink can rename its running process to [kworker:0/1] to masquerade as a Linux kernel thread. Cyclops Blink has also named RC scripts used for persistence after WatchGuard artifacts.[1]
Enterprise,T1106,Native API,Cyclops Blink can use various Linux API functions including those for execution and discovery.[1]
Enterprise,T1057,Process Discovery,Cyclops Blink can enumerate the process it is currently running under.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,Cyclops Blink has used Tor nodes for C2 traffic.[2]
Enterprise,T1082,System Information Discovery,Cyclops Blink has the ability to query device information.[1]
Enterprise,T1016,System Network Configuration Discovery,Cyclops Blink can use the Linux API if_nameindex to gather network interface names.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,HAWKBALL has used HTTP to communicate with a single hard-coded C2 server.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,HAWKBALL has encrypted data with XOR before sending it over the C2 channel.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"HAWKBALL has created a cmd.exe reverse shell, executed commands, and uploaded output via the command line.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,HAWKBALL has sent system information and files over the C2 channel.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,HAWKBALL has the ability to delete files.[1]
Enterprise,T1106,Native API,"HAWKBALL has leveraged several Windows API calls to create processes, gather disk information, and detect debugger activity.[1]"
Enterprise,T1027,Obfuscated Files or Information,HAWKBALL has encrypted the payload with an XOR-based algorithm.[1]
Enterprise,T1082,System Information Discovery,"HAWKBALL can collect the OS version, architecture information, and computer name.[1]"
Enterprise,T1033,System Owner/User Discovery,HAWKBALL can collect the user name of the system.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"SUNSPOT decrypts SUNBURST, which was stored in AES128-CBC encrypted blobs.[1]"
Enterprise,T1083,File and Directory Discovery,SUNSPOT enumerated the Orion software Visual Studio solution directory path.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Following the successful injection of SUNBURST, SUNSPOT deleted a temporary file it created named InventoryManager.bk after restoring the original SolarWinds Orion source code to the software library.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,SUNSPOT was identified on disk with a filename of taskhostsvc.exe and it created an encrypted log file at C:\Windows\Temp\vmware-vmdmp.log.[1]
Enterprise,T1106,Native API,SUNSPOT used Windows API functions such as MoveFileEx and NtQueryInformationProcess as part of the SUNBURST injection process.[1]
Enterprise,T1027,Obfuscated Files or Information,SUNSPOT encrypted log entries it collected with the stream cipher RC4 using a hard-coded key. It also uses AES128-CBC encrypted blobs for SUNBURST source code and data extracted from the SolarWinds Orion <MsBuild.exe process.[1]
Enterprise,T1057,Process Discovery,SUNSPOT monitored running processes for instances of MsBuild.exe by hashing the name of each running process and comparing it to the corresponding value 0x53D525. It also extracted command-line arguments and individual arguments from the running MsBuild.exe process to identify the directory path of the Orion software Visual Studio solution.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Emissary uses HTTP or HTTPS for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Variants of Emissary have added Run Registry keys to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Emissary has the capability to create a remote shell and execute specified commands.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Emissary is capable of configuring itself as a service.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,The C2 server response to a beacon sent by a variant of Emissary contains a 36-character GUID value that is used as an encryption key for subsequent network communications. Some variants of Emissary use various XOR operations to encrypt C2 data.[1]
Enterprise,T1105,Ingress Tool Transfer,Emissary has the capability to download files from the C2 server.[1]
Enterprise,T1027,Obfuscated Files or Information,"Variants of Emissary encrypt payloads using various XOR ciphers, as well as a custom algorithm that uses the ""srand"" and ""rand"" functions.[1][2]"
Enterprise,T1027,Binary Padding,A variant of Emissary appends junk data to the end of its DLL file to create a large file that may exceed the maximum size that anti-virus programs can scan.[2]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Emissary has the capability to execute the command net localgroup administrators.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Emissary injects its DLL file into a newly spawned Internet Explorer process.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Variants of Emissary have used rundll32.exe in Registry values added to establish persistence.[2]
Enterprise,T1082,System Information Discovery,Emissary has the capability to execute ver and systeminfo commands.[2]
Enterprise,T1016,System Network Configuration Discovery,Emissary has the capability to execute the command ipconfig /all.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,RogueRobin created a shortcut in the Windows startup folder to launch a PowerShell script each time the user logs in to establish persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,RogueRobin establishes persistence by creating a shortcut (.LNK file) in the Windows startup folder to run a script each time the user logs in.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"RogueRobin uses a command prompt to run a PowerShell script from Excel.[1] To assist in establishing persistence, RogueRobin creates %APPDATA%\OneDrive.bat and saves the following string to it:powershell.exe -WindowStyle Hidden -exec bypass -File ""%APPDATA%\OneDrive.ps1"".[2][1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RogueRobin uses Windows Script Components.[2][1]
Enterprise,T1132,Data Encoding: Standard Encoding,RogueRobin base64 encodes strings that are sent to the C2 over its DNS tunnel.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RogueRobin decodes an embedded executable using base64 and decompresses it.[2]
Enterprise,T1105,Ingress Tool Transfer,RogueRobin can save a new file to the system from the C2 server.[1][2]
Enterprise,T1027,Obfuscated Files or Information,The PowerShell script with the RogueRobin payload was obfuscated using the COMPRESS technique in Invoke-Obfuscation.[1][3]
Enterprise,T1057,Process Discovery,RogueRobin checks the running processes for evidence it may be running in a sandbox environment. It specifically enumerates processes for Wireshark and Sysinternals.[1]
Enterprise,T1113,Screen Capture,RogueRobin has a command named $screenshot that may be responsible for taking screenshots of the victim machine.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,RogueRobin enumerates running processes to search for Wireshark and Windows Sysinternals suite.[1][2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,RogueRobin uses regsvr32.exe to run a .sct file for execution.[2]
Enterprise,T1082,System Information Discovery,"RogueRobin gathers BIOS versions and manufacturers, the number of CPU cores, the total physical memory, and the computer name.[1]"
Enterprise,T1016,System Network Configuration Discovery,RogueRobin gathers the IP address and domain from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,RogueRobin collects the victim’s username and whether that user is an admin.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"RogueRobin uses WMI to check BIOS version for VBOX, bochs, qemu, virtualbox, and vm to check for evidence that the script might be executing within an analysis environment. [1][2]"
Enterprise,T1102,Web Service: Bidirectional Communication,RogueRobin has used Google Drive as a Command and Control channel. [2]
Enterprise,T1047,Windows Management Instrumentation,RogueRobin uses various WMI queries to check if the sample is running in a sandbox.[1][2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Pteranodon can use HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Pteranodon copies itself to the Startup folder to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Pteranodon can use cmd.exe for execution on victim systems.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Pteranodon can use a malicious VBS file for execution.[2]
Enterprise,T1074,Data Staged: Local Data Staging,Pteranodon creates various subdirectories under %Temp%\reports\% and copies files to those subdirectories. It also creates a folder at C:\Users\\AppData\Roaming\Microsoft\store to store screenshot JPEG files.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Pteranodon can decrypt encrypted data strings prior to using them.[4]
Enterprise,T1041,Exfiltration Over C2 Channel,Pteranodon exfiltrates screenshot files to its C2 server.[1]
Enterprise,T1083,File and Directory Discovery,Pteranodon identifies files matching certain file extension and copies them to subdirectories it created.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Pteranodon can delete files that may interfere with it executing. It also can delete temporary files and itself after the initial script executes.[1]
Enterprise,T1105,Ingress Tool Transfer,Pteranodon can download and execute additional files.[1][2][5]
Enterprise,T1106,Native API,Pteranodon has used various API calls.[4]
Enterprise,T1027,Obfuscated Files or Information,Pteranodon can use a dynamic Windows hashing algorithm to map API components.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Pteranodon schedules tasks to invoke its components in order to establish persistence.[1][2]
Enterprise,T1113,Screen Capture,Pteranodon can capture screenshots at a configurable interval.[1][5]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Pteranodon can use mshta.exe to execute an HTA file hosted on a remote server.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Pteranodon executes functions using rundll32.exe.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion,Pteranodon has the ability to use anti-detection functions to identify sandbox environments.[5]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SideTwist has used HTTP GET and POST requests over port 443 for C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SideTwist can execute shell commands on a compromised host.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,SideTwist has used Base64 for encoded C2 traffic.[1]
Enterprise,T1005,Data from Local System,SideTwist has the ability to upload files from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,SideTwist can decode and decrypt messages received from C2.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SideTwist can encrypt C2 communications with a randomly generated key.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,SideTwist has exfiltrated data over its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,SideTwist has the ability to search for specific files.[1]
Enterprise,T1105,Ingress Tool Transfer,SideTwist has the ability to download additional files.[1]
Enterprise,T1106,Native API,"SideTwist can use GetUserNameW, GetComputerNameW, and GetComputerNameExW to gather information.[1]"
Enterprise,T1082,System Information Discovery,SideTwist can collect the computer name of a targeted system.[1]
Enterprise,T1016,System Network Configuration Discovery,SideTwist has the ability to collect the domain name on a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,SideTwist can collect the username on a targeted system.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,"KeyBoy issues the command reg add ""HKLM\SOFTWARE\Microsoft\Windows NT\CurrentVersion\Winlogon"" to achieve persistence.[2] [1]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,KeyBoy uses PowerShell commands to download and execute payloads.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KeyBoy can launch interactive shells for communicating with the victim machine.[2][3]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,KeyBoy uses VBS scripts for installing files and performing execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,KeyBoy uses Python scripts for installing files and performing execution.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,KeyBoy installs a service pointing to a malicious DLL dropped to disk.[3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,KeyBoy attempts to collect passwords from browsers.[3]
Enterprise,T1083,File and Directory Discovery,KeyBoy has a command to launch a file browser or explorer on the system.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,KeyBoy uses -w Hidden to conceal a PowerShell window that downloads a payload. [2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,KeyBoy time-stomped its DLL in order to evade detection.[2]
Enterprise,T1105,Ingress Tool Transfer,KeyBoy has a download and upload functionality.[2][3]
Enterprise,T1056,Input Capture: Keylogging,KeyBoy installs a keylogger for intercepting credentials and keystrokes.[3]
Enterprise,T1027,Obfuscated Files or Information,"In one version of KeyBoy, string obfuscation routines were used to hide many of the critical values referenced in the malware.[1]"
Enterprise,T1113,Screen Capture,KeyBoy has a command to perform screen grabbing.[2]
Enterprise,T1082,System Information Discovery,"KeyBoy can gather extended system information, such as information about the operating system, disks, and memory.[2][3]"
Enterprise,T1016,System Network Configuration Discovery,KeyBoy can determine the public or WAN IP address for the system.[2]
Enterprise,T1087,Account Discovery: Local Account,Bazar can identify administrator accounts on an infected host.[4]
Enterprise,T1087,Account Discovery: Domain Account,Bazar has the ability to identify domain administrator accounts.[4][5]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Bazar can use HTTP and HTTPS over ports 80 and 443 in C2 communications.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Bazar can create or add files to Registry Run Keys to establish persistence.[1][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Bazar can use Winlogon Helper DLL to establish persistence.[6]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Bazar can establish persistence by writing shortcuts to the Windows Startup folder.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Bazar can execute a PowerShell script received from C2.[4][3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Bazar can launch cmd.exe to perform reconnaissance commands.[1][6]
Enterprise,T1005,Data from Local System,Bazar can retrieve information from the infected machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Bazar can decrypt downloaded payloads. Bazar also resolves strings and API calls at runtime.[1][4]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Bazar can send C2 communications with XOR encryption.[4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Bazar can use TLS in C2 communications.[6]
Enterprise,T1083,File and Directory Discovery,Bazar can enumerate the victim's desktop.[1][4]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Bazar has manually loaded ntdll from disk in order to identity and remove API hooks set by security products.[4]
Enterprise,T1070,Indicator Removal on Host,Bazar's loader can delete scheduled tasks created by a previous instance of the malware.[4]
Enterprise,T1070,File Deletion,Bazar can delete its loader using a batch file in the Windows temporary folder.[4]
Enterprise,T1105,Ingress Tool Transfer,"Bazar can download and deploy additional payloads, including ransomware and post-exploitation frameworks such as Cobalt Strike.[1][6][4][3]"
Enterprise,T1036,Masquerading: Masquerade Task or Service,Bazar can create a task named to appear benign.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"The Bazar loader has named malicious shortcuts ""adobe"" and mimicked communications software.[1][4][3]"
Enterprise,T1036,Masquerading: Double File Extension,The Bazar loader has used dual-extension executable files such as PreviewReport.DOC.exe.[1]
Enterprise,T1106,Native API,Bazar can use various APIs to allocate memory and facilitate code execution/injection.[1]
Enterprise,T1027,Obfuscated Files or Information,"Bazar has used XOR, RSA2, and RC4 encrypted files.[1][4][3]"
Enterprise,T1027,Software Packing,Bazar has a variant with a packed payload.[1][6]
Enterprise,T1566,Phishing: Spearphishing Link,Bazar has been spread via emails with embedded malicious links.[1][6][3]
Enterprise,T1057,Process Discovery,Bazar can identity the current process on a compromised host.[1]
Enterprise,T1055,Process Injection,Bazar can inject code through calling VirtualAllocExNuma.[1]
Enterprise,T1055,Process Hollowing,"Bazar can inject into a target process including Svchost, Explorer, and cmd using process hollowing.[1][4]"
Enterprise,T1055,Process Doppelgänging,Bazar can inject into a target process using process doppelgänging.[1][4]
Enterprise,T1012,Query Registry,Bazar can query Windows\CurrentVersion\Uninstall for installed applications.[1][4]
Enterprise,T1018,Remote System Discovery,Bazar can enumerate remote systems using Net View.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Bazar can create a scheduled task for persistence.[1][4]
Enterprise,T1518,Software Discovery,Bazar can query the Registry for installed applications.[1]
Enterprise,T1518,Security Software Discovery,Bazar can identify the installed antivirus engine.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Bazar has been signed with fake certificates including those appearing to be from VB CORPORATE PTY. LTD.[1]
Enterprise,T1082,System Information Discovery,"Bazar can fingerprint architecture, computer name, and OS version on the compromised host. Bazar can also check if the Russian language is installed on the infected machine and terminate if it is found.[1][4]"
Enterprise,T1016,System Network Configuration Discovery,Bazar can collect the IP address and NetBIOS name of an infected machine.[1]
Enterprise,T1033,System Owner/User Discovery,Bazar can identify the username of the infected user.[4]
Enterprise,T1124,System Time Discovery,Bazar can collect the time on the compromised host.[1][4]
Enterprise,T1204,User Execution: Malicious Link,Bazar can gain execution after a user clicks on a malicious link to decoy landing pages hosted on Google Docs.[1][6][3]
Enterprise,T1497,Virtualization/Sandbox Evasion,Bazar can attempt to overload sandbox analysis by sending 1550 calls to printf.[1]
Enterprise,T1497,Time Based Evasion,Bazar can use a timer to delay execution of core functionality.[4]
Enterprise,T1102,Web Service,Bazar downloads have been hosted on Google Docs.[1][6]
Enterprise,T1047,Windows Management Instrumentation,Bazar can execute a WMI query to gather information about the installed antivirus engine.[1][5]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Azorult can steal credentials from the victim's browser.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Azorult uses an XOR key to decrypt content and uses Base64 to decode the C2 address.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Azorult can encrypt C2 traffic using XOR.[1][2]
Enterprise,T1083,File and Directory Discovery,Azorult can recursively search for files in folders and collects files from the desktop with certain extensions.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Azorult can delete files from victim machines.[1]
Enterprise,T1105,Ingress Tool Transfer,Azorult can download and execute additional files. Azorult has also downloaded a ransomware payload called Hermes.[1][2]
Enterprise,T1057,Process Discovery,Azorult can collect a list of running processes by calling CreateToolhelp32Snapshot.[1][2]
Enterprise,T1055,Process Injection: Process Hollowing,"Azorult can decrypt the payload into memory, create a new suspended process of itself, then inject a decrypted payload to the new process and resume new process execution.[1]"
Enterprise,T1012,Query Registry,Azorult can check for installed software on the system under the Registry key Software\Microsoft\Windows\CurrentVersion\Uninstall.[1]
Enterprise,T1113,Screen Capture,Azorult can capture screenshots of the victim’s machines.[1]
Enterprise,T1082,System Information Discovery,"Azorult can collect the machine information, system architecture, the OS version, computer name, Windows product name, the number of CPU cores, video card information, and the system language.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,Azorult can collect host IP information from the victim’s machine.[1]
Enterprise,T1033,System Owner/User Discovery,Azorult can collect the username from the victim’s machine.[1]
Enterprise,T1124,System Time Discovery,Azorult can collect the time zone information from the system.[1][2]
Enterprise,T1059,Command and Scripting Interpreter,Melcoz has been distributed through an AutoIt loader script.[1]
Enterprise,T1059,Visual Basic,Melcoz can use VBS scripts to execute malicious DLLs.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Melcoz has the ability to steal credentials from web browsers.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Melcoz can use DLL hijacking to bypass security controls.[1]
Enterprise,T1105,Ingress Tool Transfer,Melcoz has the ability to download additional files to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Melcoz has been packed with VMProtect and Themida.[1]
Enterprise,T1566,Phishing: Spearphishing Link,Melcoz has been spread through malicious links embedded in e-mails.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Melcoz can use MSI files with embedded VBScript for execution.[1]
Enterprise,T1204,User Execution: Malicious Link,Melcoz has gained execution through victims opening malicious links.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,EvilGrab adds a Registry Run key for ctfmon.exe to establish persistence.[1]
Enterprise,T1056,Input Capture: Keylogging,EvilGrab has the capability to capture keystrokes.[1]
Enterprise,T1113,Screen Capture,EvilGrab has the capability to capture screenshots.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Naid creates a new service to establish.[2]
Enterprise,T1112,Modify Registry,Naid creates Registry entries that store information about a created service and point to a malicious DLL dropped to disk.[2]
Enterprise,T1082,System Information Discovery,Naid collects a unique identifier (UID) from a compromised host.[2]
Enterprise,T1016,System Network Configuration Discovery,Naid collects the domain name from a compromised host.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,"RDAT can use HTTP communications for C2, as well as using the WinHTTP library to make requests to the Exchange Web Services API.[1]"
Enterprise,T1071,Application Layer Protocol: Mail Protocols,RDAT can use email attachments for C2 communications.[1]
Enterprise,T1071,Application Layer Protocol: DNS,RDAT has used DNS to communicate with the C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RDAT has executed commands using cmd.exe /c.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,RDAT has created a service when it is installed on the victim machine.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,RDAT can communicate with the C2 via base32-encoded subdomains.[1]
Enterprise,T1132,Data Encoding: Non-Standard Encoding,RDAT can communicate with the C2 via subdomains that utilize base64 with character substitutions.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RDAT can deobfuscate the base64-encoded and AES-encrypted files downloaded from the C2 server.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,RDAT has used AES ciphertext to encode C2 communications.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,RDAT can exfiltrate data gathered from the infected system via the established Exchange Web Services API C2 channel.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RDAT can issue SOAP requests to delete already processed C2 emails. RDAT can also delete itself from the infected system.[1]
Enterprise,T1105,Ingress Tool Transfer,RDAT can download files via DNS.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,RDAT has used Windows Video Service as a name for malicious services.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,RDAT has masqueraded as VMware.exe.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,RDAT can also embed data within a BMP image prior to exfiltration.[1]
Enterprise,T1113,Screen Capture,RDAT can take a screenshot on the infected system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Torisma can use HTTP and HTTPS for C2 communications.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Torisma has encoded C2 communications with Base64.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Torisma has used XOR and Base64 to decode C2 data.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Torisma has encrypted its C2 communications using XOR and VEST-32.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Torisma can send victim data to an actor-controlled C2 server.[1]
Enterprise,T1106,Native API,Torisma has used various Windows API calls.[1]
Enterprise,T1027,Obfuscated Files or Information,Torisma has been Base64 encoded and AES encrypted.[1]
Enterprise,T1027,Software Packing,Torisma has been packed with Iz4 compression.[1]
Enterprise,T1082,System Information Discovery,Torisma can use GetlogicalDrives to get a bitmask of all drives available on a compromised system. It can also use GetDriveType to determine if a new drive is a CD-ROM drive.[1]
Enterprise,T1016,System Network Configuration Discovery,Torisma can collect the local MAC address using GetAdaptersInfo as well as the system's IP address.[1]
Enterprise,T1049,System Network Connections Discovery,Torisma can use WTSEnumerateSessionsW to monitor remote desktop connections.[1]
Enterprise,T1124,System Time Discovery,Torisma can collect the current time on a victim machine.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,PoisonIvy creates run key Registry entries pointing to a malicious executable dropped to disk.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Active Setup,PoisonIvy creates a Registry key in the Active Setup pointing to a malicious executable.[6][7][8]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,PoisonIvy creates a backdoor through which remote attackers can open a command-line interface.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,PoisonIvy creates a Registry subkey that registers a new service. PoisonIvy also creates a Registry entry modifying the Logical Disk Manager service to point to a malicious DLL dropped to disk.[3]
Enterprise,T1005,Data from Local System,PoisonIvy creates a backdoor through which remote attackers can steal system information.[3]
Enterprise,T1074,Data Staged: Local Data Staging,PoisonIvy stages collected data in a text file.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,PoisonIvy uses the Camellia cipher to encrypt communications.[1]
Enterprise,T1105,Ingress Tool Transfer,PoisonIvy creates a backdoor through which remote attackers can upload files.[3]
Enterprise,T1056,Input Capture: Keylogging,PoisonIvy contains a keylogger.[1][3]
Enterprise,T1112,Modify Registry,PoisonIvy creates a Registry subkey that registers a new system device.[3]
Enterprise,T1027,Obfuscated Files or Information,PoisonIvy hides any strings related to its own indicators of compromise.[3]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,PoisonIvy can inject a malicious DLL into a process.[1][3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KOMPROGO is capable of creating a reverse shell.[1]
Enterprise,T1082,System Information Discovery,KOMPROGO is capable of retrieving information about the infected system.[1]
Enterprise,T1047,Windows Management Instrumentation,KOMPROGO is capable of running WMI queries.[1]
Enterprise,T1071,Application Layer Protocol: DNS,POWERSOURCE uses DNS TXT records for C2.[1][2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"POWERSOURCE achieves persistence by setting a Registry Run key, with the path depending on whether the victim account has user or administrator access.[2]"
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,POWERSOURCE is a PowerShell backdoor.[1][2]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,"If the victim is using PowerShell 3.0 or later, POWERSOURCE writes its decoded payload to an alternate data stream (ADS) named kernel32.dll that is saved in %PROGRAMDATA%\Windows\.[2]"
Enterprise,T1105,Ingress Tool Transfer,POWERSOURCE has been observed being used to download TEXTMATE and the Cobalt Strike Beacon payload onto victims.[1]
Enterprise,T1012,Query Registry,POWERSOURCE queries Registry keys in preparation for setting Run keys to achieve persistence.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Avaddon uses registry run keys for persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Avaddon has been executed through a malicious JScript downloader.[3][1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Avaddon has decrypted encrypted strings.[2]
Enterprise,T1083,File and Directory Discovery,Avaddon has searched for specific files prior to encryption.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Avaddon looks for and attempts to stop anti-malware solutions.[2]
Enterprise,T1112,Modify Registry,Avaddon modifies several registry keys for persistence and UAC bypass.[2]
Enterprise,T1106,Native API,Avaddon has used the Windows Crypto API to generate an AES key.[3]
Enterprise,T1027,Obfuscated Files or Information,Avaddon has used encrypted strings.[2]
Enterprise,T1057,Process Discovery,Avaddon has collected information about running processes.[2]
Enterprise,T1016,System Network Configuration Discovery,Avaddon can collect the external IP address of the victim.[1]
Enterprise,T1047,Windows Management Instrumentation,Avaddon uses wmic.exe to delete shadow copies.[3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,VBShower has attempted to obtain a VBS script from command and control (C2) nodes over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,VBShower used HKCU\Software\Microsoft\Windows\CurrentVersion\Run\[a-f0-9A-F]{8} to maintain persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,VBShower has the ability to execute VBScript files.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,VBShower has attempted to complicate forensic analysis by deleting all the files contained in %APPDATA%..\Local\Temporary Internet Files\Content.Word and %APPDATA%..\Local Settings\Temporary Internet Files\Content.Word\.[1]
Enterprise,T1105,Ingress Tool Transfer,VBShower has the ability to download VBS files to the target computer.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Nebulae can achieve persistence through a Registry Run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Nebulae can use CMD to execute a process.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Nebulae can create a service to establish persistence.[1]
Enterprise,T1005,Data from Local System,Nebulae has the capability to upload collected files to C2.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Nebulae can use RC4 and XOR to encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,Nebulae can list files and directories on a compromised host.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Nebulae can use DLL side-loading to gain execution.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Nebulae has the ability to delete files and directories.[1]
Enterprise,T1105,Ingress Tool Transfer,Nebulae can download files from C2.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Nebulae has created a service named ""Windows Update Agent1"" to appear legitimate.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Nebulae uses functions named StartUserModeBrowserInjection and StopUserModeBrowserInjection indicating that it's trying to imitate chrome_frame_helper.dll.[1]
Enterprise,T1106,Native API,Nebulae has the ability to use CreateProcess to execute a process.[1]
Enterprise,T1057,Process Discovery,Nebulae can enumerate processes on a target system.[1]
Enterprise,T1082,System Information Discovery,"Nebulae can discover logical drive information including the drive type, free space, and volume information.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,BADNEWS establishes a backdoor over HTTP.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BADNEWS installs a registry Run key to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BADNEWS is capable of executing commands via cmd.exe.[1][2]
Enterprise,T1132,Data Encoding,"After encrypting C2 data, BADNEWS converts it into a hexadecimal representation and then encodes it into base64.[1]"
Enterprise,T1132,Standard Encoding,BADNEWS encodes C2 traffic with base64.[1][3][2]
Enterprise,T1005,Data from Local System,"When it first starts, BADNEWS crawls the victim's local drives and collects documents with the following extensions: .doc, .docx, .pdf, .ppt, .pptx, and .txt.[1][3]"
Enterprise,T1074,Data Staged: Local Data Staging,BADNEWS copies documents under 15MB found on the victim system to is the user's %temp%\SMB\ folder. It also copies files from USB devices to a predefined directory.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BADNEWS encrypts C2 data with a ROR by 3 and an XOR by 0x23.[1][2]
Enterprise,T1083,File and Directory Discovery,"BADNEWS identifies files with certain extensions from USB devices, then copies them to a predefined directory.[2]"
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,BADNEWS typically loads its DLL file into a legitimate signed Java or VMware executable.[1][3]
Enterprise,T1105,Ingress Tool Transfer,"BADNEWS is capable of downloading additional files through C2 channels, including a new version of itself.[1][3][2]"
Enterprise,T1056,Input Capture: Keylogging,"When it first starts, BADNEWS spawns a new thread to log keystrokes.[1][3][2]"
Enterprise,T1036,Masquerading: Invalid Code Signature,BADNEWS is sometimes signed with an invalid Authenticode certificate in an apparent effort to make it look more legitimate.[2]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,BADNEWS attempts to hide its payloads using legitimate filenames.[3]
Enterprise,T1106,Native API,BADNEWS has a command to download an .exe and execute it via CreateProcess API. It can also run with ShellExecute.[1][2]
Enterprise,T1055,Process Injection: Process Hollowing,BADNEWS has a command to download an .exe and use process hollowing to inject it into a new process.[1][2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,BADNEWS creates a scheduled task to establish by executing a malicious payload every subsequent minute.[3]
Enterprise,T1113,Screen Capture,BADNEWS has a command to take a screenshot and send it to the C2 server.[1][3]
Enterprise,T1102,Web Service: Dead Drop Resolver,BADNEWS collects C2 information via a dead drop resolver.[1][3][2]
Enterprise,T1102,Web Service: Bidirectional Communication,"BADNEWS can use multiple C2 channels, including RSS feeds, Github, forums, and blogs.[1][3][2]"
Enterprise,T1018,Remote System Discovery,Nltest may be used to enumerate remote domain controllers using options such as /dclist and /dsgetdc.[1]
Enterprise,T1016,System Network Configuration Discovery,Nltest may be used to enumerate the parent domain of a local machine using /parentdomain.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Cuba has been dropped onto systems and used for lateral movement via obfuscated PowerShell scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Cuba has used cmd.exe /c and batch files for execution.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Cuba can modify services by using the OpenService and ChangeServiceConfig functions.[1]
Enterprise,T1083,File and Directory Discovery,Cuba can enumerate files by using a variety of functions.[1]
Enterprise,T1564,Hide Artifacts: Hidden Window,Cuba has executed hidden PowerShell windows.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Cuba can use the command cmd.exe /c del to delete its artifacts from the system.[1]
Enterprise,T1105,Ingress Tool Transfer,Cuba can download files from its C2 server.[1]
Enterprise,T1056,Input Capture: Keylogging,Cuba logs keystrokes via polling by using GetKeyState and VkKeyScan functions.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Cuba has been disguised as legitimate 360 Total Security Antivirus and OpenVPN programs.[1]
Enterprise,T1106,Native API,Cuba has used several built-in API functions for discovery like GetIpNetTable and NetShareEnum.[1]
Enterprise,T1027,Obfuscated Files or Information,"Cuba has used multiple layers of obfuscation to avoid analysis, including its Base64 encoded payload.[1]"
Enterprise,T1027,Software Packing,Cuba has a packed payload when delivered.[1]
Enterprise,T1057,Process Discovery,Cuba can enumerate processes running on a victim's machine.[1]
Enterprise,T1082,System Information Discovery,"Cuba can enumerate local drives, disk type, and disk free space.[1]"
Enterprise,T1016,System Network Configuration Discovery,Cuba can retrieve the ARP cache from the local system by using GetIpNetTable.[1]
Enterprise,T1049,System Network Connections Discovery,Cuba can use the function GetIpNetTable to recover the last connections to the victim's machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,RCSession can use HTTP in C2 communications.[3][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,RCSession has the ability to modify a Registry Run key to establish persistence.[3][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RCSession can use cmd.exe for execution on compromised hosts.[3]
Enterprise,T1005,Data from Local System,RCSession can collect data from a compromised host.[4][3]
Enterprise,T1573,Encrypted Channel,RCSession can use an encrypted beacon to check in with C2.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,RCSession can be installed via DLL side-loading.[1][3][4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RCSession can remove files from a targeted system.[4]
Enterprise,T1105,Ingress Tool Transfer,RCSession has the ability to drop additional files to an infected machine.[4]
Enterprise,T1056,Input Capture: Keylogging,RCSession has the ability to capture keystrokes on a compromised host.[3][4]
Enterprise,T1036,Masquerading,RCSession has used a file named English.rtf to appear benign on victim hosts.[1][3]
Enterprise,T1112,Modify Registry,RCSession can write its configuration file to the Registry.[3][4]
Enterprise,T1106,Native API,RCSession can use WinSock API for communication including WSASend and WSARecv.[4]
Enterprise,T1027,Obfuscated Files or Information,RCSession can compress and obfuscate its strings to evade detection on a compromised host.[3]
Enterprise,T1057,Process Discovery,RCSession can identify processes based on PID.[4]
Enterprise,T1055,Process Injection: Process Hollowing,RCSession can launch itself from a hollowed svchost.exe process.[1][3][4]
Enterprise,T1113,Screen Capture,RCSession can capture screenshots from a compromised host.[4]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,RCSession has the ability to execute inside the msiexec.exe process.[4]
Enterprise,T1082,System Information Discovery,RCSession can gather system information from a compromised host.[4]
Enterprise,T1033,System Owner/User Discovery,"RCSession can gather system owner information, including user and administrator privileges.[4]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Drovorub can use the WebSocket protocol and has initiated communication with C2 servers with an HTTP Upgrade request.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Kernel Modules and Extensions,Drovorub can use kernel modules to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Drovorub can execute arbitrary commands as root on a compromised system.[1]
Enterprise,T1005,Data from Local System,Drovorub can transfer files from the victim machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Drovorub has de-obsfuscated XOR encrypted payloads in WebSocket messages.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Drovorub can exfiltrate files over C2 infrastructure.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Drovorub can delete specific files from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,Drovorub can download files to a compromised host.[1]
Enterprise,T1027,Obfuscated Files or Information,Drovorub has used XOR encrypted payloads in WebSocket client to server messages.[1]
Enterprise,T1090,Proxy: Internal Proxy,Drovorub can use a port forwarding rule on its agent module to relay network traffic through the client module to a remote host on the same network.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FoggyWeb has the ability to communicate with C2 servers over HTTP GET/POST requests.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,FoggyWeb can invoke the Common.Compress method to compress data with the C# GZipStream compression class.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,"FoggyWeb can use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also, FoggyWeb can encode C2 command output within a legitimate WebP file.[1]"
Enterprise,T1005,Data from Local System,FoggyWeb can retrieve configuration data from a compromised AD FS server.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,FoggyWeb can be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,FoggyWeb has used a dynamic XOR key and custom XOR methodology for C2 communications.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,FoggyWeb can remotely exfiltrate sensitive information from a compromised AD FS server.[1]
Enterprise,T1083,File and Directory Discovery,FoggyWeb's loader can check for the FoggyWeb backdoor .pri file on a compromised AD FS server.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,FoggyWeb's loader has used DLL Search Order Hijacking to load malicious code instead of the legitimate version.dll during the Microsoft.IdentityServer.ServiceHost.exe execution process.[1]
Enterprise,T1105,Ingress Tool Transfer,FoggyWeb can receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.[1]
Enterprise,T1036,Masquerading,"FoggyWeb can masquerade the output of C2 commands as a fake, but legitimately formatted WebP file.[1]"
Enterprise,T1036,Match Legitimate Name or Location,"FoggyWeb can be disguised as a Visual Studio file such as Windows.Data.TimeZones.zh-PH.pri to evade detection. Also, FoggyWeb's loader can mimic a genuine dll file that carries out the same import functions as the legitimate Windows version.dll file.[1]"
Enterprise,T1106,Native API,FoggyWeb's loader can use API functions to load the FoggyWeb backdoor into the same Application Domain within which the legitimate AD FS managed code is executed.[1]
Enterprise,T1027,Obfuscated Files or Information,FoggyWeb has been XOR-encoded.[1]
Enterprise,T1027,Compile After Delivery,FoggyWeb can compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.[1]
Enterprise,T1057,Process Discovery,FoggyWeb's loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server's Microsoft.IdentityServer.ServiceHost.exe process.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,FoggyWeb has the ability to communicate with C2 servers over HTTP GET/POST requests.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,FoggyWeb can invoke the Common.Compress method to compress data with the C# GZipStream compression class.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,"FoggyWeb can use a dynamic XOR key and a custom XOR methodology to encode data before exfiltration. Also, FoggyWeb can encode C2 command output within a legitimate WebP file.[1]"
Enterprise,T1005,Data from Local System,FoggyWeb can retrieve configuration data from a compromised AD FS server.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,FoggyWeb can be decrypted in memory using a Lightweight Encryption Algorithm (LEA)-128 key and decoded using a XOR key.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,FoggyWeb has used a dynamic XOR key and custom XOR methodology for C2 communications.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,FoggyWeb can remotely exfiltrate sensitive information from a compromised AD FS server.[1]
Enterprise,T1083,File and Directory Discovery,FoggyWeb's loader can check for the FoggyWeb backdoor .pri file on a compromised AD FS server.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,FoggyWeb's loader has used DLL Search Order Hijacking to load malicious code instead of the legitimate version.dll during the Microsoft.IdentityServer.ServiceHost.exe execution process.[1]
Enterprise,T1105,Ingress Tool Transfer,FoggyWeb can receive additional malicious components from an actor controlled C2 server and execute them on a compromised AD FS server.[1]
Enterprise,T1036,Masquerading,"FoggyWeb can masquerade the output of C2 commands as a fake, but legitimately formatted WebP file.[1]"
Enterprise,T1036,Match Legitimate Name or Location,"FoggyWeb can be disguised as a Visual Studio file such as Windows.Data.TimeZones.zh-PH.pri to evade detection. Also, FoggyWeb's loader can mimic a genuine dll file that carries out the same import functions as the legitimate Windows version.dll file.[1]"
Enterprise,T1106,Native API,FoggyWeb's loader can use API functions to load the FoggyWeb backdoor into the same Application Domain within which the legitimate AD FS managed code is executed.[1]
Enterprise,T1027,Obfuscated Files or Information,FoggyWeb has been XOR-encoded.[1]
Enterprise,T1027,Compile After Delivery,FoggyWeb can compile and execute source code sent to the compromised AD FS server via a specific HTTP POST.[1]
Enterprise,T1057,Process Discovery,FoggyWeb's loader can enumerate all Common Language Runtimes (CLRs) and running Application Domains in the compromised AD FS server's Microsoft.IdentityServer.ServiceHost.exe process.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TDTESS provides a reverse shell on the victim.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"If running as administrator, TDTESS installs itself as a new service named bmwappushservice to establish persistence.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,TDTESS creates then deletes log files during installation of itself as a service.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,"After creating a new service for persistence, TDTESS sets the file creation time for the service to the creation time of the victim's legitimate svchost.exe file.[1]"
Enterprise,T1105,Ingress Tool Transfer,TDTESS has a command to download and execute an additional file.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,WarzoneRAT can add itself to the HKCU\Software\Microsoft\Windows\CurrentVersion\Run and HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\UIF2IS20VK Registry keys.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,WarzoneRAT can use PowerShell to download files and execute commands.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,WarzoneRAT can use cmd.exe to execute malicious code.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,WarzoneRAT has the capability to grab passwords from numerous web browsers as well as from Outlook and Thunderbird email clients.[1][2]
Enterprise,T1005,Data from Local System,WarzoneRAT can collect data from a compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,WarzoneRAT can use XOR 0x45 to decrypt obfuscated code.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,WarzoneRAT can encrypt its C2 with RC4 with the password warzone160\x00.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,WarzoneRAT can send collected victim data to its C2 server.[1]
Enterprise,T1083,File and Directory Discovery,WarzoneRAT can enumerate directories on a compromise host.[1]
Enterprise,T1564,Hide Artifacts,WarzoneRAT can masquerade the Process Environment Block on a compromised host to hide it's attempts to elevate privileges through IFileOperation.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,WarzoneRAT can disarm Windows Defender during the UAC process to evade detection.[1]
Enterprise,T1105,Ingress Tool Transfer,WarzoneRAT can download and execute additional files.[1]
Enterprise,T1056,Input Capture: Keylogging,"WarzoneRAT has the capability to install a live and offline keylogger, including through the use of the GetAsyncKeyState Windows API.[1][2]"
Enterprise,T1112,Modify Registry,WarzoneRAT can create HKCU\Software\Classes\Folder\shell\open\command as a new registry key during privilege escalation.[2][1]
Enterprise,T1106,Native API,WarzoneRAT can use a variety of API calls on a compromised host.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,WarzoneRAT has been distributed as a malicious attachment within an email.[1][3]
Enterprise,T1057,Process Discovery,WarzoneRAT can obtain a list of processes on a compromised host.[1]
Enterprise,T1055,Process Injection,WarzoneRAT has the ability to inject malicious DLLs into a specific process for privilege escalation.[1]
Enterprise,T1090,Proxy,WarzoneRAT has the capability to act as a reverse proxy.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,WarzoneRAT has the ability to control an infected PC using RDP.[1]
Enterprise,T1021,Remote Services: VNC,WarzoneRAT has the ability of performing remote desktop access via a VNC console.[1]
Enterprise,T1082,System Information Discovery,"WarzoneRAT can collect compromised host information, including OS version, PC name, RAM size, and CPU details.[1]"
Enterprise,T1204,User Execution: Malicious File,WarzoneRAT has relied on a victim to open a malicious attachment within an email for execution.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sys10 uses HTTP for C2.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Sys10 uses an XOR 0x1 loop to encrypt its C2 domain.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,Sys10 collects the group name of the logged-in user and sends it to the C2.[1]
Enterprise,T1082,System Information Discovery,"Sys10 collects the computer name, OS versioning information, and OS install date and sends the information to the C2.[1]"
Enterprise,T1016,System Network Configuration Discovery,Sys10 collects the local IP address of the victim and sends it to the C2.[1]
Enterprise,T1033,System Owner/User Discovery,Sys10 collects the account name of the logged-in user and sends it to the C2.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ABK has the ability to use HTTP in communications with C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ABK has the ability to use cmd to run a Portable Executable (PE) on the compromised host.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ABK has the ability to decrypt AES encrypted payloads.[1]
Enterprise,T1105,Ingress Tool Transfer,ABK has the ability to download files from C2.[1]
Enterprise,T1027,Obfuscated Files or Information: Steganography,ABK can extract a malicious Portable Executable (PE) from a photo.[1]
Enterprise,T1055,Process Injection,ABK has the ability to inject shellcode into svchost.exe.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,ABK has the ability to identify the installed anti-virus product on the compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,RedLeaves can communicate to its C2 over HTTP and HTTPS if directed.[2][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"RedLeaves attempts to add a shortcut file in the Startup folder to achieve persistence. If this fails, it attempts to add Registry Run keys.[1][4]"
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,RedLeaves attempts to add a shortcut file in the Startup folder to achieve persistence.[1][4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RedLeaves can receive and execute commands with cmd.exe. It can also provide a reverse shell.[1][2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,RedLeaves can gather browser usernames and passwords.[4]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"RedLeaves has encrypted C2 traffic with RC4, previously using keys of 88888888 and babybear.[1]"
Enterprise,T1083,File and Directory Discovery,RedLeaves can enumerate and search for files and directories.[1][2]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,RedLeaves is launched through use of DLL search order hijacking to load a malicious dll.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RedLeaves can delete specified files.[1]
Enterprise,T1105,Ingress Tool Transfer,RedLeaves is capable of downloading a file from a specified URL.[1]
Enterprise,T1027,Obfuscated Files or Information,"A RedLeaves configuration file is encrypted with a simple XOR key, 0x53.[1]"
Enterprise,T1113,Screen Capture,RedLeaves can capture screenshots.[2][4]
Enterprise,T1082,System Information Discovery,"RedLeaves can gather extended system information including the hostname, OS version number, platform, memory information, time elapsed since system startup, and CPU information.[1][4]"
Enterprise,T1016,System Network Configuration Discovery,RedLeaves can obtain information about network parameters.[1]
Enterprise,T1049,System Network Connections Discovery,RedLeaves can enumerate drives and Remote Desktop sessions.[1]
Enterprise,T1033,System Owner/User Discovery,RedLeaves can obtain information about the logged on user both locally and for Remote Desktop sessions.[1]
Enterprise,T1087,Account Discovery: Email Account,Backdoor.Oldrea collects address book information from Outlook.[1]
Enterprise,T1560,Archive Collected Data,Backdoor.Oldrea writes collected data to a temporary file in an encrypted form before exfiltration to a C2 server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Backdoor.Oldrea adds Registry Run keys to achieve persistence.[1][2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Some Backdoor.Oldrea samples contain a publicly available Web browser password recovery tool.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,"Some Backdoor.Oldrea samples use standard Base64 + bzip2, and some use standard Base64 + reverse XOR + RSA-2048 to decrypt data received from C2 servers.[1]"
Enterprise,T1083,File and Directory Discovery,"Backdoor.Oldrea collects information about available drives, default browser, desktop file list, My Documents, Internet history, program files, and root of available drives. It also searches for ICS-related software files.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Backdoor.Oldrea contains a cleanup module that removes traces of itself from the victim.[1]
Enterprise,T1105,Ingress Tool Transfer,Backdoor.Oldrea can download additional modules from C2.[2]
Enterprise,T1057,Process Discovery,Backdoor.Oldrea collects information about running processes.[1]
Enterprise,T1055,Process Injection,Backdoor.Oldrea injects itself into explorer.exe.[1][2]
Enterprise,T1018,Remote System Discovery,Backdoor.Oldrea can enumerate and map ICS-specific systems in victim environments.[2]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Backdoor.Oldrea can use rundll32 for execution on compromised hosts.[2]
Enterprise,T1082,System Information Discovery,Backdoor.Oldrea collects information about the OS and computer name.[1][2]
Enterprise,T1016,System Network Configuration Discovery,Backdoor.Oldrea collects information about the Internet adapter configuration.[1][2]
Enterprise,T1033,System Owner/User Discovery,Backdoor.Oldrea collects the current username from the victim.[1]
Enterprise,T1071,Application Layer Protocol,Hildegard has used an IRC channel for C2 communications.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Hildegard has used shell scripts for execution.[1]
Enterprise,T1543,Create or Modify System Process: Systemd Service,Hildegard has started a monero service.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Hildegard has decrypted ELF files with AES.[1]
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,Hildegard has modified /etc/ld.so.preload to intercept shared library import functions.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Hildegard has modified DNS resolvers to evade DNS monitoring tools.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Command History,Hildegard has used history -c to clear script shell logs.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Hildegard has deleted scripts after execution.[1]
Enterprise,T1105,Ingress Tool Transfer,Hildegard has downloaded additional scripts that build and run Monero cryptocurrency miners.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Hildegard has disguised itself as a known Linux process.[1]
Enterprise,T1027,Obfuscated Files or Information,Hildegard has encrypted an ELF file.[1]
Enterprise,T1027,Software Packing,Hildegard has packed ELF files into other binaries.[1]
Enterprise,T1082,System Information Discovery,"Hildegard has collected the host's OS, CPU, and memory information.[1]"
Enterprise,T1102,Web Service,Hildegard has downloaded scripts from GitHub.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Crimson can use a HTTP GET request to download its final payload.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Crimson can add Registry run keys for persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Crimson has the ability to execute commands with the COMSPEC environment variable.[2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Crimson contains a module to steal credentials from Web browsers on the victim machine.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Crimson can decode its encoded PE file prior to execution.[1]
Enterprise,T1083,File and Directory Discovery,"Crimson contains commands to list files and directories, as well as search for files matching certain extensions from a defined list.[1][2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Crimson has the ability to delete files from a compromised host.[1][2]
Enterprise,T1105,Ingress Tool Transfer,Crimson contains a command to retrieve files from its C2 server.[1][2]
Enterprise,T1056,Input Capture: Keylogging,Crimson can use a module to perform keylogging on compromised hosts.[1][2]
Enterprise,T1112,Modify Registry,Crimson can set a Registry key to determine how long it has been installed and possibly to indicate the version number.[1]
Enterprise,T1057,Process Discovery,Crimson contains a command to list processes.[1][2]
Enterprise,T1012,Query Registry,Crimson can check the Registry for the presence of HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\last_edate to determine how long it has been installed on a host.[1]
Enterprise,T1113,Screen Capture,Crimson contains a command to perform screen captures.[1][2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Crimson contains a command to collect information about anti-virus software on the victim.[1][2]
Enterprise,T1082,System Information Discovery,"Crimson contains a command to collect the victim PC name, disk drive information, and operating system.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,Crimson contains a command to collect the victim MAC address and LAN IP.[1][2]
Enterprise,T1033,System Owner/User Discovery,Crimson can identify the user on a targeted system.[1][2]
Enterprise,T1124,System Time Discovery,Crimson has the ability to determine the date and time on a compromised host.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Crimson can determine when it has been installed on a host for at least 15 days before downloading the final payload.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"Umbreon provides access using both standard facilities like SSH and additional access using its backdoor Espeon, providing a reverse shell upon receipt of a special packet[1]"
Enterprise,T1078,Valid Accounts: Local Accounts,Umbreon creates valid local users to provide access to the system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Gold Dragon uses HTTP for communication to the control servers.[1]
Enterprise,T1560,Archive Collected Data,Gold Dragon encrypts data using Base64 before being sent to the command and control server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Gold Dragon establishes persistence in the Startup folder.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Gold Dragon uses cmd.exe to execute commands for discovery.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Gold Dragon stores information gathered from the endpoint in a file named 1.hwp.[1]
Enterprise,T1083,File and Directory Discovery,"Gold Dragon lists the directories for Desktop, program files, and the user’s recently accessed files.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Gold Dragon terminates anti-malware processes if they’re found running on the system.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Gold Dragon deletes one of its files, 2.hwp, from the endpoint after establishing persistence.[1]"
Enterprise,T1105,Ingress Tool Transfer,Gold Dragon can download additional components from the C2 server.[1]
Enterprise,T1057,Process Discovery,Gold Dragon checks the running processes on the victim’s machine.[1]
Enterprise,T1012,Query Registry,Gold Dragon enumerates registry keys with the command regkeyenum and obtains information for the Registry key HKEY_CURRENT_USER\SOFTWARE\Microsoft\Windows\CurrentVersion\Run.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Gold Dragon checks for anti-malware products and processes.[1]
Enterprise,T1082,System Information Discovery,Gold Dragon collects endpoint information using the systeminfo command.[1]
Enterprise,T1033,System Owner/User Discovery,Gold Dragon collects the endpoint victim's username and uses it as a basis for downloading additional components from the C2 server.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ZxShell has used HTTP for C2 connections.[2]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,ZxShell has used FTP for C2 connections.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,ZxShell can launch a reverse command shell.[1][2][3]
Enterprise,T1543,Create or Modify System Process: Windows Service,ZxShell can create a new service using the service parser function ProcessScCommand.[2]
Enterprise,T1005,Data from Local System,ZxShell can transfer files from a compromised host.[2]
Enterprise,T1083,File and Directory Discovery,ZxShell has a command to open a file manager and explorer on the system.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,ZxShell can kill AV products' processes.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,ZxShell can disable the firewall by modifying the registry key HKLM\SYSTEM\CurrentControlSet\Services\SharedAccess\Parameters\FirewallPolicy\StandardProfile.[2]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,ZxShell has a command to clear system event logs.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,ZxShell can delete files from the system.[1][2]
Enterprise,T1105,Ingress Tool Transfer,ZxShell has a command to transfer files from a remote host.[2]
Enterprise,T1056,Input Capture: Keylogging,ZxShell has a feature to capture a remote computer's keystrokes using a keylogger.[1][2]
Enterprise,T1056,Input Capture: Credential API Hooking,ZxShell hooks several API functions to spawn system threads.[2]
Enterprise,T1112,Modify Registry,ZxShell can create Registry entries to enable services to run.[2]
Enterprise,T1106,Native API,ZxShell can leverage native API including RegisterServiceCtrlHandler to register a service.RegisterServiceCtrlHandler
Enterprise,T1057,Process Discovery,"ZxShell has a command, ps, to obtain a listing of processes on the system.[2]"
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,ZxShell is injected into a shared SVCHOST process.[2]
Enterprise,T1090,Proxy,ZxShell can set up an HTTP or SOCKS proxy.[1][2]
Enterprise,T1012,Query Registry,ZxShell can query the netsvc group value data located in the svchost group Registry key.[2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,ZxShell has remote desktop functionality.[2]
Enterprise,T1021,Remote Services: VNC,ZxShell supports functionality for VNC sessions.[2]
Enterprise,T1113,Screen Capture,ZxShell can capture screenshots.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,ZxShell has used rundll32.exe to execute other DLLs and named pipes.[2]
Enterprise,T1082,System Information Discovery,"ZxShell can collect the local hostname, operating system details, CPU speed, and total physical memory.[2]"
Enterprise,T1033,System Owner/User Discovery,ZxShell can collect the owner and organization information from the target workstation.[2]
Enterprise,T1569,System Services: Service Execution,ZxShell can create a new service for execution.[2]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,Fgdump can dump Windows password hashes.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Pandora can communicate over HTTP.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Pandora has the ability to gain system privileges through Windows services.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Pandora has the ability to encrypt communications with D3DES.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Pandora can use DLL side-loading to execute malicious payloads.[1]
Enterprise,T1105,Ingress Tool Transfer,Pandora can load additional drivers and files onto a victim machine.[1]
Enterprise,T1112,Modify Registry,Pandora can write an encrypted token to the Registry to enable processing of remote commands.[1]
Enterprise,T1027,Obfuscated Files or Information,Pandora has the ability to compress stings with QuickLZ.[1]
Enterprise,T1057,Process Discovery,Pandora can monitor processes on a compromised host.[1]
Enterprise,T1055,Process Injection,Pandora can start and inject code into a new svchost process.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing Policy Modification,Pandora can use CVE-2017-15303 to disable Windows Driver Signature Enforcement (DSE) protection and load its driver.[1]
Enterprise,T1569,System Services: Service Execution,Pandora has the ability to install itself as a Windows service.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,KONNI has used HTTP POST for C2.[1][5]
Enterprise,T1560,Archive Collected Data,KONNI has encrypted data and files prior to exfiltration.[5]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,A version of KONNI has dropped a Windows shortcut into the Startup folder to establish persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,A version of KONNI drops a Windows shortcut on the victim’s machine to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,KONNI used PowerShell to download and execute a specific 64-bit version of the malware.[1][5]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KONNI has used cmd.exe to execute arbitrary commands on the infected host across different stages of the infection chain.[1][4][5]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,KONNI has executed malicious JavaScript code.[5]
Enterprise,T1543,Create or Modify System Process: Windows Service,KONNI has registered itself as a service using its export function.[5]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"KONNI can steal profiles (containing credential information) from Firefox, Chrome, and Opera.[1]"
Enterprise,T1132,Data Encoding: Standard Encoding,KONNI has used a custom base64 key to encode stolen data before exfiltration.[4]
Enterprise,T1005,Data from Local System,KONNI has stored collected information and discovered processes in a tmp file.[5]
Enterprise,T1140,Deobfuscate/Decode Files or Information,KONNI has used certutil to download and decode base64 encoded strings and has also devoted a custom section to performing all the components of the deobfuscation process.[4][5]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,KONNI has used AES to encrypt C2 traffic.[6]
Enterprise,T1041,Exfiltration Over C2 Channel,KONNI has sent data and files to its C2 server.[1][5][6]
Enterprise,T1083,File and Directory Discovery,"A version of KONNI searches for filenames created with a previous version of the malware, suggesting different versions targeted the same victims and the versions may work together.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,KONNI can delete files.[1]
Enterprise,T1105,Ingress Tool Transfer,KONNI can download files and execute them on the victim’s machine.[1][5]
Enterprise,T1056,Input Capture: Keylogging,KONNI has the capability to perform keylogging.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,KONNI has pretended to be the xmlProv Network Provisioning service.[5]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"KONNI has created a shortcut called ""Anti virus service.lnk"" in an apparent attempt to masquerade as a legitimate file.[1]"
Enterprise,T1112,Modify Registry,"KONNI has modified registry keys of ComSysApp, Svchost, and xmlProv on the machine to gain persistence.[4][5]"
Enterprise,T1106,Native API,KONNI has hardcoded API calls within its functions to use on the victim's machine.[5]
Enterprise,T1027,Obfuscated Files or Information,KONNI is heavily obfuscated and includes encrypted configuration files.[5]
Enterprise,T1027,Software Packing,KONNI has been packed for obfuscation.[6]
Enterprise,T1566,Phishing: Spearphishing Attachment,KONNI has been delivered via spearphishing campaigns through a malicious Word document.[5]
Enterprise,T1057,Process Discovery,KONNI has used the command cmd /c tasklist to get a snapshot of the current processes on the target machine.[4][5]
Enterprise,T1113,Screen Capture,KONNI can take screenshots of the victim’s machine.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,KONNI has used Rundll32 to execute its loader for privilege escalation purposes.[4][5]
Enterprise,T1082,System Information Discovery,"KONNI can gather the OS version, architecture information, connected drives, hostname, RAM size, and disk space information from the victim’s machine and has used cmd /c systeminfo command to get a snapshot of the current system state of the target machine.[1][4][5]"
Enterprise,T1016,System Network Configuration Discovery,KONNI can collect the IP address from the victim’s machine.[1]
Enterprise,T1049,System Network Connections Discovery,KONNI has used net session on the victim's machine.[5]
Enterprise,T1033,System Owner/User Discovery,KONNI can collect the username from the victim’s machine.[1]
Enterprise,T1204,User Execution: Malicious File,KONNI has relied on a victim to enable malicious macros within an attachment delivered via email.[5]
Enterprise,T1005,Data from Local System,PUNCHTRACK scrapes memory for properly formatted payment card data.[1][2]
Enterprise,T1074,Data Staged: Local Data Staging,PUNCHTRACK aggregates collected data in a tmp file.[2]
Enterprise,T1027,Obfuscated Files or Information,PUNCHTRACK is loaded and executed by a highly obfuscated launcher.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,"OSX/Shlayer can use bash scripts to check the macOS version, download payloads, and extract bytes from files. OSX/Shlayer uses the command sh -c tail -c +1381... to extract bytes at an offset from a specified file. OSX/Shlayer uses the curl -fsL ""$url"" >$tmp_path command to download malicious payloads into a temporary directory.[1][3][6][7]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,OSX/Shlayer can base64-decode and AES-decrypt downloaded payloads.[1] Versions of OSX/Shlayer pass encrypted and password-protected code to openssl and then write the payload to the /tmp folder.[3][6]
Enterprise,T1083,File and Directory Discovery,"OSX/Shlayer uses the command appDir=""$(dirname $(dirname ""$currentDir""))"" and $(dirname ""$(pwd -P)"") to construct installation paths.[3][6]"
Enterprise,T1564,Hide Artifacts,"OSX/Shlayer uses the mktemp utility to make random and unique filenames for payloads, such as export tmpDir=""$(mktemp -d /tmp/XXXXXXXXXXXX)"" or mktemp -t Installer.[3][6][8]"
Enterprise,T1564,Hidden Files and Directories,OSX/Shlayer executes a .command script from a hidden directory in a mounted DMG.[1]
Enterprise,T1105,Ingress Tool Transfer,"OSX/Shlayer can download payloads, and extract bytes from files. OSX/Shlayer uses the curl -fsL ""$url"" >$tmp_path command to download malicious payloads into a temporary directory.[1][3][6][7]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,OSX/Shlayer can masquerade as a Flash Player update.[1][2]
Enterprise,T1553,Subvert Trust Controls: Gatekeeper Bypass,"If running with elevated privileges, OSX/Shlayer uses the spctl command to disable Gatekeeper protection for a downloaded file. OSX/Shlayer also leveraged system links pointing to bash scripts in the downloaded DMG file to bypass Gatekeeper, a flaw patched in macOS 11.3 and later versions.[1][8]"
Enterprise,T1082,System Information Discovery,"OSX/Shlayer collects the IOPlatformUUID, session UID, and the OS version using the command sw_vers -productVersion.[1][3]"
Enterprise,T1204,User Execution: Malicious File,OSX/Shlayer relies on users mounting and executing a malicious DMG file.[1][2]
Enterprise,T1083,File and Directory Discovery,NotPetya searches for files ending with dozens of different file extensions prior to encryption.[4]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,NotPetya uses wevtutil to clear the Windows event logs.[1][4]
Enterprise,T1036,Masquerading,NotPetya drops PsExec with the filename dllhost.dat.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,NotPetya contains a modified version of Mimikatz to help gather credentials that are later used for lateral movement.[1][2][5]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,"NotPetya can use PsExec, which interacts with the ADMIN$ network share to execute commands on remote systems.[1][2][6]"
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,NotPetya creates a task to reboot the system one hour after infection.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,NotPetya determines if specific antivirus programs are running on an infected host machine.[4]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,NotPetya uses rundll32.exe to install itself on remote systems when accessed via PsExec or wmic.[1]
Enterprise,T1569,System Services: Service Execution,NotPetya can use PsExec to help propagate itself across a network.[1][2]
Enterprise,T1078,Valid Accounts: Local Accounts,NotPetya can use valid credentials with PsExec or wmic to spread itself to remote systems.[1][2]
Enterprise,T1047,Windows Management Instrumentation,NotPetya can use wmic to help propagate itself across a network.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RDFSNIFFER has the capability of deleting local files.[1]
Enterprise,T1056,Input Capture: Credential API Hooking,RDFSNIFFER hooks several Win32 API functions to hijack elements of the remote system management user-interface.[1]
Enterprise,T1106,Native API,RDFSNIFFER has used several Win32 API functions to interact with the victim machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,3PARA RAT uses HTTP for command and control.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,3PARA RAT command and control commands are encrypted within the HTTP C2 channel using the DES algorithm in CBC mode with a key derived from the MD5 hash of the string HYF54&%9&jkMCXuiS. 3PARA RAT will use an 8-byte XOR key derived from the string HYF54&%9&jkMCXuiS if the DES decoding fails[1]
Enterprise,T1083,File and Directory Discovery,3PARA RAT has a command to retrieve metadata for files on disk as well as a command to list the current working directory.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,3PARA RAT has a command to set certain attributes such as creation/modification timestamps on files.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,SNUGRIDE communicates with its C2 server over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SNUGRIDE establishes persistence through a Registry Run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SNUGRIDE is capable of executing commands and spawning a reverse shell.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,SNUGRIDE encrypts C2 traffic using AES with a static key.[1]
Enterprise,T1005,Data from Local System,esentutl can be used to collect data from local file systems.[2]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,esentutl can be used to read and write alternate data streams.[3]
Enterprise,T1105,Ingress Tool Transfer,esentutl can be used to copy files from a given URL.[3]
Enterprise,T1003,OS Credential Dumping: NTDS,esentutl can use Volume Shadow Copy to copy locked files such as ntds.dit.[3][4]
Enterprise,T1071,Application Layer Protocol: Web Protocols,GoldenSpy has used the Ryeol HTTP Client to facilitate HTTP internet communication.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,GoldenSpy can execute remote commands via the command-line interface.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,GoldenSpy has established persistence by running in the background as an autostart service.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,GoldenSpy has exfiltrated host environment information to an external C2 domain via port 9006.[1]
Enterprise,T1083,File and Directory Discovery,"GoldenSpy has included a program ""ExeProtector"", which monitors for the existence of GoldenSpy on the infected system and redownloads if necessary.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,"GoldenSpy's uninstaller can delete registry entries, files and folders, and finally itself once these tasks have been completed.[2]"
Enterprise,T1105,Ingress Tool Transfer,"GoldenSpy constantly attempts to download and execute files from the remote C2, including GoldenSpy itself if not found on the system.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,GoldenSpy's setup file installs initial executables under the folder %WinDir%\System32\PluginManager.[1]
Enterprise,T1106,Native API,GoldenSpy can execute remote commands in the Windows command shell using the WinExec() API.[1]
Enterprise,T1027,Obfuscated Files or Information,GoldenSpy's uninstaller has base64-encoded its variables. [2]
Enterprise,T1082,System Information Discovery,GoldenSpy has gathered operating system information.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,GoldenSpy's installer has delayed installation of GoldenSpy for two hours after it reaches a victim system.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Ramsay has used HTTP for C2.[2]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Ramsay can compress and archive collected files using WinRAR.[1][2]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Ramsay can store collected documents in a custom container after encrypting and compressing them using RC4 and WinRAR.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Ramsay has created Registry Run keys to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Ramsay has included embedded Visual Basic scripts in malicious documents.[1][2]
Enterprise,T1132,Data Encoding: Standard Encoding,Ramsay has used base64 to encode its C2 traffic.[2]
Enterprise,T1005,Data from Local System,"Ramsay can collect Microsoft Word documents from the target's file system, as well as .txt, .doc, and .xls files from the Internet Explorer cache.[1][2]"
Enterprise,T1074,Data Staged: Local Data Staging,Ramsay can stage data prior to exfiltration in %APPDATA%\Microsoft\UserSetting and %APPDATA%\Microsoft\UserSetting\MediaCache.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Ramsay can extract its agent from the body of a malicious document.[1]
Enterprise,T1083,File and Directory Discovery,Ramsay can collect directory and file lists.[1][2]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Ramsay can hijack outdated Windows application dependencies with malicious versions of its own DLL payload.[1]
Enterprise,T1036,Masquerading,Ramsay has masqueraded as a JPG image file.[1]
Enterprise,T1036,Match Legitimate Name or Location,Ramsay has masqueraded as a 7zip installer.[1][2]
Enterprise,T1106,Native API,"Ramsay can use Windows API functions such as WriteFile, CloseHandle, and GetCurrentHwProfile during its collection and file storage operations. Ramsay can execute its embedded components via CreateProcessA and ShellExecute.[1]"
Enterprise,T1027,Obfuscated Files or Information,Ramsay has base64-encoded its portable executable and hidden itself under a JPG header. Ramsay can also embed information within document footers.[1]
Enterprise,T1027,Steganography,Ramsay has PE data embedded within JPEG files contained within Word documents.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Ramsay has been distributed through spearphishing emails with malicious attachments.[2]
Enterprise,T1057,Process Discovery,Ramsay can gather a list of running processes by using Tasklist.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Ramsay can use ImprovedReflectiveDLLInjection to deploy components.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Ramsay can schedule tasks via the Windows COM API to maintain persistence.[1]
Enterprise,T1113,Screen Capture,Ramsay can take screenshots every 30 seconds as well as when an external removable storage device is connected.[2]
Enterprise,T1082,System Information Discovery,"Ramsay can detect system information--including disk names, total space, and remaining space--to create a hardware profile GUID which acts as a system identifier for operators.[1][2]"
Enterprise,T1016,System Network Configuration Discovery,"Ramsay can use ipconfig and Arp to collect network configuration information, including routing information and ARP tables.[2]"
Enterprise,T1049,System Network Connections Discovery,Ramsay can use netstat to enumerate network connections.[2]
Enterprise,T1204,User Execution: Malicious File,Ramsay has been executed through malicious e-mail attachments.[2]
Enterprise,T1005,Data from Local System,Cryptoistic can retrieve files from the local file system.[1]
Enterprise,T1573,Encrypted Channel,Cryptoistic can engage in encrypted communications with C2.[1]
Enterprise,T1083,File and Directory Discovery,Cryptoistic can scan a directory to identify files for deletion.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Cryptoistic has the ability delete files from a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,Cryptoistic has the ability to send and receive files.[1]
Enterprise,T1033,System Owner/User Discovery,Cryptoistic can gather data on the user of a compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Chaes has used HTTP for C2 communications.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Chaes has added persistence via the Registry key software\microsoft\windows\currentversion\run\microsoft windows html help.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Chaes has used cmd to execute tasks on the system.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Chaes has used VBscript to execute malicious code.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Chaes has used Python scripts for execution and the installation of additional files.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,Chaes has used JavaScript and Node.Js information stealer script that exfiltrates data using the node process.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Chaes can steal login credentials and stored financial information from the browser.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Chaes has used Base64 to encode C2 communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Chaes has decrypted an AES encrypted binary file to trigger the download of other files.[1]
Enterprise,T1573,Encrypted Channel,Chaes has used encryption for its C2 channel.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Chaes has used search order hijacking to load a malicious DLL.[1]
Enterprise,T1105,Ingress Tool Transfer,Chaes can download additional files onto an infected machine.[1]
Enterprise,T1056,Input Capture,Chaes has a module to perform any API hooking it desires.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Chaes has used an unsigned, crafted DLL module named hha.dll that was designed to look like a legitimate 32-bit Windows DLL.[1]"
Enterprise,T1112,Modify Registry,Chaes stored its instructions in a config file in the Registry.[1]
Enterprise,T1106,Native API,Chaes used the CreateFileW() API function with read permissions to access downloaded payloads.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,Chaes has been delivered by sending victims a phishing email containing a malicious .docx file.[1]
Enterprise,T1113,Screen Capture,Chaes can capture screenshots of the infected machine.[1]
Enterprise,T1218,System Binary Proxy Execution: InstallUtil,Chaes has used Installutill to download content.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Chaes has used .MSI files as an initial way to start the infection chain.[1]
Enterprise,T1082,System Information Discovery,"Chaes has collected system information, including the machine name and OS version.[1]"
Enterprise,T1033,System Owner/User Discovery,Chaes has collected the username and UID from the infected machine.[1]
Enterprise,T1204,User Execution: Malicious File,Chaes requires the user to click on the malicious Word document to execute the next part of the attack.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,down_new has the ability to use HTTP in C2 communications.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,down_new has the ability to base64 encode C2 communications.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,down_new has the ability to AES encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,down_new has the ability to list the directories on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,down_new has the ability to download files to the compromised host.[1]
Enterprise,T1057,Process Discovery,down_new has the ability to list running processes on a compromised host.[1]
Enterprise,T1518,Software Discovery,down_new has the ability to gather information on installed applications.[1]
Enterprise,T1518,Security Software Discovery,down_new has the ability to detect anti-virus products and processes on a compromised host.[1]
Enterprise,T1082,System Information Discovery,down_new has the ability to identify the system volume information of a compromised host.[1]
Enterprise,T1016,System Network Configuration Discovery,down_new has the ability to identify the MAC address of a compromised host.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,POWERTON has used HTTP/HTTPS for C2 traffic.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,POWERTON can install a Registry Run key for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,POWERTON is written in PowerShell.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,POWERTON has used AES for encrypting C2 traffic.[1]
Enterprise,T1003,OS Credential Dumping: Security Account Manager,POWERTON has the ability to dump password hashes.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,OwaAuth uses incoming HTTP requests with a username keyword and commands and handles them as instructions to perform actions.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,OwaAuth DES-encrypts captured credentials using the key 12345678 before writing the credentials to a log file.[1]
Enterprise,T1083,File and Directory Discovery,OwaAuth has a command to list its directory and logical drives.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,OwaAuth has a command to timestop a file or directory.[1]
Enterprise,T1056,Input Capture: Keylogging,"OwaAuth captures and DES-encrypts credentials before writing the username and password to a log file, C:\log.txt.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"OwaAuth uses the filename owaauth.dll, which is a legitimate file that normally resides in %ProgramFiles%\Microsoft\Exchange Server\ClientAccess\Owa\Auth\; the malicious file by the same name is saved in %ProgramFiles%\Microsoft\Exchange Server\ClientAccess\Owa\bin\.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Some Reaver variants use HTTP for C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,Reaver encrypts collected data with an incremental XOR key prior to exfiltration.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Reaver creates a shortcut file and saves it in a Startup folder to establish persistence.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Reaver creates a shortcut file and saves it in a Startup folder to establish persistence.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Reaver installs itself as a new service.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Reaver deletes the original dropped file from the victim.[1]
Enterprise,T1027,Obfuscated Files or Information,Reaver encrypts some of its files with XOR.[1]
Enterprise,T1012,Query Registry,Reaver queries the Registry to determine the correct Startup path to use for persistence.[1]
Enterprise,T1218,System Binary Proxy Execution: Control Panel,Reaver drops and executes a malicious CPL file as its payload.[1]
Enterprise,T1082,System Information Discovery,"Reaver collects system information from the victim, including CPU speed, computer name, volume serial number, ANSI code page, OEM code page identifier for the OS, Microsoft Windows version, and memory information.[1]"
Enterprise,T1016,System Network Configuration Discovery,Reaver collects the victim's IP address.[1]
Enterprise,T1033,System Owner/User Discovery,Reaver collects the victim's username.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Security Support Provider,The Mimikatz credential dumper contains an implementation of an SSP.[1]
Enterprise,T1555,Credentials from Password Stores,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the credential vault and DPAPI.[1][5][6][7][8]"
Enterprise,T1555,Credentials from Web Browsers,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DPAPI.[1][5][6][7]"
Enterprise,T1555,Windows Credential Manager,Mimikatz contains functionality to acquire credentials from the Windows Credential Manager.[9]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSASS Memory.[1][5][6][7]"
Enterprise,T1003,OS Credential Dumping: Security Account Manager,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the SAM table.[1][5][6][7]"
Enterprise,T1003,OS Credential Dumping: LSA Secrets,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from the LSA.[1][5][6][7]"
Enterprise,T1003,OS Credential Dumping: DCSync,"Mimikatz performs credential dumping to obtain account and password information useful in gaining access to additional systems and enterprise network resources. It contains functionality to acquire information about credentials in many ways, including from DCSync/NetSync.[1][5][6][7][8]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Truvasys adds a Registry Run key to establish persistence.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"To establish persistence, Truvasys adds a Registry Run key with a value ""TaskMgr"" in an attempt to masquerade as the legitimate Windows Task Manager.[1]"
Enterprise,T1105,Ingress Tool Transfer,SLOWDRIFT downloads additional payloads.[1]
Enterprise,T1082,System Information Discovery,SLOWDRIFT collects and sends system information to its C2.[1]
Enterprise,T1102,Web Service: Bidirectional Communication,SLOWDRIFT uses cloud based services for C2.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Uroburos uses a custom packer.[2]
Enterprise,T1059,Command and Scripting Interpreter,FIVEHANDS can receive a command line argument to limit file encryption to specified directories.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,FIVEHANDS has the ability to decrypt its payload prior to execution.[1][3][2]
Enterprise,T1083,File and Directory Discovery,FIVEHANDS has the ability to enumerate files on a compromised host in order to encrypt files with specific extensions.[3][2]
Enterprise,T1027,Obfuscated Files or Information,The FIVEHANDS payload is encrypted with AES-128.[1][3][2]
Enterprise,T1047,Windows Management Instrumentation,FIVEHANDS can use WMI to delete files on a target machine.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,KGH_SPY can send data to C2 with HTTP POST requests.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,KGH_SPY can execute PowerShell commands on the victim's machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KGH_SPY has the ability to set a Registry key to run a cmd.exe command.[1]
Enterprise,T1555,Credentials from Password Stores,KGH_SPY can collect credentials from WINSCP.[1]
Enterprise,T1555,Credentials from Web Browsers,"KGH_SPY has the ability to steal data from the Chrome, Edge, Firefox, Thunderbird, and Opera browsers.[1]"
Enterprise,T1555,Windows Credential Manager,KGH_SPY can collect credentials from the Windows Credential Manager.[1]
Enterprise,T1005,Data from Local System,KGH_SPY can send a file containing victim system information to C2.[1]
Enterprise,T1074,Data Staged: Local Data Staging,"KGH_SPY can save collected system information to a file named ""info"" before exfiltration.[1]"
Enterprise,T1140,Deobfuscate/Decode Files or Information,KGH_SPY can decrypt encrypted strings and write them to a newly created folder.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,KGH_SPY can exfiltrate collected information from the host to the C2 server.[1]
Enterprise,T1083,File and Directory Discovery,KGH_SPY can enumerate files and directories on a compromised host.[1]
Enterprise,T1105,Ingress Tool Transfer,KGH_SPY has the ability to download and execute code from remote servers.[1]
Enterprise,T1056,Input Capture: Keylogging,KGH_SPY can perform keylogging by polling the GetAsyncKeyState() function.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,KGH_SPY has masqueraded as a legitimate Windows tool.[1]
Enterprise,T1027,Obfuscated Files or Information,KGH_SPY has used encrypted strings in its installer.[1]
Enterprise,T1518,Software Discovery,KGH_SPY can collect information on installed applications.[1]
Enterprise,T1082,System Information Discovery,KGH_SPY can collect drive information from a compromised host.[1]
Enterprise,T1204,User Execution: Malicious File,KGH_SPY has been spread through Word documents containing malicious macros.[1]
Enterprise,T1087,Account Discovery: Local Account,MURKYTOP has the capability to retrieve information about users on remote hosts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MURKYTOP uses the command-line interface.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,MURKYTOP has the capability to delete local files.[1]
Enterprise,T1069,Permission Groups Discovery,MURKYTOP has the capability to retrieve information about groups.[1]
Enterprise,T1018,Remote System Discovery,MURKYTOP has the capability to identify remote hosts on connected networks.[1]
Enterprise,T1053,Scheduled Task/Job: At,MURKYTOP has the capability to schedule remote AT jobs.[1]
Enterprise,T1082,System Information Discovery,MURKYTOP has the capability to retrieve information about the OS.[1]
Enterprise,T1016,System Network Configuration Discovery,nbtstat can be used to discover local NetBIOS domain names.
Enterprise,T1049,System Network Connections Discovery,nbtstat can be used to discover current NetBIOS sessions.
Enterprise,T1059,Command and Scripting Interpreter,Bonadan can create bind and reverse shells on the infected system.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Bonadan can XOR-encrypt C2 communications.[1]
Enterprise,T1105,Ingress Tool Transfer,Bonadan can download additional modules from the C2 server.[1]
Enterprise,T1057,Process Discovery,Bonadan can use the ps command to discover other cryptocurrency miners active on the system.[1]
Enterprise,T1082,System Information Discovery,"Bonadan has discovered the OS version, CPU model, and RAM size of the system it has been installed on.[1]"
Enterprise,T1016,System Network Configuration Discovery,Bonadan can find the external IP address of the infected host.[1]
Enterprise,T1033,System Owner/User Discovery,Bonadan has discovered the username of the user running the backdoor.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SEASHARPEE can execute commands on victims.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,SEASHARPEE can timestomp files on victims using a Web shell.[1]
Enterprise,T1105,Ingress Tool Transfer,SEASHARPEE can download remote files onto victims.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,VaporRage can use HTTP to download shellcode from compromised websites.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,VaporRage can deobfuscate XOR-encoded shellcode prior to execution.[1]
Enterprise,T1105,Ingress Tool Transfer,VaporRage has the ability to download malicious shellcode to compromised systems.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,WinMM uses HTTP for C2.[1]
Enterprise,T1083,File and Directory Discovery,WinMM sets a WH_CBT Windows hook to search for and capture files on the victim.[1]
Enterprise,T1057,Process Discovery,WinMM sets a WH_CBT Windows hook to collect information on process creation.[1]
Enterprise,T1082,System Information Discovery,"WinMM collects the system name, OS version including service pack, and system install date and sends the information to the C2 server.[1]"
Enterprise,T1033,System Owner/User Discovery,"WinMM uses NetUser-GetInfo to identify that it is running under an ""Admin"" account on the local system.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RobbinHood uses cmd.exe on the victim's computer.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,RobbinHood will search for Windows services that are associated with antivirus software on the system and kill the process.[1]
Enterprise,T1070,Indicator Removal on Host: Network Share Connection Removal,RobbinHood disconnects all network shares from the computer with the command net use * /DELETE /Y.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,schtasks is used to schedule tasks on a Windows system to run at a specific date and time.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,schtasks is used to schedule tasks on a Windows system to run at a specific date and time.[1]
Enterprise,T1105,Ingress Tool Transfer,DOGCALL can download and execute additional payloads.[2]
Enterprise,T1056,Input Capture: Keylogging,DOGCALL is capable of logging keystrokes.[1][2]
Enterprise,T1027,Obfuscated Files or Information,DOGCALL is encrypted using single-byte XOR.[2]
Enterprise,T1113,Screen Capture,DOGCALL is capable of capturing screenshots of the victim's machine.[1][2]
Enterprise,T1102,Web Service: Bidirectional Communication,"DOGCALL is capable of leveraging cloud storage APIs such as Cloud, Box, Dropbox, and Yandex for C2.[1][2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Clop can use cmd.exe to help execute commands on the system.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Clop has used a simple XOR operation to decrypt strings.[1]
Enterprise,T1083,File and Directory Discovery,Clop has searched folders and subfolders for files to encrypt.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Clop can uninstall or disable security products.[2]
Enterprise,T1112,Modify Registry,Clop can make modifications to Registry keys.[2]
Enterprise,T1106,Native API,"Clop has used built-in API functions such as WNetOpenEnumW(), WNetEnumResourceW(), WNetCloseEnum(), GetProcAddress(), and VirtualAlloc().[1][2]"
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Clop has been packed to help avoid detection.[1][2]
Enterprise,T1057,Process Discovery,Clop can enumerate all processes on the victim's machine.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Clop can search for processes with antivirus and antimalware product names.[1][2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Clop can use code signing to evade detection.[3]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,Clop can use msiexec.exe to disable security tools on the system.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,Clop has used the sleep command to avoid sandbox detection.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Nerex creates a Registry subkey that registers a new service.[2]
Enterprise,T1105,Ingress Tool Transfer,Nerex creates a backdoor through which remote attackers can download files onto a compromised host.[3]
Enterprise,T1112,Modify Registry,Nerex creates a Registry subkey that registers a new service.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Nerex drops a signed Microsoft DLL to disk.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ShadowPad communicates over HTTP to retrieve a string that is decoded into a C2 server URL.[3]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,ShadowPad has used FTP for C2 communications.[3]
Enterprise,T1071,Application Layer Protocol: DNS,ShadowPad has used DNS tunneling for C2 communications.[3]
Enterprise,T1132,Data Encoding: Non-Standard Encoding,ShadowPad has encoded data as readable Latin characters.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ShadowPad has decrypted a binary blob to start execution.[3]
Enterprise,T1070,Indicator Removal on Host,ShadowPad has deleted arbitrary Registry values.[3]
Enterprise,T1105,Ingress Tool Transfer,ShadowPad has downloaded code from a C2 server.[2]
Enterprise,T1112,Modify Registry,ShadowPad maintains a configuration block and virtual file system in the Registry.[3]
Enterprise,T1027,Obfuscated Files or Information,ShadowPad has encrypted a virtual file system and various files.[2]
Enterprise,T1057,Process Discovery,ShadowPad has collected the PID of a malicious process.[3]
Enterprise,T1055,Process Injection,ShadowPad has injected an install module into a newly created process.[3]
Enterprise,T1055,Dynamic-link Library Injection,ShadowPad has injected a DLL into svchost.exe.[3]
Enterprise,T1082,System Information Discovery,"ShadowPad has discovered system information including memory status, CPU frequency, OS versions, and volume serial numbers.[3]"
Enterprise,T1016,System Network Configuration Discovery,ShadowPad has collected the domain name of the victim system.[3]
Enterprise,T1033,System Owner/User Discovery,ShadowPad has collected the username of the victim system.[3]
Enterprise,T1124,System Time Discovery,ShadowPad has collected the current date and time of the victim system.[3]
Enterprise,T1087,Account Discovery: Local Account,BloodHound can identify users with local administrator rights.[2]
Enterprise,T1087,Account Discovery: Domain Account,"BloodHound can collect information about domain users, including identification of domain admin accounts.[2]"
Enterprise,T1560,Archive Collected Data,BloodHound can compress data collected by its SharpHound ingestor into a ZIP file to be written to disk.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,BloodHound can use PowerShell to pull Active Directory information from the target environment.[2]
Enterprise,T1106,Native API,BloodHound can use .NET API calls in the SharpHound ingestor component to pull Active Directory data.[1]
Enterprise,T1069,Permission Groups Discovery: Local Groups,BloodHound can collect information about local groups and members.[2]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,BloodHound can collect information about domain groups and members.[2]
Enterprise,T1018,Remote System Discovery,"BloodHound can enumerate and collect the properties of domain computers, including domain controllers.[2]"
Enterprise,T1033,System Owner/User Discovery,BloodHound can collect information on user sessions.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,jRAT has command line access.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,jRAT has been distributed as HTA files with VBScript.[1]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,jRAT has been distributed as HTA files with JScript.[1]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,"jRAT can capture passwords from common web browsers such as Internet Explorer, Google Chrome, and Firefox.[1]"
Enterprise,T1083,File and Directory Discovery,jRAT can browse file systems.[1][4]
Enterprise,T1070,Indicator Removal on Host: File Deletion,jRAT has a function to delete files from the victim’s machine.[2]
Enterprise,T1105,Ingress Tool Transfer,jRAT can download and execute files.[2][1][4]
Enterprise,T1056,Input Capture: Keylogging,"jRAT has the capability to log keystrokes from the victim’s machine, both offline and online.[2][1]"
Enterprise,T1027,Obfuscated Files or Information,"jRAT’s Java payload is encrypted with AES.[2] Additionally, backdoor files are encrypted using DES as a stream cipher. Later variants of jRAT also incorporated AV evasion methods such as Java bytecode obfuscation via the commercial Allatori obfuscation tool.[4]"
Enterprise,T1027,Software Packing,jRAT payloads have been packed.[1]
Enterprise,T1057,Process Discovery,jRAT can query and kill system processes.[4]
Enterprise,T1090,Proxy,jRAT can serve as a SOCKS proxy server.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,jRAT can support RDP control.[1]
Enterprise,T1113,Screen Capture,jRAT has the capability to take screenshots of the victim’s machine.[2][1]
Enterprise,T1518,Software Discovery: Security Software Discovery,"jRAT can list security software, such as by using WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.[2][1]"
Enterprise,T1082,System Information Discovery,"jRAT collects information about the OS (version, build type, install date) as well as system up-time upon receiving a connection from a backdoor.[4]"
Enterprise,T1016,System Network Configuration Discovery,jRAT can gather victim internal and external IPs.[1]
Enterprise,T1049,System Network Connections Discovery,jRAT can list network connections.[1]
Enterprise,T1047,Windows Management Instrumentation,jRAT uses WMIC to identify anti-virus products installed on the victim’s machine and to obtain firewall details.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Egregor has communicated with its C2 servers via HTTPS protocol.[4]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Egregor has used an encoded PowerShell command by a service created by Cobalt Strike for lateral movement.[4]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Egregor has used batch files for execution and can launch Internet Explorer from cmd.exe.[5][6]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Egregor has been decrypted before execution.[1][6]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,Egregor has used DLL side-loading to execute its payload.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Egregor has disabled Windows Defender to evade protections.[4]
Enterprise,T1105,Ingress Tool Transfer,Egregor has the ability to download files from its C2 server.[6][4]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Egregor has masqueraded the svchost.exe process to exfiltrate data.[4]
Enterprise,T1106,Native API,Egregor has used the Windows API to make detection more difficult.[2]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,"Egregor's payloads are custom-packed, archived and encrypted to prevent analysis.[1][2]"
Enterprise,T1069,Permission Groups Discovery: Domain Groups,Egregor can conduct Active Directory reconnaissance using tools such as Sharphound or AdFind.[4]
Enterprise,T1055,Process Injection,Egregor can inject its payload into iexplore.exe process.[2]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Egregor has used regsvr32.exe to execute malicious DLLs.[5]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Egregor has used rundll32 during execution.[6]
Enterprise,T1082,System Information Discovery,Egregor can perform a language check of the infected system and can query the CPU information (cupid).[5][1]
Enterprise,T1049,System Network Connections Discovery,Egregor can enumerate all connected drives.[1]
Enterprise,T1033,System Owner/User Discovery,Egregor has used tools to gather information about users.[4]
Enterprise,T1124,System Time Discovery,Egregor contains functionality to query the local/system time.[5]
Enterprise,T1497,Virtualization/Sandbox Evasion,Egregor has used multiple anti-analysis and anti-sandbox techniques to prevent automated analysis by sandboxes.[2][1]
Enterprise,T1497,Time Based Evasion,Egregor can perform a long sleep (greater than or equal to 3 minutes) to evade detection.[5]
Enterprise,T1560,Archive Collected Data,Lurid can compress data before sending it.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Lurid performs XOR encryption.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Wiarp creates a backdoor through which remote attackers can open a command line interface.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Wiarp creates a backdoor through which remote attackers can create a service.[2]
Enterprise,T1105,Ingress Tool Transfer,Wiarp creates a backdoor through which remote attackers can download files.[2]
Enterprise,T1055,Process Injection,Wiarp creates a backdoor through which remote attackers can inject files into running processes.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"POSHSPY uses PowerShell to execute various commands, one to execute its payload.[1]"
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,POSHSPY encrypts C2 traffic with AES and RSA.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,POSHSPY modifies timestamps of all downloaded executables to match a randomly selected file created prior to 2013.[1]
Enterprise,T1105,Ingress Tool Transfer,POSHSPY downloads and executes additional PowerShell code and Windows binaries.[1]
Enterprise,T1027,Obfuscated Files or Information,POSHSPY appends a file signature header (randomly selected from six file types) to encrypted data prior to upload or download.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,4H RAT uses HTTP for command and control.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,4H RAT has the capability to create a remote shell.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,4H RAT obfuscates C2 communication using a 1-byte XOR with the key 0xBE.[1]
Enterprise,T1083,File and Directory Discovery,4H RAT has the capability to obtain file and directory listings.[1]
Enterprise,T1057,Process Discovery,4H RAT has the capability to obtain a listing of running processes (including loaded modules).[1]
Enterprise,T1082,System Information Discovery,4H RAT sends an OS version identifier in its beacons.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,NDiskMonitor uses AES to encrypt certain information sent over its C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,NDiskMonitor can obtain a list of all files and directories as well as logical drives.[1]
Enterprise,T1105,Ingress Tool Transfer,NDiskMonitor can download and execute a file from given URL.[1]
Enterprise,T1082,System Information Discovery,NDiskMonitor obtains the victim computer name and encrypts the information to send over its C2 channel.[1]
Enterprise,T1033,System Owner/User Discovery,NDiskMonitor obtains the victim username and encrypts the information to send over its C2 channel.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Diavol has used HTTP GET and POST requests for C2.[1]
Enterprise,T1083,File and Directory Discovery,Diavol has a command to traverse the files and directories in a given path.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Diavol can attempt to stop security software.[1]
Enterprise,T1105,Ingress Tool Transfer,Diavol can receive configuration updates and additional payloads including wscpy.exe from C2.[1]
Enterprise,T1106,Native API,"Diavol has used several API calls like GetLogicalDriveStrings, SleepEx, SystemParametersInfoAPI, CryptEncrypt, and others to execute parts of its attack.[1]"
Enterprise,T1027,Obfuscated Files or Information,Diavol has Base64 encoded the RSA public key used for encrypting files.[1]
Enterprise,T1027,Steganography,Diavol has obfuscated its main code routines within bitmap images as part of its anti-analysis techniques.[1]
Enterprise,T1057,Process Discovery,"Diavol has used CreateToolhelp32Snapshot, Process32First, and Process32Next API calls to enumerate the running processes in the system.[1]"
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Diavol can spread throughout a network via SMB prior to encryption.[1]
Enterprise,T1018,Remote System Discovery,Diavol can use the ARP table to find remote hosts to scan.[1]
Enterprise,T1082,System Information Discovery,Diavol can collect the computer name and OS version from the system.[1]
Enterprise,T1016,System Network Configuration Discovery,Diavol can enumerate victims' local and external IPs when registering with C2.[1]
Enterprise,T1033,System Owner/User Discovery,Diavol can collect the username from a compromised host.[1]
Enterprise,T1087,Account Discovery: Local Account,S-Type runs the command net user on a victim. S-Type also runs tests to determine the privilege level of the compromised user.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,S-Type uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,S-Type may create a .lnk file to itself that is saved in the Start menu folder. It may also create the Registry key HKCU\SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ IMJPMIJ8.1{3 characters of Unique Identifier}.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,"S-Type may create the file %HOMEPATH%\Start Menu\Programs\Startup\Realtek {Unique Identifier}.lnk, which points to the malicious msdtc.exe file already created in the %CommonFiles% directory.[1]"
Enterprise,T1132,Data Encoding: Standard Encoding,S-Type uses Base64 encoding for C2 traffic.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"S-Type may save itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[1][2]"
Enterprise,T1082,System Information Discovery,The initial beacon packet for S-Type contains the operating system version and file system of the victim.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,LoudMiner used a batch script to run the Linux virtual machine as a service.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,LoudMiner used shell scripts to launch various services and to start/stop the QEMU virtualization.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,LoudMiner can automatically launch a Linux virtual machine as a service at startup if the AutoStart option is enabled in the VBoxVmService configuration file.[1]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,LoudMiner adds plist files with the naming format com.[random_name].plist in the /Library/LaunchDaemons folder with the RunAtLoad and KeepAlive keys set to true.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,"LoudMiner has set the attributes of the VirtualBox directory and VBoxVmService parent directory to ""hidden"".[1]"
Enterprise,T1564,Hide Artifacts: Run Virtual Instance,"LoudMiner has used QEMU and VirtualBox to run a Tiny Core Linux virtual machine, which runs XMRig and makes connections to the C2 server for updates.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,LoudMiner deleted installation files after completion.[1]
Enterprise,T1105,Ingress Tool Transfer,LoudMiner used SCP to update the miner from the C2.[1]
Enterprise,T1027,Obfuscated Files or Information,LoudMiner has obfuscated various scripts and encrypted DMG files.[1]
Enterprise,T1057,Process Discovery,LoudMiner used the ps command to monitor the running processes on the system.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,LoudMiner used an MSI installer to install the virtualization software.[1]
Enterprise,T1082,System Information Discovery,LoudMiner has monitored CPU usage.[1]
Enterprise,T1016,System Network Configuration Discovery,LoudMiner used a script to gather the IP address of the infected machine before sending to the C2.[1]
Enterprise,T1569,System Services: Launchctl,LoudMiner launched the QEMU services in the /Library/LaunchDaemons/ folder using launchctl. It also uses launchctl to unload all Launch Daemons when updating to a newer version of LoudMiner.[1]
Enterprise,T1569,System Services: Service Execution,LoudMiner started the cryptomining virtual machine as a service on the infected machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,RegDuke can extract and execute PowerShell scripts from C2 communications.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,RegDuke can decrypt strings with a key either stored in the Registry or hardcoded in the code.[1]
Enterprise,T1105,Ingress Tool Transfer,RegDuke can download files from C2.[1]
Enterprise,T1112,Modify Registry,RegDuke can store its encryption key in the Registry.[1]
Enterprise,T1027,Obfuscated Files or Information,RegDuke can use control-flow flattening or the commercially available .NET Reactor for obfuscation.[1]
Enterprise,T1027,Steganography,"RegDuke can hide data in images, including use of the Least Significant Bit (LSB).[1]"
Enterprise,T1102,Web Service: Bidirectional Communication,RegDuke can use Dropbox as its C2 server.[1]
Enterprise,T1087,Account Discovery: Local Account,USBferry can use net user to gather information about local accounts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,USBferry can execute various Windows commands.[1]
Enterprise,T1005,Data from Local System,USBferry can collect information from an air-gapped host machine.[1]
Enterprise,T1083,File and Directory Discovery,USBferry can detect the victim's file or folder list.[1]
Enterprise,T1057,Process Discovery,USBferry can use tasklist to gather information about the process running on the infected system.[1]
Enterprise,T1018,Remote System Discovery,USBferry can use net view to gather information about remote systems.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,USBferry can execute rundll32.exe in memory to avoid detection.[1]
Enterprise,T1016,System Network Configuration Discovery,USBferry can detect the infected machine's network topology using ipconfig and arp.[1]
Enterprise,T1049,System Network Connections Discovery,USBferry can use netstat and nbtstat to detect active network connections.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"LockerGoga installation has been immediately preceded by a ""task kill"" command in order to disable anti-virus.[3]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,LockerGoga has been observed deleting its original launcher after execution.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,LockerGoga has been signed with stolen certificates in order to make it look more legitimate.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"LockerGoga installation has been immediately preceded by a ""task kill"" command in order to disable anti-virus.[3]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,LockerGoga has been observed deleting its original launcher after execution.[2]
Enterprise,T1553,Subvert Trust Controls: Code Signing,LockerGoga has been signed with stolen certificates in order to make it look more legitimate.[3]
Enterprise,T1087,Account Discovery: Domain Account,IcedID can query LDAP to identify additional users on the network to infect.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,IcedID has used HTTPS in communications with C2.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,IcedID has established persistence by creating a Registry run key.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,IcedID has used obfuscated VBA string expressions.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,IcedID has used SSL and TLS in communications with C2.[1][2]
Enterprise,T1105,Ingress Tool Transfer,IcedID has the ability to download additional modules and a configuration file from C2.[1][2]
Enterprise,T1106,Native API,"IcedID has called ZwWriteVirtualMemory, ZwProtectVirtualMemory, ZwQueueApcThread, and NtResumeThread to inject itself into a remote process.[2]"
Enterprise,T1027,Obfuscated Files or Information,IcedID has utilzed encrypted binaries and base64 encoded strings.[2]
Enterprise,T1027,Software Packing,IcedID has packed and encrypted its loader module.[2]
Enterprise,T1027,Steganography,IcedID has embedded binaries within RC4 encrypted .png files.[2]
Enterprise,T1069,Permission Groups Discovery,IcedID has the ability to identify Workgroup membership.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,IcedID has been delivered via phishing e-mails with malicious attachments.[2]
Enterprise,T1055,Process Injection: Asynchronous Procedure Call,IcedID has used ZwQueueApcThread to inject itself into remote processes.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,IcedID has created a scheduled task that executes every hour to establish persistence.[2]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,IcedID can inject itself into a suspended msiexec.exe process to send beacons to C2 while appearing as a normal msi application. [2]
Enterprise,T1082,System Information Discovery,IcedID has the ability to identify the computer name and OS version on a compromised host.[1]
Enterprise,T1204,User Execution: Malicious File,IcedID has been executed through Word documents with malicious embedded macros.[2]
Enterprise,T1047,Windows Management Instrumentation,IcedID has used WMI to execute binaries.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ZeroT has used HTTP for C2.[1][2]
Enterprise,T1543,Create or Modify System Process: Windows Service,ZeroT can add a new service to ensure PlugX persists on the system when delivered as another payload onto the system.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,ZeroT shellcode decrypts and decompresses its RC4-encrypted payload.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,ZeroT has used RC4 to encrypt C2 traffic.[1][2]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,ZeroT has used DLL side-loading to load malicious payloads.[1][2]
Enterprise,T1105,Ingress Tool Transfer,ZeroT can download additional payloads onto the victim.[2]
Enterprise,T1027,Obfuscated Files or Information,ZeroT has encrypted its payload with RC4.[2]
Enterprise,T1027,Binary Padding,ZeroT has obfuscated DLLs and functions using dummy API calls inserted between real instructions.[2]
Enterprise,T1027,Software Packing,Some ZeroT DLL files have been packed with UPX.[2]
Enterprise,T1082,System Information Discovery,"ZeroT gathers the victim's computer name, Windows version, and system language, and then sends it to its C2 server.[2]"
Enterprise,T1016,System Network Configuration Discovery,"ZeroT gathers the victim's IP address and domain information, and then sends it to its C2 server.[2]"
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,Cachedump can extract cached password hashes from cache entry information.[1]
Enterprise,T1083,File and Directory Discovery,RARSTONE obtains installer properties from Uninstall Registry Key entries to obtain information about installed applications and how to uninstall certain applications.[2]
Enterprise,T1105,Ingress Tool Transfer,RARSTONE downloads its backdoor component from a C2 server and loads it directly into memory.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,"After decrypting itself in memory, RARSTONE downloads a DLL file from its C2 server and loads it in the memory space of a hidden Internet Explorer process. This ""downloaded"" file is actually not dropped onto the system.[2]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Maze has communicated to hard-coded IP addresses via HTTP.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Maze has created a file named ""startup_vrun.bat"" in the Startup folder of a virtual machine to establish persistence.[3]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,The Maze encryption process has used batch scripts with various commands.[1][3]
Enterprise,T1564,Hide Artifacts: Run Virtual Instance,"Maze operators have used VirtualBox and a Windows 7 virtual machine to run the ransomware; the virtual machine's configuration file mapped the shared network drives of the target company, presumably so Maze can encrypt files on the shared drives as well as the local machine.[3]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,"Maze has disabled dynamic analysis and other security tools including IDA debugger, x32dbg, and OllyDbg.[2] It has also disabled Windows Defender's Real-Time Monitoring feature and attempted to disable endpoint protection services.[3]"
Enterprise,T1070,Indicator Removal on Host,"Maze has used the ""Wow64RevertWow64FsRedirection"" function following attempts to delete the shadow volumes, in order to leave the system in the same state as it was prior to redirection.[2]"
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Maze operators have created scheduled tasks masquerading as ""Windows Update Security"", ""Windows Update Security Patches"", and ""Google Chrome Security Update"" designed to launch the ransomware.[3]"
Enterprise,T1106,Native API,"Maze has used several Windows API functions throughout the encryption process including IsDebuggerPresent, TerminateProcess, Process32FirstW, among others.[2]"
Enterprise,T1027,Obfuscated Files or Information,Maze has decrypted strings and other important information during the encryption process. Maze also calls certain functions dynamically to hinder analysis.[2]
Enterprise,T1027,Binary Padding,"Maze has inserted large blocks of junk code, including some components to decrypt strings and other important information for later in the encryption process.[2]"
Enterprise,T1057,Process Discovery,Maze has gathered all of the running system processes.[2]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Maze has injected the malware DLL into a target process.[2][3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"Maze has created scheduled tasks using name variants such as ""Windows Update Security"", ""Windows Update Security Patches"", and ""Google Chrome Security Update"", to launch Maze at a specific time.[3]"
Enterprise,T1218,System Binary Proxy Execution: Msiexec,"Maze has delivered components for its ransomware attacks using MSI files, some of which have been executed from the command-line using msiexec.[3]"
Enterprise,T1082,System Information Discovery,"Maze has checked the language of the infected system using the ""GetUSerDefaultUILanguage"" function.[2]"
Enterprise,T1049,System Network Connections Discovery,"Maze has used the ""WNetOpenEnumW"", ""WNetEnumResourceW"", ""WNetCloseEnum"" and ""WNetAddConnection2W"" functions to enumerate the network resources on the infected machine.[2]"
Enterprise,T1047,Windows Management Instrumentation,"Maze has used WMI to attempt to delete the shadow volumes on a machine, and to connect a virtual machine to the network domain of the victim organization's network.[2][3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,LOWBALL command and control occurs via HTTPS over port 443.[1]
Enterprise,T1105,Ingress Tool Transfer,"LOWBALL uses the Dropbox API to request two files, one of which is the same file as the one dropped by the malicious email attachment. This is most likely meant to be a mechanism to update the compromised host with a new version of the LOWBALL malware.[1]"
Enterprise,T1102,Web Service: Bidirectional Communication,LOWBALL uses the Dropbox cloud storage service for command and control.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Kasidet creates a Registry Run key to establish persistence.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Kasidet can execute commands using cmd.exe.[1]
Enterprise,T1083,File and Directory Discovery,Kasidet has the ability to search for a given filename on a victim.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,Kasidet has the ability to change firewall settings to allow a plug-in to be downloaded.[1]
Enterprise,T1105,Ingress Tool Transfer,Kasidet has the ability to download and execute additional files.[1]
Enterprise,T1056,Input Capture: Keylogging,Kasidet has the ability to initiate keylogging.[1]
Enterprise,T1057,Process Discovery,Kasidet has the ability to search for a given process name in processes currently running in the system.[1]
Enterprise,T1113,Screen Capture,Kasidet has the ability to initiate keylogging and screen captures.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Kasidet has the ability to identify any anti-virus installed on the infected system.[1]
Enterprise,T1082,System Information Discovery,Kasidet has the ability to obtain a victim's system name and operating system version.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,"CORALDECK has created password-protected RAR, WinImage, and zip archives to be exfiltrated.[1]"
Enterprise,T1083,File and Directory Discovery,CORALDECK searches for specified files.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,"MoonWind can execute commands via an interactive command shell.[1] MoonWind uses batch scripts for various purposes, including to restart and uninstall itself.[1]"
Enterprise,T1543,Create or Modify System Process: Windows Service,"MoonWind installs itself as a new service with automatic startup to establish persistence. The service checks every 60 seconds to determine if the malware is running; if not, it will spawn a new instance.[1]"
Enterprise,T1074,Data Staged: Local Data Staging,MoonWind saves information from its keylogging routine as a .zip file in the present working directory.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,MoonWind encrypts C2 traffic using RC4 with a static key.[1]
Enterprise,T1083,File and Directory Discovery,MoonWind has a command to return a directory listing for a specified directory.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,MoonWind can delete itself or specified files.[1]
Enterprise,T1056,Input Capture: Keylogging,MoonWind has a keylogger.[1]
Enterprise,T1057,Process Discovery,MoonWind has a command to return a list of running processes.[1]
Enterprise,T1082,System Information Discovery,"MoonWind can obtain the victim hostname, Windows version, RAM amount, number of drives, and screen resolution.[1]"
Enterprise,T1016,System Network Configuration Discovery,MoonWind obtains the victim IP address.[1]
Enterprise,T1033,System Owner/User Discovery,MoonWind obtains the victim username.[1]
Enterprise,T1124,System Time Discovery,MoonWind obtains the victim's current time.[1]
Enterprise,T1083,File and Directory Discovery,RemoteUtilities can enumerate files and directories on a target machine.[1]
Enterprise,T1105,Ingress Tool Transfer,RemoteUtilities can upload and download files to and from a target machine.[1]
Enterprise,T1113,Screen Capture,RemoteUtilities can take screenshots on a compromised host.[1]
Enterprise,T1218,System Binary Proxy Execution: Msiexec,RemoteUtilities can use Msiexec to install a service.[1]
Enterprise,T1087,Account Discovery: Cloud Account,ROADTools can enumerate Azure AD users.[2]
Enterprise,T1069,Permission Groups Discovery: Cloud Groups,ROADTools can enumerate Azure AD groups.[2]
Enterprise,T1018,Remote System Discovery,ROADTools can enumerate Azure AD systems and devices.[2]
Enterprise,T1078,Valid Accounts: Cloud Accounts,ROADTools leverages valid cloud credentials to perform enumeration operations using the internal Azure AD Graph API.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,ELMER uses HTTP for command and control.[1]
Enterprise,T1083,File and Directory Discovery,ELMER is capable of performing directory listings.[1]
Enterprise,T1057,Process Discovery,ELMER is capable of performing process listings.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BLINDINGCAN has used HTTPS over port 443 for command and control.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BLINDINGCAN has executed commands via cmd.exe.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,BLINDINGCAN has encoded its C2 traffic with Base64.[1]
Enterprise,T1005,Data from Local System,BLINDINGCAN has uploaded files from victim machines.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BLINDINGCAN has used AES and XOR to decrypt its DLLs.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,BLINDINGCAN has encrypted its C2 traffic with RC4.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,BLINDINGCAN has sent user and system information to a C2 server via HTTP POST requests.[2][1]
Enterprise,T1083,File and Directory Discovery,"BLINDINGCAN can search, read, write, move, and execute files.[1][2]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,BLINDINGCAN has deleted itself and associated artifacts from victim machines.[1]
Enterprise,T1070,Indicator Removal on Host: Timestomp,BLINDINGCAN has modified file and directory timestamps.[1][2]
Enterprise,T1105,Ingress Tool Transfer,BLINDINGCAN has downloaded files to a victim machine.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"BLINDINGCAN has attempted to hide its payload by using legitimate file names such as ""iconcache.db"".[1]"
Enterprise,T1027,Obfuscated Files or Information,BLINDINGCAN has obfuscated code using Base64 encoding.[1]
Enterprise,T1027,Software Packing,BLINDINGCAN has been packed with the UPX packer.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,BLINDINGCAN has been delivered by phishing emails containing malicious Microsoft Office documents.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,BLINDINGCAN has been signed with code-signing certificates such as CodeRipper.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,BLINDINGCAN has used Rundll32 to load a malicious DLL.[1]
Enterprise,T1082,System Information Discovery,"BLINDINGCAN has collected from a victim machine the system name, processor information, OS version, and disk information, including type and free space available.[1]"
Enterprise,T1016,System Network Configuration Discovery,BLINDINGCAN has collected the victim machine's local IP address information and MAC address.[1]
Enterprise,T1204,User Execution: Malicious File,BLINDINGCAN has lured victims into executing malicious macros embedded within Microsoft Office documents.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,MechaFlounder has the ability to use HTTP in communication with C2.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MechaFlounder has the ability to run commands on a compromised host.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,MechaFlounder uses a python-based payload.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,MechaFlounder has the ability to use base16 encoded strings in C2.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,MechaFlounder has the ability to send the compromised user's account name and hostname within a URL to C2.[1]
Enterprise,T1105,Ingress Tool Transfer,MechaFlounder has the ability to upload and download files to and from a compromised host.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"MechaFlounder has been downloaded as a file named lsass.exe, which matches the legitimate Windows file.[1]"
Enterprise,T1033,System Owner/User Discovery,MechaFlounder has the ability to identify the username and hostname on a compromised host.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HiddenWasp uses a script to automate tasks on the victim's machine and to assist in execution.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,HiddenWasp uses a cipher to implement a decoding function.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,HiddenWasp uses an RC4-like algorithm with an already computed PRGA generated key-stream for network communication.[1]
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,HiddenWasp adds itself as a shared object to the LD_PRELOAD environment variable.[1]
Enterprise,T1105,Ingress Tool Transfer,HiddenWasp downloads a tar compressed archive from a download server to the system.[1]
Enterprise,T1027,Obfuscated Files or Information,HiddenWasp encrypts its configuration and payload.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Machete uses HTTP for Command & Control.[1][4][3]
Enterprise,T1071,Application Layer Protocol: File Transfer Protocols,Machete uses FTP for Command & Control.[1][4][3]
Enterprise,T1560,Archive Collected Data,Machete stores zipped files with profile data from installed web browsers.[1]
Enterprise,T1560,Archive via Custom Method,Machete's collected data is encrypted with AES before exfiltration.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Machete used the startup folder for persistence.[2][4]
Enterprise,T1059,Command and Scripting Interpreter: Python,Machete is written in Python and is used in conjunction with additional Python scripts.[1][2][3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Machete collects stored credentials from several web browsers.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Machete has used base64 encoding.[2]
Enterprise,T1005,Data from Local System,Machete searches the File system for files of interest.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Machete stores files and logs in a folder on the local drive.[1][4]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Machete’s downloaded data is decrypted using AES.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Machete has used AES to exfiltrate documents.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Machete has used TLS-encrypted FTP to exfiltrate data.[4]
Enterprise,T1041,Exfiltration Over C2 Channel,Machete's collected data is exfiltrated over the same channel used for C2.[1]
Enterprise,T1083,File and Directory Discovery,Machete produces file listings in order to search for files to be exfiltrated.[1][4][3]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Machete has the capability to exfiltrate stolen data to a hidden folder on a removable drive.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Once a file is uploaded, Machete will delete it from the machine.[1]"
Enterprise,T1105,Ingress Tool Transfer,Machete can download additional files for execution on the victim’s machine.[1]
Enterprise,T1056,Input Capture: Keylogging,Machete logs keystrokes from the victim’s machine.[1][2][4][3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"Machete renamed task names to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python tasks.[1]"
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Machete renamed payloads to masquerade as legitimate Google Chrome, Java, Dropbox, Adobe Reader and Python executables.[1][2]"
Enterprise,T1027,Obfuscated Files or Information,"Machete has used pyobfuscate, zlib compression, and base64 encoding for obfuscation. Machete has also used some visual obfuscation techniques by naming variables as combinations of letters to hinder analysis.[4][1]"
Enterprise,T1027,Software Packing,Machete has been packed with NSIS.[1]
Enterprise,T1057,Process Discovery,Machete has a component to check for running processes to look for web browsers.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,The different components of Machete are executed by Windows Task Scheduler.[1][2]
Enterprise,T1113,Screen Capture,Machete captures screenshots.[1][2][4][3]
Enterprise,T1082,System Information Discovery,Machete collects the hostname of the target computer.[1]
Enterprise,T1016,System Network Configuration Discovery,Machete collects the MAC address of the target computer and other network configuration information.[1][3]
Enterprise,T1049,System Network Connections Discovery,Machete uses the netsh wlan show networks mode=bssid and netsh wlan show interfaces commands to list all nearby WiFi networks and connected interfaces.[1]
Enterprise,T1560,Archive Collected Data: Archive via Custom Method,FrameworkPOS can XOR credit card information before exfiltration.[1]
Enterprise,T1005,Data from Local System,FrameworkPOS can collect elements related to credit card data from process memory.[1]
Enterprise,T1074,Data Staged: Local Data Staging,FrameworkPOS can identifiy payment card track data on the victim and copy it to a local file in a subdirectory of C:\Windows.[2]
Enterprise,T1057,Process Discovery,FrameworkPOS can enumerate and exclude selected processes on a compromised host to speed execution of memory scraping.[1]
Enterprise,T1005,Data from Local System,Wevtutil can be used to export events from a specific log.[1][2]
Enterprise,T1562,Impair Defenses: Disable Windows Event Logging,Wevtutil can be used to disable specific event logs on the system.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Wevtutil can be used to clear system and security event logs from the system.[1][3]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Cardinal RAT is downloaded using HTTP over port 443.[1]
Enterprise,T1560,Archive Collected Data: Archive via Library,Cardinal RAT applies compression to C2 traffic using the ZLIB library.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Cardinal RAT establishes Persistence by setting the HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load Registry key to point to its executable.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Cardinal RAT can execute commands.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Cardinal RAT decodes many of its artifacts and is decrypted (AES-128) after being downloaded.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Cardinal RAT uses a secret key with a series of XOR and addition operations to encrypt C2 traffic.[1]
Enterprise,T1083,File and Directory Discovery,Cardinal RAT checks its current working directory upon execution and also contains watchdog functionality that ensures its executable is located in the correct path (else it will rewrite the payload).[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"Cardinal RAT can uninstall itself, including deleting its executable.[1]"
Enterprise,T1105,Ingress Tool Transfer,Cardinal RAT can download and execute additional payloads.[1]
Enterprise,T1056,Input Capture: Keylogging,Cardinal RAT can log keystrokes.[1]
Enterprise,T1112,Modify Registry,Cardinal RAT sets HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load to point to its executable.[1]
Enterprise,T1027,Obfuscated Files or Information,Cardinal RAT encodes many of its artifacts and is encrypted (AES-128) when downloaded.[1]
Enterprise,T1027,Compile After Delivery,"Cardinal RAT and its watchdog component are compiled and executed after being delivered to victims as embedded, uncompiled source code.[1]"
Enterprise,T1057,Process Discovery,"Cardinal RAT contains watchdog functionality that ensures its process is always running, else spawns a new instance.[1]"
Enterprise,T1055,Process Injection,Cardinal RAT injects into a newly spawned process created from a native Windows executable.[1]
Enterprise,T1090,Proxy,Cardinal RAT can act as a reverse proxy.[1]
Enterprise,T1012,Query Registry,Cardinal RAT contains watchdog functionality that periodically ensures HKCU\Software\Microsoft\Windows NT\CurrentVersion\Windows\Load is set to point to its executable.[1]
Enterprise,T1113,Screen Capture,Cardinal RAT can capture screenshots.[1]
Enterprise,T1082,System Information Discovery,"Cardinal RAT can collect the hostname, Microsoft Windows version, and processor architecture from a victim machine.[1]"
Enterprise,T1033,System Owner/User Discovery,Cardinal RAT can collect the username from a victim machine.[1]
Enterprise,T1204,User Execution: Malicious File,Cardinal RAT lures victims into executing malicious macros embedded within Microsoft Excel documents.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sakula uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"Most Sakula samples maintain persistence by setting the Registry Run key SOFTWARE\Microsoft\Windows\CurrentVersion\Run\ in the HKLM or HKCU hive, with the Registry value and file name varying by sample.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Sakula calls cmd.exe to run various DLL files via rundll32 and also to perform file cleanup. Sakula also has the capability to invoke a reverse shell.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,Some Sakula samples install themselves as services for persistence by calling WinExec with the net start argument.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Sakula encodes C2 traffic with single-byte XOR keys.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Sakula uses DLL side-loading, typically using a digitally signed sample of Kaspersky Anti-Virus (AV) 6.0 for Windows Workstations or McAfee's Outlook Scan About Box to load malicious DLL files.[1]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Some Sakula samples use cmd.exe to delete temporary files.[1]
Enterprise,T1105,Ingress Tool Transfer,Sakula has the capability to download files.[1]
Enterprise,T1027,Obfuscated Files or Information,Sakula uses single-byte XOR obfuscation to obfuscate many of its files.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Sakula calls cmd.exe to run various DLL files via rundll32.[1]
Enterprise,T1059,Command and Scripting Interpreter,Imminent Monitor has a CommandPromptPacket and ScriptPacket module(s) for creating a remote shell and executing scripts.[2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Imminent Monitor has a PasswordRecoveryPacket module for recovering browser passwords.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Imminent Monitor has decoded malware components that are then dropped to the system.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,"Imminent Monitor has uploaded a file containing debugger logs, network information and system information to the C2.[2]"
Enterprise,T1083,File and Directory Discovery,"Imminent Monitor has a dynamic debugging feature to check whether it is located in the %TEMP% directory, otherwise it copies itself there.[2]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Imminent Monitor has a dynamic debugging feature to set the file attribute to hidden.[2]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Imminent Monitor has a feature to disable Windows Task Manager.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Imminent Monitor has deleted files related to its dynamic debugger feature.[2]
Enterprise,T1056,Input Capture: Keylogging,Imminent Monitor has a keylogging module.[1]
Enterprise,T1106,Native API,Imminent Monitor has leveraged CreateProcessW() call to execute the debugger.[2]
Enterprise,T1027,Obfuscated Files or Information,Imminent Monitor has encrypted the spearphish attachments to avoid detection from email gateways; the debugger also encrypts information before sending to the C2.[2]
Enterprise,T1057,Process Discovery,"Imminent Monitor has a ""Process Watcher"" feature to monitor processes in case the client ever crashes or gets closed.[1]"
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Imminent Monitor has a module for performing remote desktop access.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Sibot communicated with its C2 server via HTTP GET requests.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Sibot executes commands using VBScript.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Sibot can decrypt data received from a C2 and save to a file.[1]
Enterprise,T1070,Indicator Removal on Host,Sibot will delete an associated registry key if a certain server response is received.[1]
Enterprise,T1070,File Deletion,Sibot will delete itself if a certain server response is received.[1]
Enterprise,T1105,Ingress Tool Transfer,Sibot can download and execute a payload onto a compromised system.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Sibot has downloaded a DLL to the C:\windows\system32\drivers\ folder and renamed it with a .sys extension.[1]
Enterprise,T1112,Modify Registry,Sibot has installed a second-stage script in the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\sibot registry key.[1]
Enterprise,T1027,Obfuscated Files or Information,Sibot has obfuscated scripts used in execution.[1]
Enterprise,T1012,Query Registry,Sibot has queried the registry for proxy server information.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Sibot has been executed via a scheduled task.[1]
Enterprise,T1218,System Binary Proxy Execution: Mshta,Sibot has been executed via MSHTA application.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,Sibot has executed downloaded DLLs with rundll32.exe.[1]
Enterprise,T1016,System Network Configuration Discovery,Sibot checked if the compromised system is configured to use proxies.[1]
Enterprise,T1049,System Network Connections Discovery,Sibot has retrieved a GUID associated with a present LAN connection on a compromised machine.[1]
Enterprise,T1102,Web Service,Sibot has used a legitimate compromised website to download DLLs to the victim's machine.[1]
Enterprise,T1047,Windows Management Instrumentation,Sibot has used WMI to discover network connections and configurations. Sibot has also used the Win32_Process class to execute a malicious DLL.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Derusbi is capable of creating a remote Bash shell and executing commands.[3][4]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Derusbi obfuscates C2 traffic with variable 4-byte XOR keys.[3]
Enterprise,T1083,File and Directory Discovery,"Derusbi is capable of obtaining directory, file, and drive listings.[3][4]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Derusbi is capable of deleting files. It has been observed loading a Linux Kernel Module (LKM) and then deleting it from the hard disk as well as overwriting the data with null bytes.[3][4]
Enterprise,T1070,Indicator Removal on Host: Timestomp,The Derusbi malware supports timestomping.[1][3]
Enterprise,T1056,Input Capture: Keylogging,Derusbi is capable of logging keystrokes.[4]
Enterprise,T1057,Process Discovery,Derusbi collects current and parent process IDs.[3][4]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Derusbi injects itself into the secure shell (SSH) process.[5]
Enterprise,T1012,Query Registry,Derusbi is capable of enumerating Registry keys and values.[4]
Enterprise,T1113,Screen Capture,Derusbi is capable of performing screen captures.[4]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,Derusbi variants have been seen that use Registry persistence to proxy execution through regsvr32.exe.[6]
Enterprise,T1082,System Information Discovery,"Derusbi gathers the name of the local host, version of GNU Compiler Collection (GCC), and the system information about the CPU, machine, and operating system.[3]"
Enterprise,T1033,System Owner/User Discovery,"A Linux version of Derusbi checks if the victim user ID is anything other than zero (normally used for root), and the malware will not execute if it does not have root privileges. Derusbi also gathers the username of the victim.[3]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,MCMD can use HTTPS in communication with C2 web servers.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,MCMD can use Registry Run Keys for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,MCMD can launch a console process (cmd.exe) with redirected standard input and output.[1]
Enterprise,T1005,Data from Local System,MCMD has the ability to upload files from an infected device.[1]
Enterprise,T1564,Hide Artifacts: Hidden Window,MCMD can modify processes to prevent them from being visible on the desktop.[1]
Enterprise,T1070,Indicator Removal on Host,MCMD has the ability to remove set Registry Keys.[1]
Enterprise,T1105,Ingress Tool Transfer,MCMD can upload additional files to a compromised host.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,MCMD has been named Readme.txt to appear legitimate.[1]
Enterprise,T1027,Obfuscated Files or Information,MCMD can Base64 encode output strings prior to sending to C2.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,MCMD can use scheduled tasks for persistence.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Exaramel for Linux uses HTTPS for C2 communications.[1][2]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Exaramel for Linux has a command to execute a shell command on the system.[1][2]
Enterprise,T1543,Create or Modify System Process,Exaramel for Linux has a hardcoded location that it uses to achieve persistence if the startup system is Upstart or System V and it is running as root.[2]
Enterprise,T1543,Systemd Service,Exaramel for Linux has a hardcoded location under systemd that it uses to achieve persistence if it is running as root.[1][2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Exaramel for Linux can decrypt its configuration file.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Exaramel for Linux can uninstall its persistence mechanism and delete its configuration file.[2]
Enterprise,T1105,Ingress Tool Transfer,Exaramel for Linux has a command to download a file from and to a remote C2 server.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Exaramel for Linux uses RC4 for encrypting the configuration.[1][2]
Enterprise,T1053,Scheduled Task/Job: Cron,Exaramel for Linux uses crontab for persistence if it does not have root privileges.[1][2]
Enterprise,T1033,System Owner/User Discovery,Exaramel for Linux can run whoami to identify the system owner.[2]
Enterprise,T1560,Archive Collected Data,RunningRAT contains code to compress files.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,RunningRAT adds itself to the Registry key Software\Microsoft\Windows\CurrentVersion\Run to establish persistence upon reboot.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,RunningRAT uses a batch file to kill a security program task and then attempts to remove itself.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,RunningRAT kills antimalware running process.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,RunningRAT contains code to clear event logs.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,RunningRAT contains code to delete files from the victim’s machine.[1]
Enterprise,T1056,Input Capture: Keylogging,RunningRAT captures keystrokes and sends them back to the C2 server.[1]
Enterprise,T1082,System Information Discovery,"RunningRAT gathers the OS version, logical drives information, processor information, and volume information.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Zebrocy uses HTTP for C2.[1][2][7][3][8][6]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Zebrocy uses SMTP and POP3 for C2.[1][2][7][3][8][6]
Enterprise,T1560,Archive Collected Data,Zebrocy has used a method similar to RC4 as well as AES for encryption and hexadecimal for encoding data before exfiltration. [9][7][4]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Zebrocy creates an entry in a Registry Run key for the malware to execute on startup.[7][8][6]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Zebrocy uses cmd.exe to execute commands on the system.[8][4]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Zebrocy has the capability to upload dumper tools that extract credentials from web browsers and store them in database files.[8]
Enterprise,T1132,Data Encoding: Standard Encoding,Zebrocy has used URL/Percent Encoding on data exfiltrated via HTTP POST requests.[6]
Enterprise,T1074,Data Staged: Local Data Staging,Zebrocy stores all collected information in a single file before exfiltration.[7]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Zebrocy decodes its secondary payload and writes it to the victim’s machine. Zebrocy also uses AES and XOR to decrypt strings and payloads.[2][7]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Zebrocy uses SSL and AES ECB for encrypting C2 communications.[7][8][4]
Enterprise,T1041,Exfiltration Over C2 Channel,Zebrocy has exfiltrated data to the designated C2 server using HTTP POST requests.[6][4]
Enterprise,T1083,File and Directory Discovery,"Zebrocy searches for files that are 60mb and less and contain the following extensions: .doc, .docx, .xls, .xlsx, .ppt, .pptx, .exe, .zip, and .rar. Zebrocy also runs the echo %APPDATA% command to list the contents of the directory.[9][7][8] Zebrocy can obtain the current execution path as well as perform drive enumeration.[6][4]"
Enterprise,T1070,Indicator Removal on Host: File Deletion,Zebrocy has a command to delete files and directories.[7][8][4]
Enterprise,T1105,Ingress Tool Transfer,"Zebrocy obtains additional code to execute on the victim's machine, including the downloading of a secondary payload.[1][2][8][6]"
Enterprise,T1056,Input Capture: Credential API Hooking,"Zebrocy installs an application-defined Windows hook to get notified when a network drive has been attached, so it can then use the hook to call its RecordToFile file stealing method.[9]"
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Zebrocy's Delphi variant was packed with UPX.[3][6]
Enterprise,T1057,Process Discovery,"Zebrocy uses the tasklist and wmic process get Capture, ExecutablePath commands to gather the processes running on the system.[2][7][3][8][6]"
Enterprise,T1012,Query Registry,Zebrocy executes the reg query command to obtain information in the Registry.[8]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Zebrocy has a command to create a scheduled task for persistence.[4]
Enterprise,T1113,Screen Capture,A variant of Zebrocy captures screenshots of the victim’s machine in JPEG and BMP format.[2][7][3][8][6][4]
Enterprise,T1082,System Information Discovery,"Zebrocy collects the OS version, computer name and serial number for the storage volume C:. Zebrocy also runs the systeminfo command to gather system information. [1][2][7][3][8][6][4]"
Enterprise,T1016,System Network Configuration Discovery,Zebrocy runs the ipconfig /all command.[8]
Enterprise,T1049,System Network Connections Discovery,Zebrocy uses netstat -aon to gather network connection information.[8]
Enterprise,T1033,System Owner/User Discovery,Zebrocy gets the username from the system.[7][4]
Enterprise,T1124,System Time Discovery,Zebrocy gathers the current time zone and date information from the system.[7][4]
Enterprise,T1047,Windows Management Instrumentation,One variant of Zebrocy uses WMI queries to gather information.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BISCUIT has a command to launch a command shell on the system.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,BISCUIT uses SSL for encrypting C2 communications.[2]
Enterprise,T1105,Ingress Tool Transfer,BISCUIT has a command to download a file from the C2 server.[2]
Enterprise,T1056,Input Capture: Keylogging,BISCUIT can capture keystrokes.[2]
Enterprise,T1057,Process Discovery,BISCUIT has a command to enumerate running processes and identify their owners.[2]
Enterprise,T1113,Screen Capture,BISCUIT has a command to periodically take screenshots of the system.[2]
Enterprise,T1082,System Information Discovery,"BISCUIT has a command to collect the processor type, operation system, computer name, uptime, and whether the system is a laptop or PC.[2]"
Enterprise,T1033,System Owner/User Discovery,BISCUIT has a command to gather the username from the system.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Turian has the ability to use HTTP for its C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Turian can use WinRAR to create a password-protected archive for files of interest.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Turian can establish persistence by adding Registry Run keys.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Turian can create a remote shell and execute commands using cmd.[1]
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,Turian has the ability to use /bin/sh to execute commands.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Turian has the ability to use Python to spawn a Unix shell.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Turian can store copied files in a specific directory prior to exfiltration.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Turian has the ability to use a XOR decryption key to extract C2 server domains and IP addresses.[1]
Enterprise,T1083,File and Directory Discovery,Turian can search for specific files and list directories.[1]
Enterprise,T1105,Ingress Tool Transfer,Turian can download additional files and tools from its C2.[1]
Enterprise,T1036,Masquerading: Masquerade Task or Service,Turian can disguise as a legitimate service to blend into normal operations.[1]
Enterprise,T1027,Obfuscated Files or Information,Turian can use VMProtect for obfuscation.[1]
Enterprise,T1113,Screen Capture,Turian has the ability to take screenshots.[1]
Enterprise,T1082,System Information Discovery,"Turian can retrieve system information including OS version, memory usage, local hostname, and system adapter information.[1]"
Enterprise,T1016,System Network Configuration Discovery,Turian can retrieve the internal IP address of a compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Turian can retrieve usernames.[1]
Enterprise,T1087,Account Discovery: Local Account,POWERSTATS can retrieve usernames from compromised hosts.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,POWERSTATS uses PowerShell for obfuscation and execution.[1][4][5]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,POWERSTATS can use VBScript (VBE) code for execution.[4][5]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,POWERSTATS can use JavaScript code for execution.[4]
Enterprise,T1132,Data Encoding: Standard Encoding,POWERSTATS encoded C2 traffic with base64.[1]
Enterprise,T1005,Data from Local System,POWERSTATS can upload files from compromised hosts.[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,POWERSTATS can deobfuscate the main backdoor code.[4]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,POWERSTATS has encrypted C2 traffic with RSA.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,POWERSTATS can disable Microsoft Office Protected View by changing Registry keys.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"POWERSTATS can delete all files on the C:\, D:\, E:\ and, F:\ drives using PowerShell Remove-Item commands.[3]"
Enterprise,T1105,Ingress Tool Transfer,POWERSTATS can retrieve and execute additional PowerShell payloads from the C2 server.[3]
Enterprise,T1036,Masquerading: Masquerade Task or Service,"POWERSTATS has created a scheduled task named ""MicrosoftEdge"" to establish persistence.[4]"
Enterprise,T1027,Obfuscated Files or Information,"POWERSTATS uses character replacement, PowerShell environment variables, and XOR encoding to obfuscate code. POWERSTATS's backdoor code is a multi-layer obfuscated, encoded, and compressed blob. [3][4] POWERSTATS has used PowerShell code with custom string obfuscation [5]"
Enterprise,T1027,Binary Padding,POWERSTATS has used useless code blocks to counter analysis.[5]
Enterprise,T1057,Process Discovery,POWERSTATS has used get_tasklist to discover processes on the compromised host.[5]
Enterprise,T1090,Proxy: External Proxy,POWERSTATS has connected to C2 servers through proxies.[3]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"POWERSTATS has established persistence through a scheduled task using the command ""C:\Windows\system32\schtasks.exe"" /Create /F /SC DAILY /ST 12:00 /TN MicrosoftEdge /TR ""c:\Windows\system32\wscript.exe C:\Windows\temp\Windows.vbe"".[4]"
Enterprise,T1113,Screen Capture,POWERSTATS can retrieve screenshots from compromised hosts.[3][5]
Enterprise,T1518,Software Discovery: Security Software Discovery,POWERSTATS has detected security tools.[3]
Enterprise,T1218,System Binary Proxy Execution: Mshta,POWERSTATS can use Mshta.exe to execute additional payloads on compromised hosts.[3]
Enterprise,T1082,System Information Discovery,POWERSTATS can retrieve OS name/architecture and computer/domain name information from compromised hosts.[3][5]
Enterprise,T1016,System Network Configuration Discovery,"POWERSTATS can retrieve IP, network adapter configuration information, and domain from compromised hosts.[3][5]"
Enterprise,T1033,System Owner/User Discovery,POWERSTATS has the ability to identify the username on the compromised host.[5]
Enterprise,T1047,Windows Management Instrumentation,POWERSTATS can use WMI queries to retrieve data from compromised hosts.[3][4]
Enterprise,T1087,Account Discovery: Local Account,Mis-Type may create a file containing the results of the command cmd.exe /c net user {Username}.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Mis-Type network traffic can communicate over HTTP.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Mis-Type uses cmd.exe to run commands for enumerating the host.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Mis-Type uses Base64 encoding for C2 traffic.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Mis-Type saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[1][2]"
Enterprise,T1082,System Information Discovery,The initial beacon packet for Mis-Type contains the operating system version and file system of the victim.[1]
Enterprise,T1016,System Network Configuration Discovery,Mis-Type may create a file containing the results of the command cmd.exe /c ipconfig /all.[1]
Enterprise,T1033,System Owner/User Discovery,Mis-Type runs tests to determine the privilege level of the compromised user.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Carbon can use HTTP in C2 communications.[3]
Enterprise,T1543,Create or Modify System Process: Windows Service,Carbon establishes persistence by creating a service and naming it based off the operating system version running on the current machine.[1]
Enterprise,T1074,Data Staged: Local Data Staging,Carbon creates a base directory that contains the files and folders that are collected.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Carbon decrypts task and configuration files for execution.[1][3]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Carbon has used RSA encryption for C2 communications.[3]
Enterprise,T1027,Obfuscated Files or Information,Carbon encrypts configuration files and tasks for the malware to complete using CAST-128 algorithm.[1][3]
Enterprise,T1069,Permission Groups Discovery,Carbon uses the net group command.[4]
Enterprise,T1057,Process Discovery,Carbon can list the processes on the victim’s machine.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Carbon has a command to inject code into a process.[1]
Enterprise,T1012,Query Registry,Carbon enumerates values in the Registry.[1]
Enterprise,T1018,Remote System Discovery,Carbon uses the net view command.[4]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Carbon creates several tasks for later execution to continue persistence on the victim’s machine.[1]
Enterprise,T1016,System Network Configuration Discovery,"Carbon can collect the IP address of the victims and other computers on the network using the commands: ipconfig -all nbtstat -n, and nbtstat -s.[1][4]"
Enterprise,T1049,System Network Connections Discovery,Carbon uses the netstat -r and netstat -an commands.[4]
Enterprise,T1124,System Time Discovery,Carbon uses the command net time \127.0.0.1 to get information the system’s time.[4]
Enterprise,T1102,Web Service,Carbon can use Pastebin to receive C2 commands.[3]
Enterprise,T1087,Account Discovery: Domain Account,SILENTTRINITY can use System.Security.AccessControl namespaces to retrieve domain user information.[3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,SILENTTRINITY can establish a LNK file in the startup folder for persistence.[3]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,SILENTTRINITY can use PowerShell to execute commands.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,SILENTTRINITY can use cmd.exe to enable lateral movement using DCOM.[3]
Enterprise,T1059,Command and Scripting Interpreter: Python,SILENTTRINITY is written in Python and can use multiple Python scripts for execution on targeted systems.[1][3]
Enterprise,T1543,Create or Modify System Process: Windows Service,SILENTTRINITY can establish persistence by creating a new service.[3]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,SILENTTRINITY can collect clear text web credentials for Internet Explorer/Edge.[3]
Enterprise,T1555,Credentials from Password Stores: Windows Credential Manager,SILENTTRINITY can gather Windows Vault credentials.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,SILENTTRINITY can transfer files from an infected host to the C2 server.[3]
Enterprise,T1083,File and Directory Discovery,"SILENTTRINITY has several modules, such as ls.py, pwd.py, and recentFiles.py, to enumerate directories and files.[3]"
Enterprise,T1564,Hide Artifacts: Hidden Window,SILENTTRINITY has the ability to set its window state to hidden.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,SILENTTRINITY's amsiPatch.py module can disable Antimalware Scan Interface (AMSI) functions.[3]
Enterprise,T1562,Impair Defenses: Impair Command History Logging,SILENTTRINITY can bypass ScriptBlock logging to execute unmanaged PowerShell code from memory.[3]
Enterprise,T1070,Indicator Removal on Host,"SILENTTRINITY can remove artifacts from the compromised host, including created Registry keys.[3]"
Enterprise,T1070,File Deletion,SILENTTRINITY can remove files from the compromised host.[3]
Enterprise,T1105,Ingress Tool Transfer,"SILENTTRINITY can load additional files and tools, including Mimikatz.[3]"
Enterprise,T1056,Input Capture: Keylogging,SILENTTRINITY has a keylogging capability.[3]
Enterprise,T1056,Input Capture: GUI Input Capture,SILENTTRINITY's credphisher.py module can prompt a current user for their credentials.[3]
Enterprise,T1112,Modify Registry,"SILENTTRINITY can modify registry keys, including to enable or disable Remote Desktop Protocol (RDP).[3]"
Enterprise,T1106,Native API,SILENTTRINITY has the ability to leverage API including GetProcAddress and LoadLibrary.[3]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,SILENTTRINITY can create a memory dump of LSASS via the MiniDumpWriteDump Win32 API call.[3]
Enterprise,T1069,Permission Groups Discovery: Local Groups,SILENTTRINITY can obtain a list of local groups and members.[3]
Enterprise,T1069,Permission Groups Discovery: Domain Groups,SILENTTRINITY can use System.DirectoryServices namespace to retrieve domain group information.[3]
Enterprise,T1057,Process Discovery,"SILENTTRINITY can enumerate processes, including properties to determine if they have the Common Language Runtime (CLR) loaded.[3]"
Enterprise,T1055,Process Injection,SILENTTRINITY can inject shellcode directly into Excel.exe or a specific process.[3]
Enterprise,T1012,Query Registry,"SILENTTRINITY can use the GetRegValue function to check Registry keys within HKCU\Software\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated and HKLM\Software\Policies\Microsoft\Windows\Installer\AlwaysInstallElevated. It also contains additional modules that can check software AutoRun values and use the Win32 namespace to get values from HKCU, HKLM, HKCR, and HKCC hives.[3]"
Enterprise,T1021,Remote Services: Distributed Component Object Model,SILENTTRINITY can use System namespace methods to execute lateral movement using DCOM.[3]
Enterprise,T1021,Remote Services: Windows Remote Management,SILENTTRINITY tracks TrustedHosts and can move laterally to these targets via WinRM.[3]
Enterprise,T1018,Remote System Discovery,SILENTTRINITY can enumerate and collect the properties of domain computers.[3]
Enterprise,T1113,Screen Capture,SILENTTRINITY can take a screenshot of the current desktop.[3]
Enterprise,T1518,Software Discovery: Security Software Discovery,SILENTTRINITY can determine if an anti-virus product is installed through the resolution of the service's virtual SID.[2]
Enterprise,T1082,System Information Discovery,"SILENTTRINITY can collect information related to a compromised host, including OS version and a list of drives.[3]"
Enterprise,T1033,System Owner/User Discovery,SILENTTRINITY can gather a list of logged on users.[3]
Enterprise,T1124,System Time Discovery,SILENTTRINITY can collect start time information from a compromised host.[3]
Enterprise,T1047,Windows Management Instrumentation,SILENTTRINITY can use WMI for lateral movement.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,OceanSalt can create a reverse shell on the infected endpoint using cmd.exe.[1] OceanSalt has been executed via malicious macros.[1]
Enterprise,T1132,Data Encoding: Non-Standard Encoding,OceanSalt can encode data with a NOT operation before sending the data to the control server.[1]
Enterprise,T1083,File and Directory Discovery,OceanSalt can extract drive information from the endpoint and search files on the system.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,OceanSalt can delete files from the system.[1]
Enterprise,T1566,Phishing: Spearphishing Attachment,OceanSalt has been delivered via spearphishing emails with Microsoft Office attachments.[1]
Enterprise,T1057,Process Discovery,OceanSalt can collect the name and ID for every process running on the system.[1]
Enterprise,T1082,System Information Discovery,OceanSalt can collect the computer name from the system.[1]
Enterprise,T1016,System Network Configuration Discovery,OceanSalt can collect the victim’s IP address.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,WINDSHIELD is capable of file deletion along with other file system interaction.[1]
Enterprise,T1012,Query Registry,WINDSHIELD can gather Registry values.[1]
Enterprise,T1082,System Information Discovery,WINDSHIELD can gather the victim computer name.[1]
Enterprise,T1033,System Owner/User Discovery,WINDSHIELD can gather the victim user name.[1]
Enterprise,T1087,Account Discovery: Local Account,Empire can acquire local and domain user account information.[2]
Enterprise,T1087,Account Discovery: Domain Account,Empire can acquire local and domain user account information.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Empire can conduct command and control over protocols like HTTP and HTTPS.[2]
Enterprise,T1560,Archive Collected Data,Empire can ZIP directories on the target system.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Empire can modify the registry run keys HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Run and HKEY_LOCAL_MACHINE\Software\Microsoft\Windows\CurrentVersion\Run for persistence.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Security Support Provider,Empire can enumerate Security Support Providers (SSPs) as well as utilize PowerSploit's Install-SSP and Invoke-Mimikatz to install malicious SSPs and log authentication events.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Shortcut Modification,Empire can persist by modifying a .LNK file to include a backdoor.[2]
Enterprise,T1059,Command and Scripting Interpreter,Empire uses a command-line interface to interact with systems.[2]
Enterprise,T1059,PowerShell,Empire leverages PowerShell for the majority of its client-side agent tasks. Empire also contains the ability to conduct PowerShell remoting with the Invoke-PSRemoting module.[2][1]
Enterprise,T1059,Windows Command Shell,Empire has modules for executing scripts.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,Empire can utilize built-in modules to modify service binaries and restore them to their original state.[2]
Enterprise,T1555,Credentials from Password Stores: Credentials from Web Browsers,Empire can use modules that extract passwords from common web browsers such as Firefox and Chrome.[2]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,Empire can use TLS to encrypt its C2 channel.[2]
Enterprise,T1041,Exfiltration Over C2 Channel,Empire can send data gathered from a target through the command and control channel.[2]
Enterprise,T1083,File and Directory Discovery,Empire includes various modules for finding files of interest on hosts and network shares.[2]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Empire contains modules that can discover and exploit various DLL hijacking opportunities.[2]
Enterprise,T1574,Hijack Execution Flow: Dylib Hijacking,Empire has a dylib hijacker module that generates a malicious dylib given the path to a legitimate dylib of a vulnerable application.[2]
Enterprise,T1574,Hijack Execution Flow: Path Interception by PATH Environment Variable,Empire contains modules that can discover and exploit path interception opportunities in the PATH environment variable.[2]
Enterprise,T1574,Hijack Execution Flow: Path Interception by Search Order Hijacking,Empire contains modules that can discover and exploit search order hijacking vulnerabilities.[2]
Enterprise,T1574,Hijack Execution Flow: Path Interception by Unquoted Path,Empire contains modules that can discover and exploit unquoted path vulnerabilities.[2]
Enterprise,T1070,Indicator Removal on Host: Timestomp,Empire can timestomp any files or payloads placed on a target machine to help them blend in.[2]
Enterprise,T1105,Ingress Tool Transfer,Empire can upload and download to and from a victim machine.[2]
Enterprise,T1056,Input Capture: Keylogging,"Empire includes keylogging capabilities for Windows, Linux, and macOS systems.[2]"
Enterprise,T1056,Input Capture: Credential API Hooking,"Empire contains some modules that leverage API hooking to carry out tasks, such as netripper.[2]"
Enterprise,T1106,Native API,Empire contains a variety of enumeration modules that have an option to use API calls to carry out tasks.[2]
Enterprise,T1027,Obfuscated Files or Information,Empire has the ability to obfuscate commands using Invoke-Obfuscation.[2]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Empire contains an implementation of Mimikatz to gather credentials from memory.[2]
Enterprise,T1057,Process Discovery,Empire can find information about processes running on local and remote systems.[2]
Enterprise,T1055,Process Injection,"Empire contains multiple modules for injecting into processes, such as Invoke-PSInject.[2]"
Enterprise,T1021,Remote Services: Distributed Component Object Model,Empire can utilize Invoke-DCOM to leverage remote COM execution for lateral movement.[2]
Enterprise,T1021,Remote Services: SSH,Empire contains modules for executing commands over SSH as well as in-memory VNC agent injection.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Empire has modules to interact with the Windows task scheduler.[2]
Enterprise,T1113,Screen Capture,Empire is capable of capturing screenshots on Windows and macOS systems.[2]
Enterprise,T1518,Software Discovery: Security Software Discovery,Empire can enumerate antivirus software on the target.[2]
Enterprise,T1082,System Information Discovery,"Empire can enumerate host system information like OS, architecture, applied patches, and more.[2]"
Enterprise,T1016,System Network Configuration Discovery,Empire can acquire network configuration information like DNS servers and network proxies used by a host.[2]
Enterprise,T1049,System Network Connections Discovery,Empire can enumerate the current network connections of a host.[2]
Enterprise,T1569,System Services: Service Execution,Empire can use PsExec to execute a payload on a remote host.[2]
Enterprise,T1102,Web Service: Bidirectional Communication,Empire can use Dropbox and GitHub for C2.[2]
Enterprise,T1047,Windows Management Instrumentation,Empire can use WMI to deliver a payload to a remote host.[2]
Enterprise,T1087,Account Discovery,"XCSSET attempts to discover accounts from various locations such as a user's Evernote, AppleID, Telegram, Skype, and WeChat data.[1]"
Enterprise,T1560,Archive Collected Data,"XCSSET will compress entire ~/Desktop folders excluding all .git folders, but only if the total data size is under 200MB.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Unix Shell,"XCSSET uses a shell script to execute Mach-o files and osacompile commands such as, osacompile -x -o xcode.app main.applescript.[1]"
Enterprise,T1543,Create or Modify System Process: Launch Daemon,"XCSSET uses the ssh launchdaemon to elevate privileges, bypass system controls, and enable remote access to the victim.[1]"
Enterprise,T1005,Data from Local System,"XCSSET collects contacts and application data from files in Desktop, Documents, Downloads, Dropbox, and WeChat folders.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,XCSSET uses RC4 encryption over TCP to communicate with its C2 server.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,XCSSET exfiltrates data stolen from a system over its C2 channel.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,XCSSET uses a hidden folder named .xcassets and .git to embed itself in Xcode.[1]
Enterprise,T1574,Hijack Execution Flow: Dynamic Linker Hijacking,XCSSET adds malicious file paths to the DYLD_FRAMEWORK_PATH and DYLD_LIBRARY_PATH environment variables to execute malicious code.[1]
Enterprise,T1105,Ingress Tool Transfer,"XCSSET downloads browser specific AppleScript modules using a constructed URL with the curl command, https://"" & domain & ""/agent/scripts/"" & moduleName & "".applescript.[1]"
Enterprise,T1056,Input Capture: GUI Input Capture,XCSSET prompts the user to input credentials using a native macOS dialog box leveraging the system process /Applications/Safari.app/Contents/MacOS/SafariForWebKitDevelopment.[1]
Enterprise,T1036,Masquerading,XCSSET builds a malicious application bundle to resemble Safari through using the Safari icon and Info.plist. [1]
Enterprise,T1113,Screen Capture,XCSSET saves a screen capture of the victim's system with a numbered filename and .jpg extension. Screen captures are taken at specified intervals based on the system. [1]
Enterprise,T1518,Software Discovery,XCSSET uses ps aux with the grep command to enumerate common browsers and system processes potentially impacting XCSSET's exfiltration capabilities.[1]
Enterprise,T1518,Security Software Discovery,XCSSET searches firewall configuration files located in /Library/Preferences/ and uses csrutil status to determine if System Integrity Protection is enabled.[1]
Enterprise,T1082,System Information Discovery,XCSSET identifies the macOS version and uses ioreg to determine serial number.[1]
Enterprise,T1569,System Services: Launchctl,XCSSET loads a system level launchdaemon using the launchctl load -w command from /System/Librarby/LaunchDaemons/ssh.plist.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,"Using the machine's local time, XCSSET waits 43200 seconds (12 hours) from the initial creation timestamp of a specific file, .report. After the elapsed time, XCSSET executes additional modules.[1]"
Enterprise,T1059,Command and Scripting Interpreter,Bandook can support commands to execute Java-based payloads.[3]
Enterprise,T1059,PowerShell,Bandook has used PowerShell loaders as part of execution.[3]
Enterprise,T1059,Windows Command Shell,Bandook is capable of spawning a Windows command shell.[1][3]
Enterprise,T1059,Visual Basic,Bandook has used malicious VBA code against the target system.[3]
Enterprise,T1059,Python,Bandook can support commands to execute Python-based payloads.[3]
Enterprise,T1005,Data from Local System,Bandook can collect local files from the system .[3]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Bandook has decoded its PowerShell script.[3]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Bandook has used AES encryption for C2 communication.[3]
Enterprise,T1041,Exfiltration Over C2 Channel,Bandook can upload files from a victim's machine over the C2 channel.[3]
Enterprise,T1083,File and Directory Discovery,Bandook has a command to list files on a system.[3]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Bandook has a command to delete a file.[3]
Enterprise,T1105,Ingress Tool Transfer,Bandook can download files to the system.[3]
Enterprise,T1056,Input Capture: Keylogging,Bandook contains keylogging capabilities.[4]
Enterprise,T1106,Native API,Bandook has used the ShellExecuteW() function call.[3]
Enterprise,T1027,Obfuscated Files or Information: Steganography,Bandook has used .PNG images within a zip file to build the executable. [3]
Enterprise,T1566,Phishing: Spearphishing Attachment,Bandook is delivered via a malicious Word document inside a zip file.[3]
Enterprise,T1055,Process Injection: Process Hollowing,Bandook has been launched by starting iexplore.exe and replacing it with Bandook's payload.[2][1][3]
Enterprise,T1113,Screen Capture,Bandook is capable of taking an image of and uploading the current desktop.[2][3]
Enterprise,T1553,Subvert Trust Controls: Code Signing,Bandook was signed with valid Certum certificates.[3]
Enterprise,T1082,System Information Discovery,Bandook can collect information about the drives available on the system.[3]
Enterprise,T1016,System Network Configuration Discovery,Bandook has a command to get the public IP address from a system.[3]
Enterprise,T1204,User Execution: Malicious File,Bandook has used lure documents to convince the user to enable macros.[3]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HermeticWizard can use cmd.exe for execution on compromised hosts.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,HermeticWizard has the ability to use wevtutil cl system to clear event logs.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,HermeticWizard has been named exec_32.dll to mimic a legitimate MS Outlook .dll.[1]
Enterprise,T1106,Native API,HermeticWizard can connect to remote shares using WNetAddConnection2W.[1]
Enterprise,T1027,Obfuscated Files or Information,HermeticWizard has the ability to encrypt PE files with a reverse XOR loop.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,HermeticWizard can use a list of hardcoded credentials to to authenticate via NTLMSSP to the SMB shares on remote systems.[1]
Enterprise,T1018,Remote System Discovery,"HermeticWizard can find machines on the local network by gathering known local IP addresses through DNSGetCacheDataTable, GetIpNetTable,WNetOpenEnumW(RESOURCE_GLOBALNET, RESOURCETYPE_ANY),NetServerEnum,GetTcpTable, and GetAdaptersAddresses.[1]"
Enterprise,T1553,Subvert Trust Controls: Code Signing,HermeticWizard has been signed by valid certificates assigned to Hermetica Digital.[1]
Enterprise,T1218,System Binary Proxy Execution: Regsvr32,HermeticWizard has used regsvr32.exe /s /i to execute malicious payloads.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,HermeticWizard has the ability to create a new process using rundll32.[1]
Enterprise,T1569,System Services: Service Execution,HermeticWizard can use OpenRemoteServiceManager to create a service.[1]
Enterprise,T1047,Windows Management Instrumentation,HermeticWizard can use WMI to create a new process on a remote machine via C:\windows\system32\cmd.exe /c start C:\windows\system32\\regsvr32.exe /s /iC:\windows\<filename>.dll.[1]
Enterprise,T1071,Application Layer Protocol,Lucifer can use the Stratum protocol on port 10001 for communication between the cryptojacking bot and the mining server.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Lucifer can persist by setting Registry key values HKLM\Software\Microsoft\Windows\CurrentVersion\Run\QQMusic and HKCU\Software\Microsoft\Windows\CurrentVersion\Run\QQMusic.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Lucifer can issue shell commands to download and execute additional payloads.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Lucifer can decrypt its C2 address upon execution.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Lucifer can perform a decremental-xor encryption on the initial C2 request before sending it over the wire.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Lucifer can clear and remove event logs.[1]
Enterprise,T1105,Ingress Tool Transfer,Lucifer can download and execute a replica of itself using certutil.[1]
Enterprise,T1027,Obfuscated Files or Information: Software Packing,Lucifer has used UPX packed binaries.[1]
Enterprise,T1057,Process Discovery,Lucifer can identify the process that owns remote connections.[1]
Enterprise,T1012,Query Registry,Lucifer can check for existing stratum cryptomining information in HKLM\Software\Microsoft\Windows\CurrentVersion\spreadCpuXmr – %stratum info%.[1]
Enterprise,T1021,Remote Services: SMB/Windows Admin Shares,Lucifer can infect victims by brute forcing SMB.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Lucifer has established persistence by creating the following scheduled task schtasks /create /sc minute /mo 1 /tn QQMusic ^ /tr C:Users\%USERPROFILE%\Downloads\spread.exe /F.[1]
Enterprise,T1082,System Information Discovery,"Lucifer can collect the computer name, system architecture, default language, and processor frequency of a compromised host.[1]"
Enterprise,T1016,System Network Configuration Discovery,Lucifer can collect the IP address of a compromised host.[1]
Enterprise,T1049,System Network Connections Discovery,Lucifer can identify the IP and port numbers for all remote connections from the compromised host.[1]
Enterprise,T1033,System Owner/User Discovery,Lucifer has the ability to identify the username on a compromised host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,"Lucifer can check for specific usernames, computer names, device drivers, DLL's, and virtual devices associated with sandboxed environments and can enter an infinite loop and stop itself if any are detected.[1]"
Enterprise,T1047,Windows Management Instrumentation,Lucifer can use WMI to log into remote machines for propagation.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Goopy has the ability to communicate with its C2 over HTTP.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,Goopy has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Goopy has the ability to communicate with its C2 over DNS.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Goopy has the ability to use cmd.exe to execute commands passed from an Outlook C2 channel.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Goopy has the ability to use a Microsoft Outlook backdoor macro to communicate with its C2.[1]
Enterprise,T1005,Data from Local System,Goopy has the ability to exfiltrate documents from infected systems.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Goopy has used a polymorphic decryptor to decrypt itself at runtime.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,Goopy has the ability to exfiltrate data over the Microsoft Outlook C2 channel.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Side-Loading,"Goopy has the ability to side-load malicious DLLs with legitimate applications from Kaspersky, Microsoft, and Google.[1]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Goopy has the ability to disable Microsoft Outlook's security policies to disable macro warnings.[1]
Enterprise,T1070,Indicator Removal on Host,Goopy has the ability to delete emails used for C2 once the content has been copied.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Goopy has impersonated the legitimate goopdate.dll, which was dropped on the target system with a legitimate GoogleUpdate.exe.[1]"
Enterprise,T1106,Native API,Goopy has the ability to enumerate the infected system's user name via GetUserNameW.[1]
Enterprise,T1027,Obfuscated Files or Information,"Goopy's decrypter have been inflated with junk code in between legitimate API functions, and also included infinite loops to avoid analysis.[1]"
Enterprise,T1027,Binary Padding,Goopy has had null characters padded in its malicious DLL payload.[1]
Enterprise,T1057,Process Discovery,Goopy has checked for the Google Updater process to ensure Goopy was loaded properly.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Goopy has the ability to maintain persistence by creating scheduled tasks set to run every hour.[1]
Enterprise,T1033,System Owner/User Discovery,Goopy has the ability to enumerate the infected system's user name.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,"Netwalker has been written in PowerShell and executed directly in memory, avoiding detection.[1][2]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Operators deploying Netwalker have used batch scripts to retrieve the Netwalker payload.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"Netwalker's PowerShell script can decode and decrypt multiple layers of obfuscation, leading to the Netwalker DLL being loaded into memory.[2]"
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Netwalker can detect and terminate active security software-related processes on infected systems.[1][2]
Enterprise,T1105,Ingress Tool Transfer,Operators deploying Netwalker have used psexec and certutil to retrieve the Netwalker payload.[2]
Enterprise,T1112,Modify Registry,Netwalker can add the following registry entry: HKEY_CURRENT_USER\SOFTWARE{8 random characters}.[1]
Enterprise,T1106,Native API,Netwalker can use Windows API functions to inject the ransomware DLL.[1]
Enterprise,T1027,Obfuscated Files or Information,"Netwalker's PowerShell script has been obfuscated with multiple layers including base64 and hexadecimal encoding and XOR-encryption, as well as obfuscated PowerShell functions and variables. Netwalker's DLL has also been embedded within the PowerShell script in hex format.[1][2]"
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,The Netwalker DLL has been injected reflectively into the memory of a legitimate running process.[1]
Enterprise,T1518,Software Discovery: Security Software Discovery,Netwalker can detect and terminate active security software-related processes on infected systems.[1]
Enterprise,T1082,System Information Discovery,Netwalker can determine the system architecture it is running on to choose which version of the DLL to use.[1]
Enterprise,T1569,System Services: Service Execution,Operators deploying Netwalker have used psexec and certutil to retrieve the Netwalker payload.[2]
Enterprise,T1047,Windows Management Instrumentation,Netwalker can use WMI to delete Shadow Volumes.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,KEYMARBLE can execute shell commands using cmd.exe.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,KEYMARBLE uses a customized XOR algorithm to encrypt C2 communications.[1]
Enterprise,T1083,File and Directory Discovery,KEYMARBLE has a command to search for files on the victim’s machine.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,KEYMARBLE has the capability to delete files off the victim’s machine.[1]
Enterprise,T1105,Ingress Tool Transfer,KEYMARBLE can upload files to the victim’s machine and can download additional payloads.[1]
Enterprise,T1112,Modify Registry,KEYMARBLE has a command to create Registry entries for storing data under HKEY_CURRENT_USER\SOFTWARE\Microsoft\WABE\DataPath.[1]
Enterprise,T1057,Process Discovery,KEYMARBLE can obtain a list of running processes on the system.[1]
Enterprise,T1113,Screen Capture,KEYMARBLE can capture screenshots of the victim’s machine.[1]
Enterprise,T1082,System Information Discovery,"KEYMARBLE has the capability to collect the computer name, language settings, the OS version, CPU information, disk devices, and time elapsed since system start.[1]"
Enterprise,T1016,System Network Configuration Discovery,KEYMARBLE gathers the MAC address of the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Dacls can use HTTPS in C2 communications.[2][1]
Enterprise,T1543,Create or Modify System Process: Launch Agent,Dacls can establish persistence via a LaunchAgent.[2][1]
Enterprise,T1543,Create or Modify System Process: Launch Daemon,Dacls can establish persistence via a Launch Daemon.[2][1]
Enterprise,T1083,File and Directory Discovery,Dacls can scan directories on a compromised host.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,Dacls has had its payload named with a dot prefix to make it hidden from view in the Finder application.[2][1]
Enterprise,T1105,Ingress Tool Transfer,Dacls can download its payload from a C2 server.[2][1]
Enterprise,T1036,Masquerading,The Dacls Mach-O binary has been disguised as a .nib file.[2]
Enterprise,T1027,Obfuscated Files or Information,Dacls can encrypt its configuration file with AES CBC.[1]
Enterprise,T1057,Process Discovery,Dacls can collect data on running and parent processes.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,HotCroissant can remotely open applications on the infected host with the ShellExecuteA command.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,HotCroissant has compressed network communications and encrypted them with a custom stream cipher.[2][1]
Enterprise,T1041,Exfiltration Over C2 Channel,HotCroissant has the ability to download files from the infected host to the command and control (C2) server.[2]
Enterprise,T1083,File and Directory Discovery,HotCroissant has the ability to retrieve a list of files in a given directory as well as drives and drive types.[2]
Enterprise,T1564,Hide Artifacts: Hidden Window,HotCroissant has the ability to hide the window for operations performed on a given file.[2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,"HotCroissant has the ability to clean up installed files, delete files, and delete itself from the victim’s machine.[2]"
Enterprise,T1105,Ingress Tool Transfer,HotCroissant has the ability to upload a file from the command and control (C2) server to the victim machine.[2]
Enterprise,T1106,Native API,HotCroissant can perform dynamic DLL importing and API lookups using LoadLibrary and GetProcAddress on obfuscated strings.[1]
Enterprise,T1027,Obfuscated Files or Information,HotCroissant has encrypted strings with single-byte XOR and base64 encoded RC4.[2]
Enterprise,T1027,Software Packing,HotCroissant has used the open source UPX executable packer.[2]
Enterprise,T1057,Process Discovery,HotCroissant has the ability to list running processes on the infected host.[2]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,"HotCroissant has attempted to install a scheduled task named ""Java Maintenance64"" on startup to establish persistence.[2]"
Enterprise,T1113,Screen Capture,HotCroissant has the ability to do real time screen viewing on an infected host.[2]
Enterprise,T1518,Software Discovery,HotCroissant can retrieve a list of applications from the SOFTWARE\Microsoft\Windows\CurrentVersion\App Paths registry key.[2]
Enterprise,T1082,System Information Discovery,"HotCroissant has the ability to determine if the current user is an administrator, Windows product name, processor name, screen resolution, and physical RAM of the infected host.[1]"
Enterprise,T1016,System Network Configuration Discovery,HotCroissant has the ability to identify the IP address of the compromised machine.[1]
Enterprise,T1033,System Owner/User Discovery,HotCroissant has the ability to collect the username on the infected host.[2]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Hancitor has added Registry Run keys to establish persistence.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Hancitor has used PowerShell to execute commands.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Hancitor has decoded Base64 encoded URLs to insert a recipient’s name into the filename of the Word document. Hancitor has also extracted executables from ZIP files.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Hancitor has deleted files using the VBA kill function.[2]
Enterprise,T1105,Ingress Tool Transfer,Hancitor has the ability to download additional files from C2.[1]
Enterprise,T1106,Native API,Hancitor has used CallWindowProc and EnumResourceTypesA to interpret and execute shellcode.[2]
Enterprise,T1027,Obfuscated Files or Information,Hancitor has used Base64 to encode malicious links. Hancitor has also delivered compressed payloads in ZIP files to victims.[1][2]
Enterprise,T1566,Phishing: Spearphishing Attachment,Hancitor has been delivered via phishing emails with malicious attachments.[2]
Enterprise,T1566,Phishing: Spearphishing Link,Hancitor has been delivered via phishing emails which contained malicious links.[1]
Enterprise,T1218,System Binary Proxy Execution: Verclsid,Hancitor has used verclsid.exe to download and execute a malicious script.[3]
Enterprise,T1204,User Execution: Malicious Link,Hancitor has relied upon users clicking on a malicious link delivered through phishing.[1]
Enterprise,T1204,User Execution: Malicious File,"Hancitor has used malicious Microsoft Word documents, sent via email, which prompted the victim to enable macros.[2]"
Enterprise,T1497,Virtualization/Sandbox Evasion,"Hancitor has used a macro to check that an ActiveDocument shape object in the lure message is present. If this object is not found, the macro will exit without downloading additional payloads.[2]"
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,netsh can be used to disable local firewall settings.[1][3]
Enterprise,T1090,Proxy,netsh can be used to set up a proxy tunnel to allow remote host access to an infected host.[4]
Enterprise,T1518,Software Discovery: Security Software Discovery,netsh can be used to discover system firewall settings.[1][3]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,NanoCore creates a RunOnce key in the Registry to execute its VBS scripts each time the user logs on to the machine.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,NanoCore can open a remote command-line interface and execute commands.[3] NanoCore uses JavaScript files.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,NanoCore uses VBS files.[2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,NanoCore uses DES to encrypt the C2 traffic.[3]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,NanoCore can modify the victim's anti-virus.[1][3]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,NanoCore can modify the victim's firewall.[1][3]
Enterprise,T1105,Ingress Tool Transfer,NanoCore has the capability to download and activate additional modules for execution.[1][3]
Enterprise,T1056,Input Capture: Keylogging,NanoCore can perform keylogging on the victim’s machine.[3]
Enterprise,T1112,Modify Registry,NanoCore has the capability to edit the Registry.[1][3]
Enterprise,T1027,Obfuscated Files or Information,NanoCore’s plugins were obfuscated with Eazfuscater.NET 3.3.[3]
Enterprise,T1016,System Network Configuration Discovery,NanoCore gathers the IP address from the victim’s machine.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Aria-body has used HTTP in C2 communications.[1]
Enterprise,T1560,Archive Collected Data,Aria-body has used ZIP to compress data gathered on a compromised host.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Aria-body has established persistence via the Startup folder or Run Registry key.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Aria-body has the ability to decrypt the loader configuration and payload DLL.[1]
Enterprise,T1083,File and Directory Discovery,Aria-body has the ability to gather metadata from a file and to search for file and directory names.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Aria-body has the ability to delete files and directories on compromised hosts.[1]
Enterprise,T1105,Ingress Tool Transfer,Aria-body has the ability to download additional payloads from C2.[1]
Enterprise,T1106,Native API,Aria-body has the ability to launch files using ShellExecute.[1]
Enterprise,T1027,Obfuscated Files or Information,Aria-body has used an encrypted configuration file for its loader.[1]
Enterprise,T1057,Process Discovery,Aria-body has the ability to enumerate loaded modules for a process.[1].
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Aria-body has the ability to inject itself into another process such as rundll32.exe and dllhost.exe.[1]
Enterprise,T1090,Proxy,Aria-body has the ability to use a reverse SOCKS proxy module.[1]
Enterprise,T1113,Screen Capture,Aria-body has the ability to capture screenshots on compromised hosts.[1]
Enterprise,T1082,System Information Discovery,"Aria-body has the ability to identify the hostname, computer name, Windows version, processor speed, machine GUID, and disk information on a compromised host.[1]"
Enterprise,T1016,System Network Configuration Discovery,"Aria-body has the ability to identify the location, public IP address, and domain name on a compromised host.[1]"
Enterprise,T1049,System Network Connections Discovery,Aria-body has the ability to gather TCP and UDP table status listings.[1]
Enterprise,T1033,System Owner/User Discovery,Aria-body has the ability to identify the username on a compromised host.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Misdat is capable of providing shell functionality to the attacker to execute commands.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Misdat network traffic is Base64-encoded plaintext.[1]
Enterprise,T1083,File and Directory Discovery,"Misdat is capable of running commands to obtain a list of files and directories, as well as enumerating logical drives.[1]"
Enterprise,T1070,Indicator Removal on Host,Misdat is capable of deleting Registry keys used for persistence.[1]
Enterprise,T1070,File Deletion,Misdat is capable of deleting the backdoor file.[1]
Enterprise,T1070,Timestomp,"Many Misdat samples were programmed using Borland Delphi, which will mangle the default PE compile timestamp of a file.[1]"
Enterprise,T1105,Ingress Tool Transfer,Misdat is capable of downloading files from the C2.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,"Misdat saves itself as a file named msdtc.exe, which is also the name of the legitimate Microsoft Distributed Transaction Coordinator service binary.[1][2]"
Enterprise,T1082,System Information Discovery,The initial beacon packet for Misdat contains the operating system version of the victim.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Remexi uses BITSAdmin to communicate with the C2 server over HTTP.[1]
Enterprise,T1560,Archive Collected Data,Remexi encrypts and adds all gathered browser data into files for upload to C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Remexi utilizes Run Registry keys in the HKLM hive as a persistence mechanism.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Winlogon Helper DLL,Remexi achieves persistence using Userinit by adding the Registry key HKLM\Software\Microsoft\Windows NT\CurrentVersion\Winlogon\Userinit.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Remexi silently executes received commands with cmd.exe.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,Remexi uses AutoIt and VBS scripts throughout its execution process.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Remexi decrypts the configuration data using XOR with 25-character keys.[1]
Enterprise,T1041,Exfiltration Over C2 Channel,"Remexi performs exfiltration over BITSAdmin, which is also used for the C2 channel.[1]"
Enterprise,T1083,File and Directory Discovery,Remexi searches for files on the system. [1]
Enterprise,T1056,Input Capture: Keylogging,Remexi gathers and exfiltrates keystrokes from the machine.[1]
Enterprise,T1027,Obfuscated Files or Information,Remexi obfuscates its configuration data with XOR.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,Remexi utilizes scheduled tasks as a persistence mechanism.[1]
Enterprise,T1113,Screen Capture,Remexi takes screenshots of windows of interest.[1]
Enterprise,T1047,Windows Management Instrumentation,Remexi executes received commands with wmic.exe (for WMI commands). [1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,DownPaper communicates to its C2 server over HTTP.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,DownPaper uses PowerShell to add a Registry Run key in order to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,DownPaper uses PowerShell for execution.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,DownPaper uses the command line.[1]
Enterprise,T1012,Query Registry,DownPaper searches and reads the value of the Windows Update Registry Run key.[1]
Enterprise,T1082,System Information Discovery,"DownPaper collects the victim host name and serial number, and then sends the information to the C2 server.[1]"
Enterprise,T1033,System Owner/User Discovery,DownPaper collects the victim username and sends it to the C2 server.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Starloader decrypts and executes shellcode from a file called Stars.jps.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Starloader has masqueraded as legitimate software update packages such as Adobe Acrobat Reader and Intel.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Pysa has used Powershell scripts to deploy its ransomware.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,Pysa has used Python scripts to deploy ransomware.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify Tools,Pysa has the capability to stop antivirus services and disable Windows Defender.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Pysa has deleted batch files after execution. [1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,Pysa has executed a malicious executable by naming it svchost.exe.[1]
Enterprise,T1112,Modify Registry,"Pysa has modified the registry key ""SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System"" and added the ransom note.[1]"
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Pysa can perform OS credential dumping using Mimikatz.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Pysa has laterally moved using RDP connections.[1]
Enterprise,T1016,System Network Configuration Discovery,Pysa can perform network reconnaissance using the Advanced IP Scanner tool.[1]
Enterprise,T1569,System Services: Service Execution,Pysa has used PsExec to copy and execute the ransomware.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,ConnectWise can be used to execute PowerShell commands on target machines.[1]
Enterprise,T1113,Screen Capture,ConnectWise can take screenshots on remote hosts.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,The Carbanak malware communicates to its command server using HTTP with an encrypted payload.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Carbanak stores a configuration files in the startup directory to automatically execute commands in order to persist across reboots.[2]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Carbanak has a command to create a reverse shell.[2]
Enterprise,T1132,Data Encoding: Standard Encoding,Carbanak encodes the message body of HTTP traffic with Base64.[1][2]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Carbanak encrypts the message body of HTTP traffic with RC2 (in CBC mode). Carbanak also uses XOR with random keys for its communications.[1][2]
Enterprise,T1070,Indicator Removal on Host: File Deletion,Carbanak has a command to delete files.[2]
Enterprise,T1056,Input Capture: Keylogging,Carbanak logs key strokes for configured processes and sends them back to the C2 server.[1][2]
Enterprise,T1027,Obfuscated Files or Information,Carbanak encrypts strings to make analysis more difficult.[2]
Enterprise,T1003,OS Credential Dumping,Carbanak obtains Windows logon password details.[2]
Enterprise,T1057,Process Discovery,Carbanak lists running processes.[2]
Enterprise,T1055,Process Injection: Portable Executable Injection,Carbanak downloads an executable and injects it directly into a new process.[2]
Enterprise,T1012,Query Registry,Carbanak checks the Registry key HKCU\Software\Microsoft\Windows\CurrentVersion\Internet Settings for proxy configurations information.[2]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Carbanak enables concurrent Remote Desktop Protocol (RDP) sessions.[2]
Enterprise,T1113,Screen Capture,Carbanak performs desktop video recording and captures screenshots of the desktop and sends it to the C2 server.[2]
Enterprise,T1087,Account Discovery: Local Account,"Pupy uses PowerView and Pywerview to perform discovery commands such as net user, net group, net local group, etc.[1]"
Enterprise,T1071,Application Layer Protocol: Web Protocols,Pupy can communicate over HTTP for C2.[1]
Enterprise,T1560,Archive Collected Data: Archive via Utility,Pupy can compress data with Zip before sending it over C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Pupy adds itself to the startup folder or adds itself to the Registry key SOFTWARE\Microsoft\Windows\CurrentVersion\Run for persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,Pupy has a module for loading and executing PowerShell scripts.[1]
Enterprise,T1059,Command and Scripting Interpreter: Python,"Pupy can use an add on feature when creating payloads that allows you to create custom Python scripts (""scriptlets"") to perform tasks offline (without requiring a session) such as sandbox detection, adding persistence, etc.[1]"
Enterprise,T1543,Create or Modify System Process: Systemd Service,Pupy can be used to establish persistence using a systemd service.[1]
Enterprise,T1555,Credentials from Password Stores,Pupy can use Lazagne for harvesting credentials.[1]
Enterprise,T1555,Credentials from Web Browsers,Pupy can use Lazagne for harvesting credentials.[1]
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,"Pupy's default encryption for its C2 communication channel is SSL, but it also has transport options for RSA and AES.[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,"Pupy can send screenshots files, keylogger data, files, and recorded audio back to the C2 server.[1]"
Enterprise,T1083,File and Directory Discovery,Pupy can walk through directories and recursively search for strings in files.[1]
Enterprise,T1070,Indicator Removal on Host: Clear Windows Event Logs,Pupy has a module to clear event logs with PowerShell.[1]
Enterprise,T1105,Ingress Tool Transfer,Pupy can upload and download to/from a victim machine.[1]
Enterprise,T1056,Input Capture: Keylogging,Pupy uses a keylogger to capture keystrokes it then sends back to the server after it is stopped.[1]
Enterprise,T1003,OS Credential Dumping: LSASS Memory,Pupy can execute Lazagne as well as Mimikatz using PowerShell.[1]
Enterprise,T1003,OS Credential Dumping: LSA Secrets,Pupy can use Lazagne for harvesting credentials.[1]
Enterprise,T1003,OS Credential Dumping: Cached Domain Credentials,Pupy can use Lazagne for harvesting credentials.[1]
Enterprise,T1057,Process Discovery,Pupy can list the running processes and get the process ID and parent process’s ID.[1]
Enterprise,T1055,Process Injection: Dynamic-link Library Injection,Pupy can migrate into another process using reflective DLL injection.[1]
Enterprise,T1021,Remote Services: Remote Desktop Protocol,Pupy can enable/disable RDP connection and can start a remote desktop session using a browser web socket client.[1]
Enterprise,T1113,Screen Capture,Pupy can drop a mouse-logger that will take small screenshots around at each click and then send back to the server.[1]
Enterprise,T1082,System Information Discovery,"Pupy can grab a system’s information including the OS version, architecture, etc.[1]"
Enterprise,T1016,System Network Configuration Discovery,Pupy has built in commands to identify a host’s IP address and find out other network configuration settings by viewing connected sessions.[1]
Enterprise,T1049,System Network Connections Discovery,"Pupy has a built-in utility command for netstat, can do net session through PowerView, and has an interactive shell which can be used to discover additional information.[1]"
Enterprise,T1033,System Owner/User Discovery,Pupy can enumerate local information for Linux hosts and find currently logged on users for Windows hosts.[1]
Enterprise,T1569,System Services: Service Execution,Pupy uses PsExec to execute a payload or commands on a remote host.[1]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,Pupy has a module that checks a number of indicators on the system to determine if its running on a virtual machine.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,WastedLocker has used cmd to execute commands on the system.[2]
Enterprise,T1543,Create or Modify System Process: Windows Service,WastedLocker created and established a service that runs until the encryption process is complete.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"WastedLocker's custom cryptor, CryptOne, used an XOR based algorithm to decrypt the payload.[2]"
Enterprise,T1083,File and Directory Discovery,WastedLocker can enumerate files and directories just prior to encryption.[2]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,WastedLocker has copied a random file from the Windows System32 folder to the %APPDATA% location under a different hidden filename.[2]
Enterprise,T1564,Hide Artifacts: NTFS File Attributes,WastedLocker has the ability to save and execute files as an alternate data stream (ADS).[3]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,WastedLocker has performed DLL hijacking before execution.[2]
Enterprise,T1112,Modify Registry,WastedLocker can modify registry values within the Software\Microsoft\Windows\CurrentVersion\Internet Settings\ZoneMap registry key.[2]
Enterprise,T1106,Native API,"WastedLocker's custom crypter, CryptOne, leveraged the VirtualAlloc() API function to help execute the payload.[2]"
Enterprise,T1027,Obfuscated Files or Information,The WastedLocker payload includes encrypted strings stored within the .bss section of the binary file.[2]
Enterprise,T1027,Binary Padding,WastedLocker contains junk code to increase its entropy and hide the actual code.[2]
Enterprise,T1012,Query Registry,WastedLocker checks for specific registry keys related to the UCOMIEnumConnections and IActiveScriptParseProcedure32 interfaces.[2]
Enterprise,T1569,System Services: Service Execution,WastedLocker can execute itself as a service.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: System Checks,WastedLocker checked if UCOMIEnumConnections and IActiveScriptParseProcedure32 Registry keys were detected as part of its anti-analysis technique.[2]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BackConfig has the ability to use HTTPS for C2 communiations.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,BackConfig can download and run batch files to execute commands on a compromised host.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,BackConfig has used VBS to install its downloader component and malicious documents with VBA macro code.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BackConfig has used a custom routine to decrypt strings.[1]
Enterprise,T1083,File and Directory Discovery,BackConfig has the ability to identify folders and files related to previous infections.[1]
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,BackConfig has the ability to set folders or files to be hidden from the Windows Explorer default view.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,BackConfig has the ability to remove files and folders related to previous infections.[1]
Enterprise,T1105,Ingress Tool Transfer,BackConfig can download and execute additional payloads on a compromised host.[1]
Enterprise,T1036,Masquerading: Match Legitimate Name or Location,BackConfig has hidden malicious payloads in %USERPROFILE%\Adobe\Driver\dwg\ and mimicked the legitimate DHCP service binary.[1]
Enterprise,T1106,Native API,BackConfig can leverage API functions such as ShellExecuteA and HttpOpenRequestA in the process of downloading and executing files.[1]
Enterprise,T1027,Obfuscated Files or Information,BackConfig has used compressed and decimal encoded VBS scripts.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,BackConfig has the ability to use scheduled tasks to repeatedly execute malicious payloads on a compromised host.[1]
Enterprise,T1553,Subvert Trust Controls: Code Signing,BackConfig has been signed with self signed digital certificates mimicking a legitimate software company.[1]
Enterprise,T1082,System Information Discovery,BackConfig has the ability to gather the victim's computer name.[1]
Enterprise,T1204,User Execution: Malicious Link,BackConfig has compromised victims via links to URLs hosting malicious content.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,SDelete deletes data in a way that makes it unrecoverable.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,"WannaCry creates the service ""mssecsvc2.0"" with the display name ""Microsoft Security Center (2.0) Service.""[1][4]"
Enterprise,T1573,Encrypted Channel: Asymmetric Cryptography,WannaCry uses Tor for command and control traffic and routes a custom cryptographic protocol over the Tor circuit.[5]
Enterprise,T1083,File and Directory Discovery,"WannaCry searches for variety of user files by file extension before encrypting them using RSA and AES, including Office, PDF, image, audio, video, source code, archive/compression format, and key and certificate files.[1][4]"
Enterprise,T1564,Hide Artifacts: Hidden Files and Directories,WannaCry uses attrib +h to make some of its files hidden.[1]
Enterprise,T1090,Proxy: Multi-hop Proxy,WannaCry uses Tor for command and control traffic.[5]
Enterprise,T1018,Remote System Discovery,WannaCry scans its local network segment for remote systems to try to exploit and copy itself to.[5]
Enterprise,T1016,System Network Configuration Discovery,WannaCry will attempt to determine the local network segment it is a part of.[5]
Enterprise,T1047,Windows Management Instrumentation,WannaCry utilizes wmic to delete shadow copies.[1][4][5]
Enterprise,T1071,Application Layer Protocol: Web Protocols,Final1stspy uses HTTP for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Final1stspy creates a Registry Run key to establish persistence.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,Final1stspy uses Python code to deobfuscate base64-encoded strings.[1]
Enterprise,T1027,Obfuscated Files or Information,Final1stspy obfuscates strings with base64 encoding.[1]
Enterprise,T1057,Process Discovery,Final1stspy obtains a list of running processes.[1]
Enterprise,T1082,System Information Discovery,Final1stspy obtains victim Microsoft Windows version information and CPU architecture.[1]
Enterprise,T1087,Account Discovery: Domain Account,"BoomBox has the ability to execute an LDAP query to enumerate the distinguished name, SAM account name, and display name for all domain users.[1]"
Enterprise,T1087,Account Discovery: Email Account,BoomBox can execute an LDAP query to discover e-mail accounts for domain users.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BoomBox has used HTTP POST requests for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,BoomBox can establish persistence by writing the Registry value MicroNativeCacheSvc to HKCU\Software\Microsoft\Windows\CurrentVersion\Run.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BoomBox can decrypt AES-encrypted files downloaded from C2.[1]
Enterprise,T1083,File and Directory Discovery,BoomBox can search for specific files and directories on a machine.[1]
Enterprise,T1105,Ingress Tool Transfer,BoomBox has the ability to download next stage malware components to a compromised system.[1]
Enterprise,T1036,Masquerading,BoomBox has the ability to mask malicious data strings as PDF files.[1]
Enterprise,T1027,Obfuscated Files or Information,BoomBox can encrypt data using AES prior to exfiltration.[1]
Enterprise,T1218,System Binary Proxy Execution: Rundll32,BoomBox can use RunDLL32 for execution.[1]
Enterprise,T1082,System Information Discovery,"BoomBox can enumerate the hostname, domain, and IP of a compromised host.[1]"
Enterprise,T1033,System Owner/User Discovery,BoomBox can enumerate the username on a compromised host.[1]
Enterprise,T1204,User Execution: Malicious File,BoomBox has gained execution through user interaction with a malicious file.[1]
Enterprise,T1102,Web Service,BoomBox can download files from Dropbox using a hardcoded access token.[1]
Enterprise,T1071,Application Layer Protocol: DNS,Cobian RAT uses DNS for C2.[1]
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,Cobian RAT creates an autostart Registry key to ensure persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,Cobian RAT can launch a remote command shell interface for executing commands.[1]
Enterprise,T1132,Data Encoding: Standard Encoding,Cobian RAT obfuscates communications with the C2 server using Base64 encoding.[1]
Enterprise,T1056,Input Capture: Keylogging,Cobian RAT has a feature to perform keylogging on the victim’s machine.[1]
Enterprise,T1113,Screen Capture,Cobian RAT has a feature to perform screen capture.[1]
Enterprise,T1071,Application Layer Protocol: Mail Protocols,"NavRAT uses the email platform, Naver, for C2 communications, leveraging SMTP.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,NavRAT creates a Registry key to ensure a file gets executed upon reboot in order to establish persistence.[1]
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,NavRAT leverages cmd.exe to perform discovery techniques.[1] NavRAT loads malicious shellcode and executes it in memory.[1]
Enterprise,T1074,Data Staged: Local Data Staging,NavRAT writes multiple outputs to a TMP file using the >> method.[1]
Enterprise,T1105,Ingress Tool Transfer,NavRAT can download files remotely.[1]
Enterprise,T1056,Input Capture: Keylogging,NavRAT logs the keystrokes on the targeted system.[1]
Enterprise,T1057,Process Discovery,NavRAT uses tasklist /v to check running processes.[1]
Enterprise,T1055,Process Injection,NavRAT copies itself into a running Internet Explorer process to evade detection.[1]
Enterprise,T1082,System Information Discovery,NavRAT uses systeminfo on a victim’s machine.[1]
Enterprise,T1087,Account Discovery: Local Account,SHOTPUT has a command to retrieve information about connected users.[3]
Enterprise,T1083,File and Directory Discovery,SHOTPUT has a command to obtain a directory listing.[3]
Enterprise,T1027,Obfuscated Files or Information,SHOTPUT is obscured using XOR encoding and appended to a valid GIF file.[1][3]
Enterprise,T1057,Process Discovery,SHOTPUT has a command to obtain a process listing.[3]
Enterprise,T1018,Remote System Discovery,"SHOTPUT has a command to list all servers in the domain, as well as one to locate domain controllers on a domain.[3]"
Enterprise,T1049,System Network Connections Discovery,SHOTPUT uses netstat to list TCP connection status.[3]
Enterprise,T1560,Archive Collected Data: Archive via Library,BADFLICK has compressed data using the aPLib compression library.[2]
Enterprise,T1005,Data from Local System,BADFLICK has uploaded files from victims' machines.[2]
Enterprise,T1140,Deobfuscate/Decode Files or Information,BADFLICK can decode shellcode using a custom rotating XOR cipher.[2]
Enterprise,T1083,File and Directory Discovery,BADFLICK has searched for files on the infected host.[2]
Enterprise,T1105,Ingress Tool Transfer,BADFLICK has download files from its C2 server.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,BADFLICK has been distributed via spearphishing campaigns containing malicious Microsoft Word documents.[2]
Enterprise,T1082,System Information Discovery,"BADFLICK has captured victim computer name, memory space, and CPU details.[2]"
Enterprise,T1016,System Network Configuration Discovery,BADFLICK has captured victim IP address details.[2]
Enterprise,T1204,User Execution: Malicious File,BADFLICK has relied upon users clicking on a malicious attachment delivered through spearphishing.[2]
Enterprise,T1497,Virtualization/Sandbox Evasion: Time Based Evasion,BADFLICK has delayed communication to the actor-controlled IP address by 5 minutes.[2]
Enterprise,T1059,Command and Scripting Interpreter: PowerShell,JSS Loader has the ability to download and execute PowerShell scripts.[2]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,JSS Loader can download and execute VBScript files.[2]
Enterprise,T1059,Command and Scripting Interpreter: JavaScript,JSS Loader can download and execute JavaScript files.[2]
Enterprise,T1105,Ingress Tool Transfer,JSS Loader has the ability to download malicious executables to a compromised host.[2]
Enterprise,T1566,Phishing: Spearphishing Attachment,JSS Loader has been delivered by phishing emails containing malicious Microsoft Excel attachments.[1]
Enterprise,T1053,Scheduled Task/Job: Scheduled Task,JSS Loader has the ability to launch scheduled tasks to establish persistence.[2]
Enterprise,T1204,User Execution: Malicious File,JSS Loader has been executed through malicious attachments contained in spearphishing emails.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Downdelph uses RC4 to encrypt C2 responses.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Downdelph uses search order hijacking of the Windows executable sysprep.exe to escalate privileges.[1]
Enterprise,T1105,Ingress Tool Transfer,"After downloading its main config file, Downdelph downloads multiple payloads from C2 servers.[1]"
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,Downdelph uses RC4 to encrypt C2 responses.[1]
Enterprise,T1574,Hijack Execution Flow: DLL Search Order Hijacking,Downdelph uses search order hijacking of the Windows executable sysprep.exe to escalate privileges.[1]
Enterprise,T1105,Ingress Tool Transfer,"After downloading its main config file, Downdelph downloads multiple payloads from C2 servers.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,TYPEFRAME can uninstall malware components using a batch script.[1] TYPEFRAME can execute commands using a shell.[1]
Enterprise,T1059,Command and Scripting Interpreter: Visual Basic,TYPEFRAME has used a malicious Word document for delivery with VBA macros for execution.[1]
Enterprise,T1543,Create or Modify System Process: Windows Service,TYPEFRAME variants can add malicious DLL modules as new services.TYPEFRAME can also delete services from the victim’s machine.[1]
Enterprise,T1140,Deobfuscate/Decode Files or Information,"One TYPEFRAME variant decrypts an archive using an RC4 key, then decompresses and installs the decrypted malicious DLL module. Another variant decodes the embedded file by XORing it with the value ""0x35"".[1]"
Enterprise,T1083,File and Directory Discovery,TYPEFRAME can search directories for files on the victim’s machine.[1]
Enterprise,T1562,Impair Defenses: Disable or Modify System Firewall,TYPEFRAME can open the Windows Firewall on the victim’s machine to allow incoming connections.[1]
Enterprise,T1070,Indicator Removal on Host: File Deletion,TYPEFRAME can delete files off the system.[1]
Enterprise,T1105,Ingress Tool Transfer,TYPEFRAME can upload and download files to the victim’s machine.[1]
Enterprise,T1112,Modify Registry,TYPEFRAME can install encrypted configuration data under the Registry key HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\ShellCompatibility\Applications\laxhost.dll and HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\PrintConfigs.[1]
Enterprise,T1027,Obfuscated Files or Information,APIs and strings in some TYPEFRAME variants are RC4 encrypted. Another variant is encoded with XOR.[1]
Enterprise,T1090,Proxy,A TYPEFRAME variant can force the compromised system to function as a proxy server.[1]
Enterprise,T1082,System Information Discovery,TYPEFRAME can gather the disk volume information.[1]
Enterprise,T1204,User Execution: Malicious File,A Word document delivering TYPEFRAME prompts the user to enable macro execution.[1]
Enterprise,T1071,Application Layer Protocol: Web Protocols,BUBBLEWRAP can communicate using HTTP or HTTPS.[1]
Enterprise,T1082,System Information Discovery,"BUBBLEWRAP collects system information, including the operating system version and hostname.[1]"
Enterprise,T1071,Application Layer Protocol,Adversaries can also use NETEAGLE to establish an RDP connection with a controller over TCP/7519.
Enterprise,T1071,Web Protocols,"NETEAGLE will attempt to detect if the infected host is configured to a proxy. If so, NETEAGLE will send beacons via an HTTP POST request. NETEAGLE will also use HTTP to download resources that contain an IP address and Port Number pair to connect to for further C2.[1]"
Enterprise,T1547,Boot or Logon Autostart Execution: Registry Run Keys / Startup Folder,"The ""SCOUT"" variant of NETEAGLE achieves persistence by adding itself to the HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\Windows\CurrentVersion\Run Registry key.[1]"
Enterprise,T1059,Command and Scripting Interpreter: Windows Command Shell,NETEAGLE allows adversaries to execute shell commands on the infected host.[1]
Enterprise,T1573,Encrypted Channel: Symmetric Cryptography,"NETEAGLE will decrypt resources it downloads with HTTP requests by using RC4 with the key ""ScoutEagle.""[1]"
Enterprise,T1041,Exfiltration Over C2 Channel,NETEAGLE is capable of reading files over the C2 channel.[1]
Enterprise,T1083,File and Directory Discovery,"NETEAGLE allows adversaries to enumerate and modify the infected host's file system. It supports searching for directories, creating directories, listing directory contents, reading and writing to files, retrieving file attributes, and retrieving volume information.[1]"
Enterprise,T1057,Process Discovery,NETEAGLE can send process listings over the C2 channel.[1]
Enterprise,T1087,Account Discovery: Email Account,Ruler can be used to enumerate Exchange users and dump the GAL.[1]
